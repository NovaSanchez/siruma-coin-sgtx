{
	"id": "ec1dda2f545e93940f15fdafbbb4219c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"TokenSGTX/contracts/SGTX.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.20;\n\n// import {IERC20} from \"./Examples_Contracts/IERC20.sol\";\n// import {IERC20Errors} from \"./Examples_Contracts/draft-IERC6093.sol\";\n\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`â€™s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n\n\ncontract SigatTokenX is IERC20, IERC20Errors {\n    address private _owner;\n    string private _name;\n    string private _symbol;\n    uint256 private _supply;\n    uint8 private _decimals;\n    bool private _paused;\n    bool private _freeTranfer;\n\n    mapping(address => uint256) public _balances;\n    mapping(address => bool) public _holders;\n    mapping(address => bool) public _freeze;\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    event Paused(\n        address indexed currentOwner,\n        uint256 indexed timeStamp,\n        bool indexed paused\n    );\n    event FreeTranfered(\n        address indexed currentOwner,\n        uint256 indexed timeStamp,\n        bool indexed freeTranfer\n    );\n\n    constructor(\n        string memory name_,\n        string memory symbol_,\n        uint256 supply_,\n        uint8 decimals_\n    ) {\n        _owner = msg.sender;\n        _supply = supply_;\n        _name = name_;\n        _symbol = symbol_;\n        _decimals = decimals_;\n        _paused = false;\n        _freeTranfer = false;\n        _balances[msg.sender] = _supply;\n    }\n\n    function totalSupply() public view returns (uint256) {\n        return _supply;\n    }\n\n    function balanceOf(address account) public view returns (uint256) {\n        return _balances[account];\n    }\n\n    function transfer(\n        address to,\n        uint256 value\n    ) public virtual RPaused isFreeze returns (bool) {\n        require(\n            msg.sender == _owner || _freeTranfer,\n            \"Tranfer is not allowed to user only Owner can set\"\n        );\n        address from = msg.sender;\n        _update(from, to, value);\n        return true;\n    }\n\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    function approve(\n        address spender,\n        uint256 value\n    ) public virtual RPaused isFreeze returns (bool) {\n        address owner = msg.sender;\n        if (!_freeTranfer) {\n            spender = _owner;\n        }\n        _approve(owner, spender, value, true);\n        return true;\n    }\n\n    function increaseAllowance(\n        address spender,\n        uint256 addedValue\n    ) public virtual RPaused isFreeze returns (bool) {\n        address owner = msg.sender;\n        _approve(owner, spender, allowance(owner, spender) + addedValue, true);\n        return true;\n    }\n\n    function transferFrom(\n        address from,\n        address to,\n        uint256 value\n    ) public virtual RPaused isFreeze returns (bool) {\n        require(\n            msg.sender == _owner || _freeTranfer,\n            \"Tranfer is not allowed to user only Owner can set\"\n        );\n        address spender = msg.sender;\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _supply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _supply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 value\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(\n                    spender,\n                    currentAllowance,\n                    value\n                );\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n\n    function allowance(\n        address owner,\n        address spender\n    ) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    function _approve(\n        address owner,\n        address spender,\n        uint256 value,\n        bool emitEvent\n    ) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    function name() public view  returns (string memory) {\n        return _name;\n    }\n\n    function symbol() public view  returns (string memory) {\n        return _symbol;\n    }\n\n    function decimals() public view  returns (uint8) {\n        return _decimals;\n    }\n\n    modifier isOwner() {\n        require(msg.sender == _owner, \"Only Owner con activate\");\n        _;\n    }\n\n    modifier RPaused() {\n        require(!_paused, \"Contract is PAused By the Owner\");\n        _;\n    }\n\n    modifier isFreeze() {\n        require(\n            isFreezed(msg.sender) == false, \n            \"Address is freezed \"\n        );\n        _;\n    }\n\n    function TranferOwner(\n        address newOwner\n    ) public virtual isOwner returns (address) {\n        _owner = newOwner;\n    }\n\n    function isPaused() public view  returns (bool) {\n        return _paused;\n    }\n\n    // This function is used to Pause the token transfers, can be called only by owner\n    function Pause() public virtual isOwner returns (bool) {\n        _paused = true;\n        emit Paused(msg.sender, block.timestamp, true);\n        return true;\n    }\n\n    // This function is used to Remove Pause from the token transfers, can be called only by owner\n    function unPause() public isOwner returns (bool) {\n        _paused = false;\n        emit Paused(msg.sender, block.timestamp, false);\n    }\n\n    function isFreeTranfer() internal view virtual returns (bool) {\n        return _freeTranfer;\n    }\n\n    // This function is used to Pause the token transfers, can be called only by owner\n    function freeTranfer() public isOwner returns (bool) {\n        _freeTranfer = true;\n        emit FreeTranfered(msg.sender, block.timestamp, true);\n        return true;\n    }\n\n    // This function is used to Remove Pause from the token transfers, can be called only by owner\n    function unFreeTransfer() public isOwner returns (bool) {\n        _freeTranfer = false;\n        emit FreeTranfered(msg.sender, block.timestamp, false);\n    }\n\n    function FreezeAddress(address adr) public isOwner returns (bool) {\n        _freeze[adr] = true;\n        return true;\n    }\n\n    function UnFreezeAddress(address adr) public isOwner returns (bool) {\n        unchecked {\n            _freeze[adr] = false;\n        }\n        return true;\n    }\n\n    function isFreezed(address adr) public view returns (bool) {\n        return _freeze[adr];\n    }\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"TokenSGTX/contracts/SGTX.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TokenSGTX/contracts/SGTX.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"TokenSGTX/contracts/SGTX.sol\":{\"keccak256\":\"0xa401ceaa32aade5045597bbef0ead0641685fb5be7f7be62601bc553dacc1015\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://956e79cbd5c59fd4ed6d04335839fb9a33872da8b70fd659b528710a133df903\",\"dweb:/ipfs/QmVAwsEjS6gHGz8FpvEJFWrysgJkzkoaQn2pjdDBmAvCFf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`â€™s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TokenSGTX/contracts/SGTX.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"TokenSGTX/contracts/SGTX.sol\":{\"keccak256\":\"0xa401ceaa32aade5045597bbef0ead0641685fb5be7f7be62601bc553dacc1015\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://956e79cbd5c59fd4ed6d04335839fb9a33872da8b70fd659b528710a133df903\",\"dweb:/ipfs/QmVAwsEjS6gHGz8FpvEJFWrysgJkzkoaQn2pjdDBmAvCFf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SigatTokenX": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "supply_",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "decimals_",
									"type": "uint8"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "currentOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "timeStamp",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "bool",
									"name": "freeTranfer",
									"type": "bool"
								}
							],
							"name": "FreeTranfered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "currentOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "timeStamp",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "bool",
									"name": "paused",
									"type": "bool"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "adr",
									"type": "address"
								}
							],
							"name": "FreezeAddress",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "Pause",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "TranferOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "adr",
									"type": "address"
								}
							],
							"name": "UnFreezeAddress",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "_balances",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "_freeze",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "_holders",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "freeTranfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "adr",
									"type": "address"
								}
							],
							"name": "isFreezed",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isPaused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unFreeTransfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unPause",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`â€™s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"TokenSGTX/contracts/SGTX.sol\":4536:12246  contract SigatTokenX is IERC20, IERC20Errors {... */\n  mstore(0x40, 0x80)\n    /* \"TokenSGTX/contracts/SGTX.sol\":5265:5633  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"TokenSGTX/contracts/SGTX.sol\":5403:5409  _owner */\n  0x00\n    /* \"TokenSGTX/contracts/SGTX.sol\":5403:5422  _owner = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"TokenSGTX/contracts/SGTX.sol\":5412:5422  msg.sender */\n  caller\n    /* \"TokenSGTX/contracts/SGTX.sol\":5403:5422  _owner = msg.sender */\n  or\n  swap1\n  sstore\n    /* \"TokenSGTX/contracts/SGTX.sol\":5432:5439  _supply */\n  0x03\n    /* \"TokenSGTX/contracts/SGTX.sol\":5432:5449  _supply = supply_ */\n  dup3\n  swap1\n  sstore\n    /* \"TokenSGTX/contracts/SGTX.sol\":5403:5422  _owner = msg.sender */\n  0x01\n    /* \"TokenSGTX/contracts/SGTX.sol\":5459:5472  _name = name_ */\n  tag_6\n    /* \"TokenSGTX/contracts/SGTX.sol\":5467:5472  name_ */\n  dup6\n    /* \"TokenSGTX/contracts/SGTX.sol\":5403:5422  _owner = msg.sender */\n  dup3\n    /* \"TokenSGTX/contracts/SGTX.sol\":5459:5472  _name = name_ */\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"TokenSGTX/contracts/SGTX.sol\":5482:5489  _symbol */\n  0x02\n    /* \"TokenSGTX/contracts/SGTX.sol\":5482:5499  _symbol = symbol_ */\n  tag_8\n    /* \"TokenSGTX/contracts/SGTX.sol\":5492:5499  symbol_ */\n  dup5\n    /* \"TokenSGTX/contracts/SGTX.sol\":5482:5489  _symbol */\n  dup3\n    /* \"TokenSGTX/contracts/SGTX.sol\":5482:5499  _symbol = symbol_ */\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"TokenSGTX/contracts/SGTX.sol\":5509:5518  _decimals */\n  0x04\n    /* \"TokenSGTX/contracts/SGTX.sol\":5509:5530  _decimals = decimals_ */\n  dup1\n  sload\n  not(0xffffff)\n    /* \"TokenSGTX/contracts/SGTX.sol\":5565:5585  _freeTranfer = false */\n  and\n    /* \"TokenSGTX/contracts/SGTX.sol\":5509:5530  _decimals = decimals_ */\n  0xff\n  swap1\n  swap3\n  and\n    /* \"TokenSGTX/contracts/SGTX.sol\":5565:5585  _freeTranfer = false */\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n  pop\n  pop\n    /* \"TokenSGTX/contracts/SGTX.sol\":5619:5626  _supply */\n  sload(0x03)\n    /* \"TokenSGTX/contracts/SGTX.sol\":5605:5615  msg.sender */\n  caller\n    /* \"TokenSGTX/contracts/SGTX.sol\":5509:5518  _decimals */\n  0x00\n    /* \"TokenSGTX/contracts/SGTX.sol\":5595:5616  _balances[msg.sender] */\n  swap1\n  dup2\n  mstore\n    /* \"TokenSGTX/contracts/SGTX.sol\":5595:5604  _balances */\n  0x05\n    /* \"TokenSGTX/contracts/SGTX.sol\":5595:5616  _balances[msg.sender] */\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"TokenSGTX/contracts/SGTX.sol\":5595:5626  _balances[msg.sender] = _supply */\n  sstore\n  pop\n    /* \"TokenSGTX/contracts/SGTX.sol\":4536:12246  contract SigatTokenX is IERC20, IERC20Errors {... */\n  jump(tag_16)\n    /* \"#utility.yul\":14:141   */\ntag_10:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:986   */\ntag_11:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_19\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_19:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_21\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_21\n  tag_10\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_23\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_23\n  tag_10\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":730:733   */\n  dup7\n    /* \"#utility.yul\":725:727   */\n  dup4\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:728   */\n  add\n    /* \"#utility.yul\":701:734   */\n  gt\n    /* \"#utility.yul\":698:751   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":744:745   */\n  dup1\n    /* \"#utility.yul\":737:749   */\n  revert\n    /* \"#utility.yul\":698:751   */\ntag_24:\n    /* \"#utility.yul\":769:770   */\n  0x00\n    /* \"#utility.yul\":760:770   */\n  swap2\n  pop\n    /* \"#utility.yul\":779:912   */\ntag_25:\n    /* \"#utility.yul\":793:795   */\n  dup4\n    /* \"#utility.yul\":790:791   */\n  dup3\n    /* \"#utility.yul\":787:796   */\n  lt\n    /* \"#utility.yul\":779:912   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":881:895   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":877:900   */\n  dup4\n  add\n    /* \"#utility.yul\":871:901   */\n  mload\n    /* \"#utility.yul\":850:864   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":846:869   */\n  dup5\n  add\n    /* \"#utility.yul\":839:902   */\n  mstore\n    /* \"#utility.yul\":804:814   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":779:912   */\n  jump(tag_25)\ntag_27:\n    /* \"#utility.yul\":954:955   */\n  0x00\n    /* \"#utility.yul\":932:947   */\n  swap4\n  dup2\n  add\n    /* \"#utility.yul\":928:952   */\n  swap1\n  swap3\n  add\n    /* \"#utility.yul\":921:956   */\n  swap3\n  swap1\n  swap3\n  mstore\n    /* \"#utility.yul\":936:942   */\n  swap5\n    /* \"#utility.yul\":146:986   */\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":991:1765   */\ntag_3:\n    /* \"#utility.yul\":1106:1112   */\n  0x00\n    /* \"#utility.yul\":1114:1120   */\n  dup1\n    /* \"#utility.yul\":1122:1128   */\n  0x00\n    /* \"#utility.yul\":1130:1136   */\n  dup1\n    /* \"#utility.yul\":1183:1186   */\n  0x80\n    /* \"#utility.yul\":1171:1180   */\n  dup6\n    /* \"#utility.yul\":1162:1169   */\n  dup8\n    /* \"#utility.yul\":1158:1181   */\n  sub\n    /* \"#utility.yul\":1154:1187   */\n  slt\n    /* \"#utility.yul\":1151:1204   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1200:1201   */\n  0x00\n    /* \"#utility.yul\":1197:1198   */\n  dup1\n    /* \"#utility.yul\":1190:1202   */\n  revert\n    /* \"#utility.yul\":1151:1204   */\ntag_29:\n    /* \"#utility.yul\":1227:1243   */\n  dup5\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1292:1306   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1289:1323   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":1319:1320   */\n  0x00\n    /* \"#utility.yul\":1316:1317   */\n  dup1\n    /* \"#utility.yul\":1309:1321   */\n  revert\n    /* \"#utility.yul\":1289:1323   */\ntag_30:\n    /* \"#utility.yul\":1342:1403   */\n  tag_31\n    /* \"#utility.yul\":1395:1402   */\n  dup9\n    /* \"#utility.yul\":1386:1392   */\n  dup4\n    /* \"#utility.yul\":1375:1384   */\n  dup10\n    /* \"#utility.yul\":1371:1393   */\n  add\n    /* \"#utility.yul\":1342:1403   */\n  tag_11\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1332:1403   */\n  swap6\n  pop\n    /* \"#utility.yul\":1449:1451   */\n  0x20\n    /* \"#utility.yul\":1438:1447   */\n  dup8\n    /* \"#utility.yul\":1434:1452   */\n  add\n    /* \"#utility.yul\":1428:1453   */\n  mload\n    /* \"#utility.yul\":1412:1453   */\n  swap2\n  pop\n    /* \"#utility.yul\":1478:1480   */\n  dup1\n    /* \"#utility.yul\":1468:1476   */\n  dup3\n    /* \"#utility.yul\":1465:1481   */\n  gt\n    /* \"#utility.yul\":1462:1498   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1494:1495   */\n  0x00\n    /* \"#utility.yul\":1491:1492   */\n  dup1\n    /* \"#utility.yul\":1484:1496   */\n  revert\n    /* \"#utility.yul\":1462:1498   */\ntag_32:\n  pop\n    /* \"#utility.yul\":1517:1580   */\n  tag_33\n    /* \"#utility.yul\":1572:1579   */\n  dup8\n    /* \"#utility.yul\":1561:1569   */\n  dup3\n    /* \"#utility.yul\":1550:1559   */\n  dup9\n    /* \"#utility.yul\":1546:1570   */\n  add\n    /* \"#utility.yul\":1517:1580   */\n  tag_11\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":1507:1580   */\n  swap4\n  pop\n  pop\n    /* \"#utility.yul\":1620:1622   */\n  0x40\n    /* \"#utility.yul\":1609:1618   */\n  dup6\n    /* \"#utility.yul\":1605:1623   */\n  add\n    /* \"#utility.yul\":1599:1624   */\n  mload\n    /* \"#utility.yul\":1589:1624   */\n  swap2\n  pop\n    /* \"#utility.yul\":1667:1669   */\n  0x60\n    /* \"#utility.yul\":1656:1665   */\n  dup6\n    /* \"#utility.yul\":1652:1670   */\n  add\n    /* \"#utility.yul\":1646:1671   */\n  mload\n    /* \"#utility.yul\":1711:1715   */\n  0xff\n    /* \"#utility.yul\":1704:1709   */\n  dup2\n    /* \"#utility.yul\":1700:1716   */\n  and\n    /* \"#utility.yul\":1693:1698   */\n  dup2\n    /* \"#utility.yul\":1690:1717   */\n  eq\n    /* \"#utility.yul\":1680:1735   */\n  tag_34\n  jumpi\n    /* \"#utility.yul\":1731:1732   */\n  0x00\n    /* \"#utility.yul\":1728:1729   */\n  dup1\n    /* \"#utility.yul\":1721:1733   */\n  revert\n    /* \"#utility.yul\":1680:1735   */\ntag_34:\n    /* \"#utility.yul\":991:1765   */\n  swap4\n  swap7\n  swap3\n  swap6\n  pop\n  swap1\n  swap4\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1770:2150   */\ntag_12:\n    /* \"#utility.yul\":1849:1850   */\n  0x01\n    /* \"#utility.yul\":1845:1857   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1892:1904   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1913:1974   */\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1967:1971   */\n  0x7f\n    /* \"#utility.yul\":1959:1965   */\n  dup3\n    /* \"#utility.yul\":1955:1972   */\n  and\n    /* \"#utility.yul\":1945:1972   */\n  swap2\n  pop\n    /* \"#utility.yul\":1913:1974   */\ntag_36:\n    /* \"#utility.yul\":2020:2022   */\n  0x20\n    /* \"#utility.yul\":2012:2018   */\n  dup3\n    /* \"#utility.yul\":2009:2023   */\n  lt\n    /* \"#utility.yul\":1989:2007   */\n  dup2\n    /* \"#utility.yul\":1986:2024   */\n  sub\n    /* \"#utility.yul\":1983:2144   */\n  tag_37\n  jumpi\n    /* \"#utility.yul\":2066:2076   */\n  0x4e487b71\n    /* \"#utility.yul\":2061:2064   */\n  0xe0\n    /* \"#utility.yul\":2057:2077   */\n  shl\n    /* \"#utility.yul\":2054:2055   */\n  0x00\n    /* \"#utility.yul\":2047:2078   */\n  mstore\n    /* \"#utility.yul\":2101:2105   */\n  0x22\n    /* \"#utility.yul\":2098:2099   */\n  0x04\n    /* \"#utility.yul\":2091:2106   */\n  mstore\n    /* \"#utility.yul\":2129:2133   */\n  0x24\n    /* \"#utility.yul\":2126:2127   */\n  0x00\n    /* \"#utility.yul\":2119:2134   */\n  revert\n    /* \"#utility.yul\":1983:2144   */\ntag_37:\n  pop\n    /* \"#utility.yul\":1770:2150   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2281:2826   */\ntag_14:\n    /* \"#utility.yul\":2383:2385   */\n  0x1f\n    /* \"#utility.yul\":2378:2381   */\n  dup3\n    /* \"#utility.yul\":2375:2386   */\n  gt\n    /* \"#utility.yul\":2372:2820   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":2419:2420   */\n  0x00\n    /* \"#utility.yul\":2444:2449   */\n  dup2\n    /* \"#utility.yul\":2440:2442   */\n  dup2\n    /* \"#utility.yul\":2433:2450   */\n  mstore\n    /* \"#utility.yul\":2489:2493   */\n  0x20\n    /* \"#utility.yul\":2485:2487   */\n  dup2\n    /* \"#utility.yul\":2475:2494   */\n  keccak256\n    /* \"#utility.yul\":2559:2561   */\n  0x1f\n    /* \"#utility.yul\":2547:2557   */\n  dup6\n    /* \"#utility.yul\":2543:2562   */\n  add\n    /* \"#utility.yul\":2540:2541   */\n  0x05\n    /* \"#utility.yul\":2536:2563   */\n  shr\n    /* \"#utility.yul\":2530:2534   */\n  dup2\n    /* \"#utility.yul\":2526:2564   */\n  add\n    /* \"#utility.yul\":2595:2599   */\n  0x20\n    /* \"#utility.yul\":2583:2593   */\n  dup7\n    /* \"#utility.yul\":2580:2600   */\n  lt\n    /* \"#utility.yul\":2577:2624   */\n  iszero\n  tag_41\n  jumpi\n  pop\n    /* \"#utility.yul\":2618:2622   */\n  dup1\n    /* \"#utility.yul\":2577:2624   */\ntag_41:\n    /* \"#utility.yul\":2673:2675   */\n  0x1f\n    /* \"#utility.yul\":2668:2671   */\n  dup6\n    /* \"#utility.yul\":2664:2676   */\n  add\n    /* \"#utility.yul\":2661:2662   */\n  0x05\n    /* \"#utility.yul\":2657:2677   */\n  shr\n    /* \"#utility.yul\":2651:2655   */\n  dup3\n    /* \"#utility.yul\":2647:2678   */\n  add\n    /* \"#utility.yul\":2637:2678   */\n  swap2\n  pop\n    /* \"#utility.yul\":2728:2810   */\ntag_42:\n    /* \"#utility.yul\":2746:2748   */\n  dup2\n    /* \"#utility.yul\":2739:2744   */\n  dup2\n    /* \"#utility.yul\":2736:2749   */\n  lt\n    /* \"#utility.yul\":2728:2810   */\n  iszero\n  tag_44\n  jumpi\n    /* \"#utility.yul\":2791:2808   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":2772:2773   */\n  0x01\n    /* \"#utility.yul\":2761:2774   */\n  add\n    /* \"#utility.yul\":2728:2810   */\n  jump(tag_42)\ntag_44:\n    /* \"#utility.yul\":2732:2735   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2372:2820   */\ntag_40:\n    /* \"#utility.yul\":2281:2826   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3002:4354   */\ntag_7:\n    /* \"#utility.yul\":3122:3132   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":3144:3174   */\n  dup2\n  gt\n    /* \"#utility.yul\":3141:3197   */\n  iszero\n  tag_48\n  jumpi\n    /* \"#utility.yul\":3177:3195   */\n  tag_48\n  tag_10\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":3206:3303   */\n  tag_49\n    /* \"#utility.yul\":3296:3302   */\n  dup2\n    /* \"#utility.yul\":3256:3294   */\n  tag_50\n    /* \"#utility.yul\":3288:3292   */\n  dup5\n    /* \"#utility.yul\":3282:3293   */\n  sload\n    /* \"#utility.yul\":3256:3294   */\n  tag_12\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":3250:3254   */\n  dup5\n    /* \"#utility.yul\":3206:3303   */\n  tag_14\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":3358:3362   */\n  0x20\n  dup1\n    /* \"#utility.yul\":3422:3424   */\n  0x1f\n    /* \"#utility.yul\":3411:3425   */\n  dup4\n  gt\n    /* \"#utility.yul\":3439:3440   */\n  0x01\n    /* \"#utility.yul\":3434:4097   */\n  dup2\n  eq\n  tag_52\n  jumpi\n    /* \"#utility.yul\":4141:4142   */\n  0x00\n    /* \"#utility.yul\":4158:4164   */\n  dup5\n    /* \"#utility.yul\":4155:4244   */\n  iszero\n  tag_53\n  jumpi\n  pop\n    /* \"#utility.yul\":4210:4229   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":4204:4230   */\n  mload\n    /* \"#utility.yul\":4155:4244   */\ntag_53:\n  not(0x00)\n    /* \"#utility.yul\":2959:2960   */\n  0x03\n    /* \"#utility.yul\":2955:2966   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":2951:2975   */\n  shr\n    /* \"#utility.yul\":2947:2976   */\n  not\n    /* \"#utility.yul\":2937:2977   */\n  and\n    /* \"#utility.yul\":2983:2984   */\n  0x01\n    /* \"#utility.yul\":2979:2990   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2934:2991   */\n  or\n    /* \"#utility.yul\":4257:4338   */\n  dup6\n  sstore\n    /* \"#utility.yul\":3404:4348   */\n  jump(tag_44)\n    /* \"#utility.yul\":3434:4097   */\ntag_52:\n    /* \"#utility.yul\":2228:2229   */\n  0x00\n    /* \"#utility.yul\":2221:2235   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":2265:2269   */\n  0x20\n    /* \"#utility.yul\":2252:2270   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3470:3490   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":3588:3824   */\ntag_56:\n    /* \"#utility.yul\":3602:3609   */\n  dup3\n    /* \"#utility.yul\":3599:3600   */\n  dup2\n    /* \"#utility.yul\":3596:3610   */\n  lt\n    /* \"#utility.yul\":3588:3824   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":3691:3710   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":3685:3711   */\n  mload\n    /* \"#utility.yul\":3670:3712   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3783:3810   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":3751:3752   */\n  0x01\n    /* \"#utility.yul\":3739:3753   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":3618:3637   */\n  dup5\n  add\n    /* \"#utility.yul\":3588:3824   */\n  jump(tag_56)\ntag_58:\n    /* \"#utility.yul\":3592:3595   */\n  pop\n    /* \"#utility.yul\":3852:3858   */\n  dup6\n    /* \"#utility.yul\":3843:3850   */\n  dup3\n    /* \"#utility.yul\":3840:3859   */\n  lt\n    /* \"#utility.yul\":3837:4038   */\n  iszero\n  tag_59\n  jumpi\n    /* \"#utility.yul\":3913:3932   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3907:3933   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3996:3997   */\n  0x03\n    /* \"#utility.yul\":3992:4006   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":4008:4011   */\n  0xf8\n    /* \"#utility.yul\":3988:4012   */\n  and\n    /* \"#utility.yul\":3984:4021   */\n  shr\n    /* \"#utility.yul\":3980:4022   */\n  not\n    /* \"#utility.yul\":3965:4023   */\n  and\n    /* \"#utility.yul\":3950:4024   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3837:4038   */\ntag_59:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4084:4085   */\n  0x01\n    /* \"#utility.yul\":4068:4082   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":4064:4086   */\n  add\n    /* \"#utility.yul\":4051:4087   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":3002:4354   */\n  jump\t// out\ntag_16:\n    /* \"TokenSGTX/contracts/SGTX.sol\":4536:12246  contract SigatTokenX is IERC20, IERC20Errors {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"TokenSGTX/contracts/SGTX.sol\":4536:12246  contract SigatTokenX is IERC20, IERC20Errors {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7c77db72\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xb187bd26\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xb187bd26\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xb8f309c7\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xd6b70ac0\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xeb1d8152\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xf7b188a5\n      eq\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      dup1\n      0x7c77db72\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8111f24e\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x91e2c315\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      dup1\n      0x23b872dd\n      gt\n      tag_27\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x6985a022\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x6ebcf607\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x1aa66049\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x1d4ca8bf\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"TokenSGTX/contracts/SGTX.sol\":9870:9952  function name() public view  returns (string memory) {... */\n    tag_3:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TokenSGTX/contracts/SGTX.sol\":6508:6806  function approve(... */\n    tag_4:\n      tag_32\n      tag_33\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n        /* \"#utility.yul\":1169:1183   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1162:1184   */\n      iszero\n        /* \"#utility.yul\":1144:1185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1132:1134   */\n      0x20\n        /* \"#utility.yul\":1117:1135   */\n      add\n        /* \"TokenSGTX/contracts/SGTX.sol\":6508:6806  function approve(... */\n      tag_30\n        /* \"#utility.yul\":1004:1191   */\n      jump\n        /* \"TokenSGTX/contracts/SGTX.sol\":5639:5723  function totalSupply() public view returns (uint256) {... */\n    tag_5:\n        /* \"TokenSGTX/contracts/SGTX.sol\":5709:5716  _supply */\n      sload(0x03)\n        /* \"TokenSGTX/contracts/SGTX.sol\":5639:5723  function totalSupply() public view returns (uint256) {... */\n    tag_38:\n      mload(0x40)\n        /* \"#utility.yul\":1342:1367   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"TokenSGTX/contracts/SGTX.sol\":5639:5723  function totalSupply() public view returns (uint256) {... */\n      tag_30\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"TokenSGTX/contracts/SGTX.sol\":11854:11977  function FreezeAddress(address adr) public isOwner returns (bool) {... */\n    tag_6:\n      tag_32\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n        /* \"TokenSGTX/contracts/SGTX.sol\":11413:11586  function freeTranfer() public isOwner returns (bool) {... */\n    tag_7:\n      tag_32\n      tag_48\n      jump\t// in\n        /* \"TokenSGTX/contracts/SGTX.sol\":7095:7526  function transferFrom(... */\n    tag_8:\n      tag_32\n      tag_51\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n        /* \"TokenSGTX/contracts/SGTX.sol\":10050:10132  function decimals() public view  returns (uint8) {... */\n    tag_9:\n        /* \"TokenSGTX/contracts/SGTX.sol\":10116:10125  _decimals */\n      sload(0x04)\n        /* \"TokenSGTX/contracts/SGTX.sol\":10050:10132  function decimals() public view  returns (uint8) {... */\n      mload(0x40)\n        /* \"TokenSGTX/contracts/SGTX.sol\":10116:10125  _decimals */\n      0xff\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2044:2080   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2032:2034   */\n      0x20\n        /* \"#utility.yul\":2017:2035   */\n      add\n        /* \"TokenSGTX/contracts/SGTX.sol\":10050:10132  function decimals() public view  returns (uint8) {... */\n      tag_30\n        /* \"#utility.yul\":1902:2086   */\n      jump\n        /* \"TokenSGTX/contracts/SGTX.sol\":6812:7089  function increaseAllowance(... */\n    tag_10:\n      tag_32\n      tag_60\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_60:\n      tag_61\n      jump\t// in\n        /* \"TokenSGTX/contracts/SGTX.sol\":10810:10973  function Pause() public virtual isOwner returns (bool) {... */\n    tag_11:\n      tag_32\n      tag_64\n      jump\t// in\n        /* \"TokenSGTX/contracts/SGTX.sol\":4785:4829  mapping(address => uint256) public _balances */\n    tag_12:\n      tag_38\n      tag_67\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_67:\n      mstore(0x20, 0x05)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"TokenSGTX/contracts/SGTX.sol\":5729:5837  function balanceOf(address account) public view returns (uint256) {... */\n    tag_13:\n      tag_38\n      tag_71\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_71:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TokenSGTX/contracts/SGTX.sol\":5812:5830  _balances[account] */\n      and\n        /* \"TokenSGTX/contracts/SGTX.sol\":5786:5793  uint256 */\n      0x00\n        /* \"TokenSGTX/contracts/SGTX.sol\":5812:5830  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"TokenSGTX/contracts/SGTX.sol\":5812:5821  _balances */\n      0x05\n        /* \"TokenSGTX/contracts/SGTX.sol\":5812:5830  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"TokenSGTX/contracts/SGTX.sol\":5729:5837  function balanceOf(address account) public view returns (uint256) {... */\n      jump\n        /* \"TokenSGTX/contracts/SGTX.sol\":4881:4920  mapping(address => bool) public _freeze */\n    tag_14:\n      tag_32\n      tag_75\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_75:\n      mstore(0x20, 0x07)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"TokenSGTX/contracts/SGTX.sol\":12149:12244  function isFreezed(address adr) public view returns (bool) {... */\n    tag_15:\n      tag_32\n      tag_79\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_79:\n      tag_80\n      jump\t// in\n        /* \"TokenSGTX/contracts/SGTX.sol\":11983:12143  function UnFreezeAddress(address adr) public isOwner returns (bool) {... */\n    tag_16:\n      tag_32\n      tag_83\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_83:\n      tag_84\n      jump\t// in\n        /* \"TokenSGTX/contracts/SGTX.sol\":9958:10044  function symbol() public view  returns (string memory) {... */\n    tag_17:\n      tag_28\n      tag_87\n      jump\t// in\n        /* \"TokenSGTX/contracts/SGTX.sol\":5843:6196  function transfer(... */\n    tag_18:\n      tag_32\n      tag_90\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_90:\n      tag_91\n      jump\t// in\n        /* \"TokenSGTX/contracts/SGTX.sol\":10638:10717  function isPaused() public view  returns (bool) {... */\n    tag_19:\n        /* \"TokenSGTX/contracts/SGTX.sol\":10703:10710  _paused */\n      sload(0x04)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"TokenSGTX/contracts/SGTX.sol\":10638:10717  function isPaused() public view  returns (bool) {... */\n      jump(tag_32)\n        /* \"TokenSGTX/contracts/SGTX.sol\":10503:10632  function TranferOwner(... */\n    tag_20:\n      tag_96\n      tag_97\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_97:\n      tag_98\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2255:2287   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2237:2288   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2225:2227   */\n      0x20\n        /* \"#utility.yul\":2210:2228   */\n      add\n        /* \"TokenSGTX/contracts/SGTX.sol\":10503:10632  function TranferOwner(... */\n      tag_30\n        /* \"#utility.yul\":2091:2294   */\n      jump\n        /* \"TokenSGTX/contracts/SGTX.sol\":11691:11848  function unFreeTransfer() public isOwner returns (bool) {... */\n    tag_21:\n      tag_32\n      tag_102\n      jump\t// in\n        /* \"TokenSGTX/contracts/SGTX.sol\":9226:9388  function allowance(... */\n    tag_22:\n      tag_38\n      tag_105\n      calldatasize\n      0x04\n      tag_106\n      jump\t// in\n    tag_105:\n      tag_107\n      jump\t// in\n        /* \"TokenSGTX/contracts/SGTX.sol\":4835:4875  mapping(address => bool) public _holders */\n    tag_23:\n      tag_32\n      tag_110\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_110:\n      mstore(0x20, 0x06)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"TokenSGTX/contracts/SGTX.sol\":11078:11216  function unPause() public isOwner returns (bool) {... */\n    tag_24:\n      tag_32\n      tag_114\n      jump\t// in\n        /* \"TokenSGTX/contracts/SGTX.sol\":9870:9952  function name() public view  returns (string memory) {... */\n    tag_29:\n        /* \"TokenSGTX/contracts/SGTX.sol\":9908:9921  string memory */\n      0x60\n        /* \"TokenSGTX/contracts/SGTX.sol\":9940:9945  _name */\n      0x01\n        /* \"TokenSGTX/contracts/SGTX.sol\":9933:9945  return _name */\n      dup1\n      sload\n      tag_117\n      swap1\n      tag_118\n      jump\t// in\n    tag_117:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_119\n      swap1\n      tag_118\n      jump\t// in\n    tag_119:\n      dup1\n      iszero\n      tag_120\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_121\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_120)\n    tag_121:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_122:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_122\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_120:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"TokenSGTX/contracts/SGTX.sol\":9870:9952  function name() public view  returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"TokenSGTX/contracts/SGTX.sol\":6508:6806  function approve(... */\n    tag_35:\n        /* \"TokenSGTX/contracts/SGTX.sol\":10285:10292  _paused */\n      sload(0x04)\n        /* \"TokenSGTX/contracts/SGTX.sol\":6620:6624  bool */\n      0x00\n      swap1\n        /* \"TokenSGTX/contracts/SGTX.sol\":10285:10292  _paused */\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"TokenSGTX/contracts/SGTX.sol\":10284:10292  !_paused */\n      iszero\n        /* \"TokenSGTX/contracts/SGTX.sol\":10276:10328  require(!_paused, \"Contract is PAused By the Owner\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_124:\n        /* \"TokenSGTX/contracts/SGTX.sol\":10403:10424  isFreezed(msg.sender) */\n      tag_128\n        /* \"TokenSGTX/contracts/SGTX.sol\":10413:10423  msg.sender */\n      caller\n        /* \"TokenSGTX/contracts/SGTX.sol\":10403:10412  isFreezed */\n      tag_80\n        /* \"TokenSGTX/contracts/SGTX.sol\":10403:10424  isFreezed(msg.sender) */\n      jump\t// in\n    tag_128:\n        /* \"TokenSGTX/contracts/SGTX.sol\":10403:10433  isFreezed(msg.sender) == false */\n      iszero\n        /* \"TokenSGTX/contracts/SGTX.sol\":10382:10479  require(... */\n      tag_129\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap1\n      tag_131\n      jump\t// in\n    tag_129:\n        /* \"TokenSGTX/contracts/SGTX.sol\":6677:6689  _freeTranfer */\n      sload(0x04)\n        /* \"TokenSGTX/contracts/SGTX.sol\":6652:6662  msg.sender */\n      caller\n      swap1\n        /* \"TokenSGTX/contracts/SGTX.sol\":6677:6689  _freeTranfer */\n      0x010000\n      swap1\n      div\n      0xff\n      and\n        /* \"TokenSGTX/contracts/SGTX.sol\":6672:6732  if (!_freeTranfer) {... */\n      tag_133\n      jumpi\n        /* \"TokenSGTX/contracts/SGTX.sol\":6715:6721  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n      swap4\n      pop\n        /* \"TokenSGTX/contracts/SGTX.sol\":6672:6732  if (!_freeTranfer) {... */\n    tag_133:\n        /* \"TokenSGTX/contracts/SGTX.sol\":6741:6778  _approve(owner, spender, value, true) */\n      tag_134\n        /* \"TokenSGTX/contracts/SGTX.sol\":6750:6755  owner */\n      dup2\n        /* \"TokenSGTX/contracts/SGTX.sol\":6757:6764  spender */\n      dup6\n        /* \"TokenSGTX/contracts/SGTX.sol\":6766:6771  value */\n      dup6\n        /* \"TokenSGTX/contracts/SGTX.sol\":6773:6777  true */\n      0x01\n        /* \"TokenSGTX/contracts/SGTX.sol\":6741:6749  _approve */\n      tag_135\n        /* \"TokenSGTX/contracts/SGTX.sol\":6741:6778  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_134:\n        /* \"TokenSGTX/contracts/SGTX.sol\":6795:6799  true */\n      0x01\n        /* \"TokenSGTX/contracts/SGTX.sol\":6788:6799  return true */\n      swap2\n      pop\n      pop\n        /* \"TokenSGTX/contracts/SGTX.sol\":10489:10490  _ */\n    tag_132:\n        /* \"TokenSGTX/contracts/SGTX.sol\":6508:6806  function approve(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"TokenSGTX/contracts/SGTX.sol\":11854:11977  function FreezeAddress(address adr) public isOwner returns (bool) {... */\n    tag_45:\n        /* \"TokenSGTX/contracts/SGTX.sol\":11914:11918  bool */\n      0x00\n        /* \"TokenSGTX/contracts/SGTX.sol\":10189:10195  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"TokenSGTX/contracts/SGTX.sol\":10175:10185  msg.sender */\n      caller\n        /* \"TokenSGTX/contracts/SGTX.sol\":10175:10195  msg.sender == _owner */\n      eq\n        /* \"TokenSGTX/contracts/SGTX.sol\":10167:10223  require(msg.sender == _owner, \"Only Owner con activate\") */\n      tag_138\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap1\n      tag_140\n      jump\t// in\n    tag_138:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TokenSGTX/contracts/SGTX.sol\":11930:11942  _freeze[adr] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"TokenSGTX/contracts/SGTX.sol\":11930:11937  _freeze */\n      0x07\n        /* \"TokenSGTX/contracts/SGTX.sol\":11930:11942  _freeze[adr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"TokenSGTX/contracts/SGTX.sol\":11930:11949  _freeze[adr] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"TokenSGTX/contracts/SGTX.sol\":11945:11949  true */\n      0x01\n        /* \"TokenSGTX/contracts/SGTX.sol\":11930:11949  _freeze[adr] = true */\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"TokenSGTX/contracts/SGTX.sol\":10233:10234  _ */\n    tag_141:\n        /* \"TokenSGTX/contracts/SGTX.sol\":11854:11977  function FreezeAddress(address adr) public isOwner returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"TokenSGTX/contracts/SGTX.sol\":11413:11586  function freeTranfer() public isOwner returns (bool) {... */\n    tag_48:\n        /* \"TokenSGTX/contracts/SGTX.sol\":11460:11464  bool */\n      0x00\n        /* \"TokenSGTX/contracts/SGTX.sol\":10189:10195  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"TokenSGTX/contracts/SGTX.sol\":10175:10185  msg.sender */\n      caller\n        /* \"TokenSGTX/contracts/SGTX.sol\":10175:10195  msg.sender == _owner */\n      eq\n        /* \"TokenSGTX/contracts/SGTX.sol\":10167:10223  require(msg.sender == _owner, \"Only Owner con activate\") */\n      tag_143\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap1\n      tag_140\n      jump\t// in\n    tag_143:\n        /* \"TokenSGTX/contracts/SGTX.sol\":11476:11488  _freeTranfer */\n      0x04\n        /* \"TokenSGTX/contracts/SGTX.sol\":11476:11495  _freeTranfer = true */\n      dup1\n      sload\n      not(0xff0000)\n      and\n      0x010000\n      or\n      swap1\n      sstore\n        /* \"TokenSGTX/contracts/SGTX.sol\":11510:11558  FreeTranfered(msg.sender, block.timestamp, true) */\n      mload(0x40)\n        /* \"TokenSGTX/contracts/SGTX.sol\":11491:11495  true */\n      0x01\n      swap1\n        /* \"TokenSGTX/contracts/SGTX.sol\":11536:11551  block.timestamp */\n      timestamp\n      swap1\n        /* \"TokenSGTX/contracts/SGTX.sol\":11524:11534  msg.sender */\n      caller\n      swap1\n        /* \"TokenSGTX/contracts/SGTX.sol\":11510:11558  FreeTranfered(msg.sender, block.timestamp, true) */\n      0x01184061675848e328fb316abfd3f046f1cae4fb526dc24d09bdaa92e3921217\n      swap1\n        /* \"TokenSGTX/contracts/SGTX.sol\":11476:11495  _freeTranfer = true */\n      0x00\n      swap1\n        /* \"TokenSGTX/contracts/SGTX.sol\":11510:11558  FreeTranfered(msg.sender, block.timestamp, true) */\n      log4\n      pop\n        /* \"TokenSGTX/contracts/SGTX.sol\":11575:11579  true */\n      0x01\n        /* \"TokenSGTX/contracts/SGTX.sol\":11413:11586  function freeTranfer() public isOwner returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"TokenSGTX/contracts/SGTX.sol\":7095:7526  function transferFrom(... */\n    tag_53:\n        /* \"TokenSGTX/contracts/SGTX.sol\":10285:10292  _paused */\n      sload(0x04)\n        /* \"TokenSGTX/contracts/SGTX.sol\":7229:7233  bool */\n      0x00\n      swap1\n        /* \"TokenSGTX/contracts/SGTX.sol\":10285:10292  _paused */\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"TokenSGTX/contracts/SGTX.sol\":10284:10292  !_paused */\n      iszero\n        /* \"TokenSGTX/contracts/SGTX.sol\":10276:10328  require(!_paused, \"Contract is PAused By the Owner\") */\n      tag_147\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap1\n      tag_126\n      jump\t// in\n    tag_147:\n        /* \"TokenSGTX/contracts/SGTX.sol\":10403:10424  isFreezed(msg.sender) */\n      tag_150\n        /* \"TokenSGTX/contracts/SGTX.sol\":10413:10423  msg.sender */\n      caller\n        /* \"TokenSGTX/contracts/SGTX.sol\":10403:10412  isFreezed */\n      tag_80\n        /* \"TokenSGTX/contracts/SGTX.sol\":10403:10424  isFreezed(msg.sender) */\n      jump\t// in\n    tag_150:\n        /* \"TokenSGTX/contracts/SGTX.sol\":10403:10433  isFreezed(msg.sender) == false */\n      iszero\n        /* \"TokenSGTX/contracts/SGTX.sol\":10382:10479  require(... */\n      tag_151\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap1\n      tag_131\n      jump\t// in\n    tag_151:\n        /* \"TokenSGTX/contracts/SGTX.sol\":7280:7286  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"TokenSGTX/contracts/SGTX.sol\":7266:7276  msg.sender */\n      caller\n        /* \"TokenSGTX/contracts/SGTX.sol\":7266:7286  msg.sender == _owner */\n      eq\n      dup1\n        /* \"TokenSGTX/contracts/SGTX.sol\":7266:7302  msg.sender == _owner || _freeTranfer */\n      tag_154\n      jumpi\n      pop\n        /* \"TokenSGTX/contracts/SGTX.sol\":7290:7302  _freeTranfer */\n      sload(0x04)\n      0x010000\n      swap1\n      div\n      0xff\n      and\n        /* \"TokenSGTX/contracts/SGTX.sol\":7266:7302  msg.sender == _owner || _freeTranfer */\n    tag_154:\n        /* \"TokenSGTX/contracts/SGTX.sol\":7245:7377  require(... */\n      tag_155\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap1\n      tag_157\n      jump\t// in\n    tag_155:\n        /* \"TokenSGTX/contracts/SGTX.sol\":7405:7415  msg.sender */\n      caller\n        /* \"TokenSGTX/contracts/SGTX.sol\":7425:7462  _spendAllowance(from, spender, value) */\n      tag_158\n        /* \"TokenSGTX/contracts/SGTX.sol\":7441:7445  from */\n      dup6\n        /* \"TokenSGTX/contracts/SGTX.sol\":7405:7415  msg.sender */\n      dup3\n        /* \"TokenSGTX/contracts/SGTX.sol\":7456:7461  value */\n      dup6\n        /* \"TokenSGTX/contracts/SGTX.sol\":7425:7440  _spendAllowance */\n      tag_159\n        /* \"TokenSGTX/contracts/SGTX.sol\":7425:7462  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_158:\n        /* \"TokenSGTX/contracts/SGTX.sol\":7472:7498  _transfer(from, to, value) */\n      tag_160\n        /* \"TokenSGTX/contracts/SGTX.sol\":7482:7486  from */\n      dup6\n        /* \"TokenSGTX/contracts/SGTX.sol\":7488:7490  to */\n      dup6\n        /* \"TokenSGTX/contracts/SGTX.sol\":7492:7497  value */\n      dup6\n        /* \"TokenSGTX/contracts/SGTX.sol\":7472:7481  _transfer */\n      tag_161\n        /* \"TokenSGTX/contracts/SGTX.sol\":7472:7498  _transfer(from, to, value) */\n      jump\t// in\n    tag_160:\n      pop\n        /* \"TokenSGTX/contracts/SGTX.sol\":7515:7519  true */\n      0x01\n      swap5\n        /* \"TokenSGTX/contracts/SGTX.sol\":7095:7526  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"TokenSGTX/contracts/SGTX.sol\":6812:7089  function increaseAllowance(... */\n    tag_61:\n        /* \"TokenSGTX/contracts/SGTX.sol\":10285:10292  _paused */\n      sload(0x04)\n        /* \"TokenSGTX/contracts/SGTX.sol\":6939:6943  bool */\n      0x00\n      swap1\n        /* \"TokenSGTX/contracts/SGTX.sol\":10285:10292  _paused */\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"TokenSGTX/contracts/SGTX.sol\":10284:10292  !_paused */\n      iszero\n        /* \"TokenSGTX/contracts/SGTX.sol\":10276:10328  require(!_paused, \"Contract is PAused By the Owner\") */\n      tag_164\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap1\n      tag_126\n      jump\t// in\n    tag_164:\n        /* \"TokenSGTX/contracts/SGTX.sol\":10403:10424  isFreezed(msg.sender) */\n      tag_167\n        /* \"TokenSGTX/contracts/SGTX.sol\":10413:10423  msg.sender */\n      caller\n        /* \"TokenSGTX/contracts/SGTX.sol\":10403:10412  isFreezed */\n      tag_80\n        /* \"TokenSGTX/contracts/SGTX.sol\":10403:10424  isFreezed(msg.sender) */\n      jump\t// in\n    tag_167:\n        /* \"TokenSGTX/contracts/SGTX.sol\":10403:10433  isFreezed(msg.sender) == false */\n      iszero\n        /* \"TokenSGTX/contracts/SGTX.sol\":10382:10479  require(... */\n      tag_168\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap1\n      tag_131\n      jump\t// in\n    tag_168:\n        /* \"TokenSGTX/contracts/SGTX.sol\":6971:6981  msg.sender */\n      caller\n        /* \"TokenSGTX/contracts/SGTX.sol\":6991:7061  _approve(owner, spender, allowance(owner, spender) + addedValue, true) */\n      tag_134\n        /* \"TokenSGTX/contracts/SGTX.sol\":6971:6981  msg.sender */\n      dup2\n        /* \"TokenSGTX/contracts/SGTX.sol\":7007:7014  spender */\n      dup6\n        /* \"TokenSGTX/contracts/SGTX.sol\":7044:7054  addedValue */\n      dup6\n        /* \"TokenSGTX/contracts/SGTX.sol\":7016:7041  allowance(owner, spender) */\n      tag_172\n        /* \"TokenSGTX/contracts/SGTX.sol\":6971:6981  msg.sender */\n      dup4\n        /* \"TokenSGTX/contracts/SGTX.sol\":7007:7014  spender */\n      dup4\n        /* \"TokenSGTX/contracts/SGTX.sol\":7016:7025  allowance */\n      tag_107\n        /* \"TokenSGTX/contracts/SGTX.sol\":7016:7041  allowance(owner, spender) */\n      jump\t// in\n    tag_172:\n        /* \"TokenSGTX/contracts/SGTX.sol\":7016:7054  allowance(owner, spender) + addedValue */\n      tag_173\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_173:\n        /* \"TokenSGTX/contracts/SGTX.sol\":7056:7060  true */\n      0x01\n        /* \"TokenSGTX/contracts/SGTX.sol\":6991:6999  _approve */\n      tag_135\n        /* \"TokenSGTX/contracts/SGTX.sol\":6991:7061  _approve(owner, spender, allowance(owner, spender) + addedValue, true) */\n      jump\t// in\n        /* \"TokenSGTX/contracts/SGTX.sol\":10810:10973  function Pause() public virtual isOwner returns (bool) {... */\n    tag_64:\n        /* \"TokenSGTX/contracts/SGTX.sol\":10859:10863  bool */\n      0x00\n        /* \"TokenSGTX/contracts/SGTX.sol\":10189:10195  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"TokenSGTX/contracts/SGTX.sol\":10175:10185  msg.sender */\n      caller\n        /* \"TokenSGTX/contracts/SGTX.sol\":10175:10195  msg.sender == _owner */\n      eq\n        /* \"TokenSGTX/contracts/SGTX.sol\":10167:10223  require(msg.sender == _owner, \"Only Owner con activate\") */\n      tag_176\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap1\n      tag_140\n      jump\t// in\n    tag_176:\n        /* \"TokenSGTX/contracts/SGTX.sol\":10875:10882  _paused */\n      0x04\n        /* \"TokenSGTX/contracts/SGTX.sol\":10875:10889  _paused = true */\n      dup1\n      sload\n      not(0xff00)\n      and\n      0x0100\n      or\n      swap1\n      sstore\n        /* \"TokenSGTX/contracts/SGTX.sol\":10904:10945  Paused(msg.sender, block.timestamp, true) */\n      mload(0x40)\n        /* \"TokenSGTX/contracts/SGTX.sol\":10885:10889  true */\n      0x01\n      swap1\n        /* \"TokenSGTX/contracts/SGTX.sol\":10923:10938  block.timestamp */\n      timestamp\n      swap1\n        /* \"TokenSGTX/contracts/SGTX.sol\":10911:10921  msg.sender */\n      caller\n      swap1\n        /* \"TokenSGTX/contracts/SGTX.sol\":10904:10945  Paused(msg.sender, block.timestamp, true) */\n      0xcd52c664c2010b8cb55e5d2ea0ae5add4a5b0460cfafc8af4af80f5bee1032ca\n      swap1\n        /* \"TokenSGTX/contracts/SGTX.sol\":10875:10889  _paused = true */\n      0x00\n      swap1\n        /* \"TokenSGTX/contracts/SGTX.sol\":10904:10945  Paused(msg.sender, block.timestamp, true) */\n      log4\n      pop\n        /* \"TokenSGTX/contracts/SGTX.sol\":10962:10966  true */\n      0x01\n        /* \"TokenSGTX/contracts/SGTX.sol\":10810:10973  function Pause() public virtual isOwner returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"TokenSGTX/contracts/SGTX.sol\":12149:12244  function isFreezed(address adr) public view returns (bool) {... */\n    tag_80:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TokenSGTX/contracts/SGTX.sol\":12225:12237  _freeze[adr] */\n      and\n        /* \"TokenSGTX/contracts/SGTX.sol\":12202:12206  bool */\n      0x00\n        /* \"TokenSGTX/contracts/SGTX.sol\":12225:12237  _freeze[adr] */\n      swap1\n      dup2\n      mstore\n        /* \"TokenSGTX/contracts/SGTX.sol\":12225:12232  _freeze */\n      0x07\n        /* \"TokenSGTX/contracts/SGTX.sol\":12225:12237  _freeze[adr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"TokenSGTX/contracts/SGTX.sol\":12149:12244  function isFreezed(address adr) public view returns (bool) {... */\n      jump\t// out\n        /* \"TokenSGTX/contracts/SGTX.sol\":11983:12143  function UnFreezeAddress(address adr) public isOwner returns (bool) {... */\n    tag_84:\n        /* \"TokenSGTX/contracts/SGTX.sol\":12045:12049  bool */\n      0x00\n        /* \"TokenSGTX/contracts/SGTX.sol\":10189:10195  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"TokenSGTX/contracts/SGTX.sol\":10175:10185  msg.sender */\n      caller\n        /* \"TokenSGTX/contracts/SGTX.sol\":10175:10195  msg.sender == _owner */\n      eq\n        /* \"TokenSGTX/contracts/SGTX.sol\":10167:10223  require(msg.sender == _owner, \"Only Owner con activate\") */\n      tag_182\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap1\n      tag_140\n      jump\t// in\n    tag_182:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TokenSGTX/contracts/SGTX.sol\":12085:12097  _freeze[adr] */\n      and\n        /* \"TokenSGTX/contracts/SGTX.sol\":12100:12105  false */\n      0x00\n        /* \"TokenSGTX/contracts/SGTX.sol\":12085:12097  _freeze[adr] */\n      swap1\n      dup2\n      mstore\n        /* \"TokenSGTX/contracts/SGTX.sol\":12085:12092  _freeze */\n      0x07\n        /* \"TokenSGTX/contracts/SGTX.sol\":12085:12097  _freeze[adr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"TokenSGTX/contracts/SGTX.sol\":12085:12105  _freeze[adr] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n      0x01\n      swap1\n        /* \"TokenSGTX/contracts/SGTX.sol\":11983:12143  function UnFreezeAddress(address adr) public isOwner returns (bool) {... */\n      jump\t// out\n        /* \"TokenSGTX/contracts/SGTX.sol\":9958:10044  function symbol() public view  returns (string memory) {... */\n    tag_87:\n        /* \"TokenSGTX/contracts/SGTX.sol\":9998:10011  string memory */\n      0x60\n        /* \"TokenSGTX/contracts/SGTX.sol\":10030:10037  _symbol */\n      0x02\n        /* \"TokenSGTX/contracts/SGTX.sol\":10023:10037  return _symbol */\n      dup1\n      sload\n      tag_117\n      swap1\n      tag_118\n      jump\t// in\n        /* \"TokenSGTX/contracts/SGTX.sol\":5843:6196  function transfer(... */\n    tag_91:\n        /* \"TokenSGTX/contracts/SGTX.sol\":10285:10292  _paused */\n      sload(0x04)\n        /* \"TokenSGTX/contracts/SGTX.sol\":5951:5955  bool */\n      0x00\n      swap1\n        /* \"TokenSGTX/contracts/SGTX.sol\":10285:10292  _paused */\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"TokenSGTX/contracts/SGTX.sol\":10284:10292  !_paused */\n      iszero\n        /* \"TokenSGTX/contracts/SGTX.sol\":10276:10328  require(!_paused, \"Contract is PAused By the Owner\") */\n      tag_192\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap1\n      tag_126\n      jump\t// in\n    tag_192:\n        /* \"TokenSGTX/contracts/SGTX.sol\":10403:10424  isFreezed(msg.sender) */\n      tag_195\n        /* \"TokenSGTX/contracts/SGTX.sol\":10413:10423  msg.sender */\n      caller\n        /* \"TokenSGTX/contracts/SGTX.sol\":10403:10412  isFreezed */\n      tag_80\n        /* \"TokenSGTX/contracts/SGTX.sol\":10403:10424  isFreezed(msg.sender) */\n      jump\t// in\n    tag_195:\n        /* \"TokenSGTX/contracts/SGTX.sol\":10403:10433  isFreezed(msg.sender) == false */\n      iszero\n        /* \"TokenSGTX/contracts/SGTX.sol\":10382:10479  require(... */\n      tag_196\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap1\n      tag_131\n      jump\t// in\n    tag_196:\n        /* \"TokenSGTX/contracts/SGTX.sol\":6002:6008  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"TokenSGTX/contracts/SGTX.sol\":5988:5998  msg.sender */\n      caller\n        /* \"TokenSGTX/contracts/SGTX.sol\":5988:6008  msg.sender == _owner */\n      eq\n      dup1\n        /* \"TokenSGTX/contracts/SGTX.sol\":5988:6024  msg.sender == _owner || _freeTranfer */\n      tag_199\n      jumpi\n      pop\n        /* \"TokenSGTX/contracts/SGTX.sol\":6012:6024  _freeTranfer */\n      sload(0x04)\n      0x010000\n      swap1\n      div\n      0xff\n      and\n        /* \"TokenSGTX/contracts/SGTX.sol\":5988:6024  msg.sender == _owner || _freeTranfer */\n    tag_199:\n        /* \"TokenSGTX/contracts/SGTX.sol\":5967:6099  require(... */\n      tag_200\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap1\n      tag_157\n      jump\t// in\n    tag_200:\n        /* \"TokenSGTX/contracts/SGTX.sol\":6124:6134  msg.sender */\n      caller\n        /* \"TokenSGTX/contracts/SGTX.sol\":6144:6168  _update(from, to, value) */\n      tag_134\n        /* \"TokenSGTX/contracts/SGTX.sol\":6124:6134  msg.sender */\n      dup2\n        /* \"TokenSGTX/contracts/SGTX.sol\":6158:6160  to */\n      dup6\n        /* \"TokenSGTX/contracts/SGTX.sol\":6162:6167  value */\n      dup6\n        /* \"TokenSGTX/contracts/SGTX.sol\":6144:6151  _update */\n      tag_203\n        /* \"TokenSGTX/contracts/SGTX.sol\":6144:6168  _update(from, to, value) */\n      jump\t// in\n        /* \"TokenSGTX/contracts/SGTX.sol\":10503:10632  function TranferOwner(... */\n    tag_98:\n        /* \"TokenSGTX/contracts/SGTX.sol\":10589:10596  address */\n      0x00\n        /* \"TokenSGTX/contracts/SGTX.sol\":10189:10195  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"TokenSGTX/contracts/SGTX.sol\":10175:10185  msg.sender */\n      caller\n        /* \"TokenSGTX/contracts/SGTX.sol\":10175:10195  msg.sender == _owner */\n      eq\n        /* \"TokenSGTX/contracts/SGTX.sol\":10167:10223  require(msg.sender == _owner, \"Only Owner con activate\") */\n      tag_206\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap1\n      tag_140\n      jump\t// in\n    tag_206:\n        /* \"TokenSGTX/contracts/SGTX.sol\":10608:10614  _owner */\n      0x00\n        /* \"TokenSGTX/contracts/SGTX.sol\":10608:10625  _owner = newOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap4\n      swap1\n      swap4\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      sstore\n      swap1\n        /* \"TokenSGTX/contracts/SGTX.sol\":10503:10632  function TranferOwner(... */\n      jump\t// out\n        /* \"TokenSGTX/contracts/SGTX.sol\":11691:11848  function unFreeTransfer() public isOwner returns (bool) {... */\n    tag_102:\n        /* \"TokenSGTX/contracts/SGTX.sol\":11741:11745  bool */\n      0x00\n        /* \"TokenSGTX/contracts/SGTX.sol\":10189:10195  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"TokenSGTX/contracts/SGTX.sol\":10175:10185  msg.sender */\n      caller\n        /* \"TokenSGTX/contracts/SGTX.sol\":10175:10195  msg.sender == _owner */\n      eq\n        /* \"TokenSGTX/contracts/SGTX.sol\":10167:10223  require(msg.sender == _owner, \"Only Owner con activate\") */\n      tag_210\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap1\n      tag_140\n      jump\t// in\n    tag_210:\n        /* \"TokenSGTX/contracts/SGTX.sol\":11757:11769  _freeTranfer */\n      0x04\n        /* \"TokenSGTX/contracts/SGTX.sol\":11757:11777  _freeTranfer = false */\n      dup1\n      sload\n      not(0xff0000)\n      and\n      swap1\n      sstore\n        /* \"TokenSGTX/contracts/SGTX.sol\":11792:11841  FreeTranfered(msg.sender, block.timestamp, false) */\n      mload(0x40)\n        /* \"TokenSGTX/contracts/SGTX.sol\":11772:11777  false */\n      0x00\n      swap1\n        /* \"TokenSGTX/contracts/SGTX.sol\":11818:11833  block.timestamp */\n      timestamp\n      swap1\n        /* \"TokenSGTX/contracts/SGTX.sol\":11806:11816  msg.sender */\n      caller\n      swap1\n        /* \"TokenSGTX/contracts/SGTX.sol\":11792:11841  FreeTranfered(msg.sender, block.timestamp, false) */\n      0x01184061675848e328fb316abfd3f046f1cae4fb526dc24d09bdaa92e3921217\n      swap1\n        /* \"TokenSGTX/contracts/SGTX.sol\":11772:11777  false */\n      dup5\n      swap1\n        /* \"TokenSGTX/contracts/SGTX.sol\":11792:11841  FreeTranfered(msg.sender, block.timestamp, false) */\n      log4\n        /* \"TokenSGTX/contracts/SGTX.sol\":11691:11848  function unFreeTransfer() public isOwner returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"TokenSGTX/contracts/SGTX.sol\":9226:9388  function allowance(... */\n    tag_107:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TokenSGTX/contracts/SGTX.sol\":9354:9372  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"TokenSGTX/contracts/SGTX.sol\":9328:9335  uint256 */\n      0x00\n        /* \"TokenSGTX/contracts/SGTX.sol\":9354:9372  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"TokenSGTX/contracts/SGTX.sol\":9354:9365  _allowances */\n      0x08\n        /* \"TokenSGTX/contracts/SGTX.sol\":9354:9372  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"TokenSGTX/contracts/SGTX.sol\":9354:9381  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"TokenSGTX/contracts/SGTX.sol\":9226:9388  function allowance(... */\n      jump\t// out\n        /* \"TokenSGTX/contracts/SGTX.sol\":11078:11216  function unPause() public isOwner returns (bool) {... */\n    tag_114:\n        /* \"TokenSGTX/contracts/SGTX.sol\":11121:11125  bool */\n      0x00\n        /* \"TokenSGTX/contracts/SGTX.sol\":10189:10195  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"TokenSGTX/contracts/SGTX.sol\":10175:10185  msg.sender */\n      caller\n        /* \"TokenSGTX/contracts/SGTX.sol\":10175:10195  msg.sender == _owner */\n      eq\n        /* \"TokenSGTX/contracts/SGTX.sol\":10167:10223  require(msg.sender == _owner, \"Only Owner con activate\") */\n      tag_215\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap1\n      tag_140\n      jump\t// in\n    tag_215:\n        /* \"TokenSGTX/contracts/SGTX.sol\":11137:11144  _paused */\n      0x04\n        /* \"TokenSGTX/contracts/SGTX.sol\":11137:11152  _paused = false */\n      dup1\n      sload\n      not(0xff00)\n      and\n      swap1\n      sstore\n        /* \"TokenSGTX/contracts/SGTX.sol\":11167:11209  Paused(msg.sender, block.timestamp, false) */\n      mload(0x40)\n        /* \"TokenSGTX/contracts/SGTX.sol\":11147:11152  false */\n      0x00\n      swap1\n        /* \"TokenSGTX/contracts/SGTX.sol\":11186:11201  block.timestamp */\n      timestamp\n      swap1\n        /* \"TokenSGTX/contracts/SGTX.sol\":11174:11184  msg.sender */\n      caller\n      swap1\n        /* \"TokenSGTX/contracts/SGTX.sol\":11167:11209  Paused(msg.sender, block.timestamp, false) */\n      0xcd52c664c2010b8cb55e5d2ea0ae5add4a5b0460cfafc8af4af80f5bee1032ca\n      swap1\n        /* \"TokenSGTX/contracts/SGTX.sol\":11147:11152  false */\n      dup5\n      swap1\n        /* \"TokenSGTX/contracts/SGTX.sol\":11167:11209  Paused(msg.sender, block.timestamp, false) */\n      log4\n        /* \"TokenSGTX/contracts/SGTX.sol\":11078:11216  function unPause() public isOwner returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"TokenSGTX/contracts/SGTX.sol\":9394:9864  function _approve(... */\n    tag_135:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TokenSGTX/contracts/SGTX.sol\":9544:9563  owner == address(0) */\n      dup5\n      and\n        /* \"TokenSGTX/contracts/SGTX.sol\":9540:9629  if (owner == address(0)) {... */\n      tag_219\n      jumpi\n        /* \"TokenSGTX/contracts/SGTX.sol\":9586:9618  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n        /* \"TokenSGTX/contracts/SGTX.sol\":9615:9616  0 */\n      0x00\n        /* \"TokenSGTX/contracts/SGTX.sol\":9586:9618  ERC20InvalidApprover(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2237:2288   */\n      mstore\n        /* \"#utility.yul\":2210:2228   */\n      0x24\n      add\n        /* \"TokenSGTX/contracts/SGTX.sol\":9586:9618  ERC20InvalidApprover(address(0)) */\n      tag_125\n        /* \"#utility.yul\":2091:2294   */\n      jump\n        /* \"TokenSGTX/contracts/SGTX.sol\":9540:9629  if (owner == address(0)) {... */\n    tag_219:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TokenSGTX/contracts/SGTX.sol\":9642:9663  spender == address(0) */\n      dup4\n      and\n        /* \"TokenSGTX/contracts/SGTX.sol\":9638:9728  if (spender == address(0)) {... */\n      tag_221\n      jumpi\n        /* \"TokenSGTX/contracts/SGTX.sol\":9686:9717  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n        /* \"TokenSGTX/contracts/SGTX.sol\":9714:9715  0 */\n      0x00\n        /* \"TokenSGTX/contracts/SGTX.sol\":9686:9717  ERC20InvalidSpender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2237:2288   */\n      mstore\n        /* \"#utility.yul\":2210:2228   */\n      0x24\n      add\n        /* \"TokenSGTX/contracts/SGTX.sol\":9686:9717  ERC20InvalidSpender(address(0)) */\n      tag_125\n        /* \"#utility.yul\":2091:2294   */\n      jump\n        /* \"TokenSGTX/contracts/SGTX.sol\":9638:9728  if (spender == address(0)) {... */\n    tag_221:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TokenSGTX/contracts/SGTX.sol\":9737:9755  _allowances[owner] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"TokenSGTX/contracts/SGTX.sol\":9737:9748  _allowances */\n      0x08\n        /* \"TokenSGTX/contracts/SGTX.sol\":9737:9755  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"TokenSGTX/contracts/SGTX.sol\":9737:9764  _allowances[owner][spender] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"TokenSGTX/contracts/SGTX.sol\":9737:9772  _allowances[owner][spender] = value */\n      dup3\n      swap1\n      sstore\n        /* \"TokenSGTX/contracts/SGTX.sol\":9782:9858  if (emitEvent) {... */\n      dup1\n      iszero\n      tag_223\n      jumpi\n        /* \"TokenSGTX/contracts/SGTX.sol\":9832:9839  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TokenSGTX/contracts/SGTX.sol\":9816:9847  Approval(owner, spender, value) */\n      and\n        /* \"TokenSGTX/contracts/SGTX.sol\":9825:9830  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TokenSGTX/contracts/SGTX.sol\":9816:9847  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"TokenSGTX/contracts/SGTX.sol\":9841:9846  value */\n      dup5\n        /* \"TokenSGTX/contracts/SGTX.sol\":9816:9847  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_224\n      swap2\n        /* \"#utility.yul\":1342:1367   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n      swap1\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"TokenSGTX/contracts/SGTX.sol\":9816:9847  Approval(owner, spender, value) */\n    tag_224:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"TokenSGTX/contracts/SGTX.sol\":9782:9858  if (emitEvent) {... */\n    tag_223:\n        /* \"TokenSGTX/contracts/SGTX.sol\":9394:9864  function _approve(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"TokenSGTX/contracts/SGTX.sol\":8635:9220  function _spendAllowance(... */\n    tag_159:\n        /* \"TokenSGTX/contracts/SGTX.sol\":8764:8788  uint256 currentAllowance */\n      0x00\n        /* \"TokenSGTX/contracts/SGTX.sol\":8791:8816  allowance(owner, spender) */\n      tag_226\n        /* \"TokenSGTX/contracts/SGTX.sol\":8801:8806  owner */\n      dup5\n        /* \"TokenSGTX/contracts/SGTX.sol\":8808:8815  spender */\n      dup5\n        /* \"TokenSGTX/contracts/SGTX.sol\":8791:8800  allowance */\n      tag_107\n        /* \"TokenSGTX/contracts/SGTX.sol\":8791:8816  allowance(owner, spender) */\n      jump\t// in\n    tag_226:\n        /* \"TokenSGTX/contracts/SGTX.sol\":8764:8816  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"TokenSGTX/contracts/SGTX.sol\":8830:8846  currentAllowance */\n      dup2\n        /* \"TokenSGTX/contracts/SGTX.sol\":8830:8867  currentAllowance != type(uint256).max */\n      eq\n        /* \"TokenSGTX/contracts/SGTX.sol\":8826:9214  if (currentAllowance != type(uint256).max) {... */\n      tag_223\n      jumpi\n        /* \"TokenSGTX/contracts/SGTX.sol\":8906:8911  value */\n      dup2\n        /* \"TokenSGTX/contracts/SGTX.sol\":8887:8903  currentAllowance */\n      dup2\n        /* \"TokenSGTX/contracts/SGTX.sol\":8887:8911  currentAllowance < value */\n      lt\n        /* \"TokenSGTX/contracts/SGTX.sol\":8883:9091  if (currentAllowance < value) {... */\n      iszero\n      tag_228\n      jumpi\n        /* \"TokenSGTX/contracts/SGTX.sol\":8938:9076  ERC20InsufficientAllowance(... */\n      mload(0x40)\n      shl(0xe1, 0x7dc7a0d9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4874:4906   */\n      dup5\n      and\n        /* \"TokenSGTX/contracts/SGTX.sol\":8938:9076  ERC20InsufficientAllowance(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4856:4907   */\n      mstore\n        /* \"#utility.yul\":4923:4941   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":4916:4950   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":4966:4984   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":4959:4993   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":4829:4847   */\n      0x64\n      add\n        /* \"TokenSGTX/contracts/SGTX.sol\":8938:9076  ERC20InsufficientAllowance(... */\n      tag_125\n        /* \"#utility.yul\":4654:4999   */\n      jump\n        /* \"TokenSGTX/contracts/SGTX.sol\":8883:9091  if (currentAllowance < value) {... */\n    tag_228:\n        /* \"TokenSGTX/contracts/SGTX.sol\":9132:9189  _approve(owner, spender, currentAllowance - value, false) */\n      tag_223\n        /* \"TokenSGTX/contracts/SGTX.sol\":9141:9146  owner */\n      dup5\n        /* \"TokenSGTX/contracts/SGTX.sol\":9148:9155  spender */\n      dup5\n        /* \"TokenSGTX/contracts/SGTX.sol\":9176:9181  value */\n      dup5\n        /* \"TokenSGTX/contracts/SGTX.sol\":9157:9173  currentAllowance */\n      dup5\n        /* \"TokenSGTX/contracts/SGTX.sol\":9157:9181  currentAllowance - value */\n      sub\n        /* \"TokenSGTX/contracts/SGTX.sol\":9183:9188  false */\n      0x00\n        /* \"TokenSGTX/contracts/SGTX.sol\":9132:9140  _approve */\n      tag_135\n        /* \"TokenSGTX/contracts/SGTX.sol\":9132:9189  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n        /* \"TokenSGTX/contracts/SGTX.sol\":6202:6502  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_161:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TokenSGTX/contracts/SGTX.sol\":6285:6303  from == address(0) */\n      dup4\n      and\n        /* \"TokenSGTX/contracts/SGTX.sol\":6281:6367  if (from == address(0)) {... */\n      tag_233\n      jumpi\n        /* \"TokenSGTX/contracts/SGTX.sol\":6326:6356  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"TokenSGTX/contracts/SGTX.sol\":6353:6354  0 */\n      0x00\n        /* \"TokenSGTX/contracts/SGTX.sol\":6326:6356  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2237:2288   */\n      mstore\n        /* \"#utility.yul\":2210:2228   */\n      0x24\n      add\n        /* \"TokenSGTX/contracts/SGTX.sol\":6326:6356  ERC20InvalidSender(address(0)) */\n      tag_125\n        /* \"#utility.yul\":2091:2294   */\n      jump\n        /* \"TokenSGTX/contracts/SGTX.sol\":6281:6367  if (from == address(0)) {... */\n    tag_233:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TokenSGTX/contracts/SGTX.sol\":6380:6396  to == address(0) */\n      dup3\n      and\n        /* \"TokenSGTX/contracts/SGTX.sol\":6376:6462  if (to == address(0)) {... */\n      tag_235\n      jumpi\n        /* \"TokenSGTX/contracts/SGTX.sol\":6419:6451  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"TokenSGTX/contracts/SGTX.sol\":6448:6449  0 */\n      0x00\n        /* \"TokenSGTX/contracts/SGTX.sol\":6419:6451  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2237:2288   */\n      mstore\n        /* \"#utility.yul\":2210:2228   */\n      0x24\n      add\n        /* \"TokenSGTX/contracts/SGTX.sol\":6419:6451  ERC20InvalidReceiver(address(0)) */\n      tag_125\n        /* \"#utility.yul\":2091:2294   */\n      jump\n        /* \"TokenSGTX/contracts/SGTX.sol\":6376:6462  if (to == address(0)) {... */\n    tag_235:\n        /* \"TokenSGTX/contracts/SGTX.sol\":6471:6495  _update(from, to, value) */\n      tag_237\n        /* \"TokenSGTX/contracts/SGTX.sol\":6479:6483  from */\n      dup4\n        /* \"TokenSGTX/contracts/SGTX.sol\":6485:6487  to */\n      dup4\n        /* \"TokenSGTX/contracts/SGTX.sol\":6489:6494  value */\n      dup4\n        /* \"TokenSGTX/contracts/SGTX.sol\":6471:6478  _update */\n      tag_203\n        /* \"TokenSGTX/contracts/SGTX.sol\":6471:6495  _update(from, to, value) */\n      jump\t// in\n    tag_237:\n        /* \"TokenSGTX/contracts/SGTX.sol\":6202:6502  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"TokenSGTX/contracts/SGTX.sol\":7532:8629  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_203:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TokenSGTX/contracts/SGTX.sol\":7621:7639  from == address(0) */\n      dup4\n      and\n        /* \"TokenSGTX/contracts/SGTX.sol\":7617:8152  if (from == address(0)) {... */\n      tag_239\n      jumpi\n        /* \"TokenSGTX/contracts/SGTX.sol\":7768:7773  value */\n      dup1\n        /* \"TokenSGTX/contracts/SGTX.sol\":7757:7764  _supply */\n      0x03\n      0x00\n        /* \"TokenSGTX/contracts/SGTX.sol\":7757:7773  _supply += value */\n      dup3\n      dup3\n      sload\n      tag_240\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_240:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"TokenSGTX/contracts/SGTX.sol\":7617:8152  if (from == address(0)) {... */\n      tag_241\n      swap1\n      pop\n      jump\n    tag_239:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TokenSGTX/contracts/SGTX.sol\":7826:7841  _balances[from] */\n      dup4\n      and\n        /* \"TokenSGTX/contracts/SGTX.sol\":7804:7823  uint256 fromBalance */\n      0x00\n        /* \"TokenSGTX/contracts/SGTX.sol\":7826:7841  _balances[from] */\n      swap1\n      dup2\n      mstore\n        /* \"TokenSGTX/contracts/SGTX.sol\":7826:7835  _balances */\n      0x05\n        /* \"TokenSGTX/contracts/SGTX.sol\":7826:7841  _balances[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"TokenSGTX/contracts/SGTX.sol\":7859:7878  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"TokenSGTX/contracts/SGTX.sol\":7855:7970  if (fromBalance < value) {... */\n      iszero\n      tag_242\n      jumpi\n        /* \"TokenSGTX/contracts/SGTX.sol\":7905:7955  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      shl(0xe2, 0x391434e3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4874:4906   */\n      dup6\n      and\n        /* \"TokenSGTX/contracts/SGTX.sol\":7905:7955  ERC20InsufficientBalance(from, fromBalance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4856:4907   */\n      mstore\n        /* \"#utility.yul\":4923:4941   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":4916:4950   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":4966:4984   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":4959:4993   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":4829:4847   */\n      0x64\n      add\n        /* \"TokenSGTX/contracts/SGTX.sol\":7905:7955  ERC20InsufficientBalance(from, fromBalance, value) */\n      tag_125\n        /* \"#utility.yul\":4654:4999   */\n      jump\n        /* \"TokenSGTX/contracts/SGTX.sol\":7855:7970  if (fromBalance < value) {... */\n    tag_242:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TokenSGTX/contracts/SGTX.sol\":8090:8105  _balances[from] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"TokenSGTX/contracts/SGTX.sol\":8090:8099  _balances */\n      0x05\n        /* \"TokenSGTX/contracts/SGTX.sol\":8090:8105  _balances[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"TokenSGTX/contracts/SGTX.sol\":8108:8127  fromBalance - value */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"TokenSGTX/contracts/SGTX.sol\":8090:8127  _balances[from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"TokenSGTX/contracts/SGTX.sol\":7617:8152  if (from == address(0)) {... */\n    tag_241:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TokenSGTX/contracts/SGTX.sol\":8166:8182  to == address(0) */\n      dup3\n      and\n        /* \"TokenSGTX/contracts/SGTX.sol\":8162:8582  if (to == address(0)) {... */\n      tag_244\n      jumpi\n        /* \"TokenSGTX/contracts/SGTX.sol\":8329:8336  _supply */\n      0x03\n        /* \"TokenSGTX/contracts/SGTX.sol\":8329:8345  _supply -= value */\n      dup1\n      sload\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"TokenSGTX/contracts/SGTX.sol\":8162:8582  if (to == address(0)) {... */\n      jump(tag_245)\n    tag_244:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TokenSGTX/contracts/SGTX.sol\":8535:8548  _balances[to] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"TokenSGTX/contracts/SGTX.sol\":8535:8544  _balances */\n      0x05\n        /* \"TokenSGTX/contracts/SGTX.sol\":8535:8548  _balances[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"TokenSGTX/contracts/SGTX.sol\":8535:8557  _balances[to] += value */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"TokenSGTX/contracts/SGTX.sol\":8162:8582  if (to == address(0)) {... */\n    tag_245:\n        /* \"TokenSGTX/contracts/SGTX.sol\":8612:8614  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TokenSGTX/contracts/SGTX.sol\":8597:8622  Transfer(from, to, value) */\n      and\n        /* \"TokenSGTX/contracts/SGTX.sol\":8606:8610  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TokenSGTX/contracts/SGTX.sol\":8597:8622  Transfer(from, to, value) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"TokenSGTX/contracts/SGTX.sol\":8616:8621  value */\n      dup4\n        /* \"TokenSGTX/contracts/SGTX.sol\":8597:8622  Transfer(from, to, value) */\n      mload(0x40)\n      tag_246\n      swap2\n        /* \"#utility.yul\":1342:1367   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n      swap1\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"TokenSGTX/contracts/SGTX.sol\":8597:8622  Transfer(from, to, value) */\n    tag_246:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"TokenSGTX/contracts/SGTX.sol\":7532:8629  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:562   */\n    tag_31:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_250:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_252\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_250)\n    tag_252:\n        /* \"#utility.yul\":298:301   */\n      pop\n        /* \"#utility.yul\":483:484   */\n      0x00\n        /* \"#utility.yul\":478:480   */\n      0x40\n        /* \"#utility.yul\":469:475   */\n      dup3\n        /* \"#utility.yul\":458:467   */\n      dup7\n        /* \"#utility.yul\":454:476   */\n      add\n        /* \"#utility.yul\":450:481   */\n      add\n        /* \"#utility.yul\":443:485   */\n      mstore\n        /* \"#utility.yul\":553:555   */\n      0x40\n        /* \"#utility.yul\":546:548   */\n      0x1f\n        /* \"#utility.yul\":542:549   */\n      not\n        /* \"#utility.yul\":537:539   */\n      0x1f\n        /* \"#utility.yul\":529:535   */\n      dup4\n        /* \"#utility.yul\":525:540   */\n      add\n        /* \"#utility.yul\":521:550   */\n      and\n        /* \"#utility.yul\":510:519   */\n      dup6\n        /* \"#utility.yul\":506:551   */\n      add\n        /* \"#utility.yul\":502:556   */\n      add\n        /* \"#utility.yul\":494:556   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":567:740   */\n    tag_247:\n        /* \"#utility.yul\":635:655   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":684:715   */\n      dup2\n      and\n        /* \"#utility.yul\":674:716   */\n      dup2\n      eq\n        /* \"#utility.yul\":664:734   */\n      tag_141\n      jumpi\n        /* \"#utility.yul\":730:731   */\n      0x00\n        /* \"#utility.yul\":727:728   */\n      dup1\n        /* \"#utility.yul\":720:732   */\n      revert\n        /* \"#utility.yul\":745:999   */\n    tag_34:\n        /* \"#utility.yul\":813:819   */\n      0x00\n        /* \"#utility.yul\":821:827   */\n      dup1\n        /* \"#utility.yul\":874:876   */\n      0x40\n        /* \"#utility.yul\":862:871   */\n      dup4\n        /* \"#utility.yul\":853:860   */\n      dup6\n        /* \"#utility.yul\":849:872   */\n      sub\n        /* \"#utility.yul\":845:877   */\n      slt\n        /* \"#utility.yul\":842:894   */\n      iszero\n      tag_256\n      jumpi\n        /* \"#utility.yul\":890:891   */\n      0x00\n        /* \"#utility.yul\":887:888   */\n      dup1\n        /* \"#utility.yul\":880:892   */\n      revert\n        /* \"#utility.yul\":842:894   */\n    tag_256:\n        /* \"#utility.yul\":913:942   */\n      tag_257\n        /* \"#utility.yul\":932:941   */\n      dup4\n        /* \"#utility.yul\":913:942   */\n      tag_247\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":903:942   */\n      swap5\n        /* \"#utility.yul\":989:991   */\n      0x20\n        /* \"#utility.yul\":974:992   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":961:993   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":745:999   */\n      jump\t// out\n        /* \"#utility.yul\":1378:1564   */\n    tag_44:\n        /* \"#utility.yul\":1437:1443   */\n      0x00\n        /* \"#utility.yul\":1490:1492   */\n      0x20\n        /* \"#utility.yul\":1478:1487   */\n      dup3\n        /* \"#utility.yul\":1469:1476   */\n      dup5\n        /* \"#utility.yul\":1465:1488   */\n      sub\n        /* \"#utility.yul\":1461:1493   */\n      slt\n        /* \"#utility.yul\":1458:1510   */\n      iszero\n      tag_261\n      jumpi\n        /* \"#utility.yul\":1506:1507   */\n      0x00\n        /* \"#utility.yul\":1503:1504   */\n      dup1\n        /* \"#utility.yul\":1496:1508   */\n      revert\n        /* \"#utility.yul\":1458:1510   */\n    tag_261:\n        /* \"#utility.yul\":1529:1558   */\n      tag_262\n        /* \"#utility.yul\":1548:1557   */\n      dup3\n        /* \"#utility.yul\":1529:1558   */\n      tag_247\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":1519:1558   */\n      swap4\n        /* \"#utility.yul\":1378:1564   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1569:1897   */\n    tag_52:\n        /* \"#utility.yul\":1646:1652   */\n      0x00\n        /* \"#utility.yul\":1654:1660   */\n      dup1\n        /* \"#utility.yul\":1662:1668   */\n      0x00\n        /* \"#utility.yul\":1715:1717   */\n      0x60\n        /* \"#utility.yul\":1703:1712   */\n      dup5\n        /* \"#utility.yul\":1694:1701   */\n      dup7\n        /* \"#utility.yul\":1690:1713   */\n      sub\n        /* \"#utility.yul\":1686:1718   */\n      slt\n        /* \"#utility.yul\":1683:1735   */\n      iszero\n      tag_264\n      jumpi\n        /* \"#utility.yul\":1731:1732   */\n      0x00\n        /* \"#utility.yul\":1728:1729   */\n      dup1\n        /* \"#utility.yul\":1721:1733   */\n      revert\n        /* \"#utility.yul\":1683:1735   */\n    tag_264:\n        /* \"#utility.yul\":1754:1783   */\n      tag_265\n        /* \"#utility.yul\":1773:1782   */\n      dup5\n        /* \"#utility.yul\":1754:1783   */\n      tag_247\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":1744:1783   */\n      swap3\n      pop\n        /* \"#utility.yul\":1802:1840   */\n      tag_266\n        /* \"#utility.yul\":1836:1838   */\n      0x20\n        /* \"#utility.yul\":1825:1834   */\n      dup6\n        /* \"#utility.yul\":1821:1839   */\n      add\n        /* \"#utility.yul\":1802:1840   */\n      tag_247\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":1792:1840   */\n      swap2\n      pop\n        /* \"#utility.yul\":1887:1889   */\n      0x40\n        /* \"#utility.yul\":1876:1885   */\n      dup5\n        /* \"#utility.yul\":1872:1890   */\n      add\n        /* \"#utility.yul\":1859:1891   */\n      calldataload\n        /* \"#utility.yul\":1849:1891   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1897   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2299:2559   */\n    tag_106:\n        /* \"#utility.yul\":2367:2373   */\n      0x00\n        /* \"#utility.yul\":2375:2381   */\n      dup1\n        /* \"#utility.yul\":2428:2430   */\n      0x40\n        /* \"#utility.yul\":2416:2425   */\n      dup4\n        /* \"#utility.yul\":2407:2414   */\n      dup6\n        /* \"#utility.yul\":2403:2426   */\n      sub\n        /* \"#utility.yul\":2399:2431   */\n      slt\n        /* \"#utility.yul\":2396:2448   */\n      iszero\n      tag_270\n      jumpi\n        /* \"#utility.yul\":2444:2445   */\n      0x00\n        /* \"#utility.yul\":2441:2442   */\n      dup1\n        /* \"#utility.yul\":2434:2446   */\n      revert\n        /* \"#utility.yul\":2396:2448   */\n    tag_270:\n        /* \"#utility.yul\":2467:2496   */\n      tag_271\n        /* \"#utility.yul\":2486:2495   */\n      dup4\n        /* \"#utility.yul\":2467:2496   */\n      tag_247\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":2457:2496   */\n      swap2\n      pop\n        /* \"#utility.yul\":2515:2553   */\n      tag_272\n        /* \"#utility.yul\":2549:2551   */\n      0x20\n        /* \"#utility.yul\":2538:2547   */\n      dup5\n        /* \"#utility.yul\":2534:2552   */\n      add\n        /* \"#utility.yul\":2515:2553   */\n      tag_247\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":2505:2553   */\n      swap1\n      pop\n        /* \"#utility.yul\":2299:2559   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2564:2944   */\n    tag_118:\n        /* \"#utility.yul\":2643:2644   */\n      0x01\n        /* \"#utility.yul\":2639:2651   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2686:2698   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2707:2768   */\n      tag_274\n      jumpi\n        /* \"#utility.yul\":2761:2765   */\n      0x7f\n        /* \"#utility.yul\":2753:2759   */\n      dup3\n        /* \"#utility.yul\":2749:2766   */\n      and\n        /* \"#utility.yul\":2739:2766   */\n      swap2\n      pop\n        /* \"#utility.yul\":2707:2768   */\n    tag_274:\n        /* \"#utility.yul\":2814:2816   */\n      0x20\n        /* \"#utility.yul\":2806:2812   */\n      dup3\n        /* \"#utility.yul\":2803:2817   */\n      lt\n        /* \"#utility.yul\":2783:2801   */\n      dup2\n        /* \"#utility.yul\":2780:2818   */\n      sub\n        /* \"#utility.yul\":2777:2938   */\n      tag_275\n      jumpi\n        /* \"#utility.yul\":2860:2870   */\n      0x4e487b71\n        /* \"#utility.yul\":2855:2858   */\n      0xe0\n        /* \"#utility.yul\":2851:2871   */\n      shl\n        /* \"#utility.yul\":2848:2849   */\n      0x00\n        /* \"#utility.yul\":2841:2872   */\n      mstore\n        /* \"#utility.yul\":2895:2899   */\n      0x22\n        /* \"#utility.yul\":2892:2893   */\n      0x04\n        /* \"#utility.yul\":2885:2900   */\n      mstore\n        /* \"#utility.yul\":2923:2927   */\n      0x24\n        /* \"#utility.yul\":2920:2921   */\n      0x00\n        /* \"#utility.yul\":2913:2928   */\n      revert\n        /* \"#utility.yul\":2777:2938   */\n    tag_275:\n      pop\n        /* \"#utility.yul\":2564:2944   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2949:3304   */\n    tag_126:\n        /* \"#utility.yul\":3151:3153   */\n      0x20\n        /* \"#utility.yul\":3133:3154   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3190:3192   */\n      0x1f\n        /* \"#utility.yul\":3170:3188   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":3163:3193   */\n      mstore\n        /* \"#utility.yul\":3229:3262   */\n      0x436f6e74726163742069732050417573656420427920746865204f776e657200\n        /* \"#utility.yul\":3224:3226   */\n      0x40\n        /* \"#utility.yul\":3209:3227   */\n      dup3\n      add\n        /* \"#utility.yul\":3202:3263   */\n      mstore\n        /* \"#utility.yul\":3295:3297   */\n      0x60\n        /* \"#utility.yul\":3280:3298   */\n      add\n      swap1\n        /* \"#utility.yul\":2949:3304   */\n      jump\t// out\n        /* \"#utility.yul\":3309:3652   */\n    tag_131:\n        /* \"#utility.yul\":3511:3513   */\n      0x20\n        /* \"#utility.yul\":3493:3514   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3550:3552   */\n      0x13\n        /* \"#utility.yul\":3530:3548   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":3523:3553   */\n      mstore\n      shl(0x6d, 0x020b2323932b9b99034b990333932b2bd32b21)\n        /* \"#utility.yul\":3584:3586   */\n      0x40\n        /* \"#utility.yul\":3569:3587   */\n      dup3\n      add\n        /* \"#utility.yul\":3562:3611   */\n      mstore\n        /* \"#utility.yul\":3643:3645   */\n      0x60\n        /* \"#utility.yul\":3628:3646   */\n      add\n      swap1\n        /* \"#utility.yul\":3309:3652   */\n      jump\t// out\n        /* \"#utility.yul\":3657:4004   */\n    tag_140:\n        /* \"#utility.yul\":3859:3861   */\n      0x20\n        /* \"#utility.yul\":3841:3862   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3898:3900   */\n      0x17\n        /* \"#utility.yul\":3878:3896   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":3871:3901   */\n      mstore\n        /* \"#utility.yul\":3937:3962   */\n      0x4f6e6c79204f776e657220636f6e206163746976617465000000000000000000\n        /* \"#utility.yul\":3932:3934   */\n      0x40\n        /* \"#utility.yul\":3917:3935   */\n      dup3\n      add\n        /* \"#utility.yul\":3910:3963   */\n      mstore\n        /* \"#utility.yul\":3995:3997   */\n      0x60\n        /* \"#utility.yul\":3980:3998   */\n      add\n      swap1\n        /* \"#utility.yul\":3657:4004   */\n      jump\t// out\n        /* \"#utility.yul\":4009:4422   */\n    tag_157:\n        /* \"#utility.yul\":4211:4213   */\n      0x20\n        /* \"#utility.yul\":4193:4214   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4250:4252   */\n      0x31\n        /* \"#utility.yul\":4230:4248   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":4223:4253   */\n      mstore\n        /* \"#utility.yul\":4289:4323   */\n      0x5472616e666572206973206e6f7420616c6c6f77656420746f2075736572206f\n        /* \"#utility.yul\":4284:4286   */\n      0x40\n        /* \"#utility.yul\":4269:4287   */\n      dup3\n      add\n        /* \"#utility.yul\":4262:4324   */\n      mstore\n      shl(0x7a, 0x1b9b1e4813dddb995c8818d85b881cd95d)\n        /* \"#utility.yul\":4355:4357   */\n      0x60\n        /* \"#utility.yul\":4340:4358   */\n      dup3\n      add\n        /* \"#utility.yul\":4333:4380   */\n      mstore\n        /* \"#utility.yul\":4412:4415   */\n      0x80\n        /* \"#utility.yul\":4397:4416   */\n      add\n      swap1\n        /* \"#utility.yul\":4009:4422   */\n      jump\t// out\n        /* \"#utility.yul\":4427:4649   */\n    tag_174:\n        /* \"#utility.yul\":4492:4501   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4513:4523   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":4510:4643   */\n      iszero\n      tag_132\n      jumpi\n        /* \"#utility.yul\":4565:4575   */\n      0x4e487b71\n        /* \"#utility.yul\":4560:4563   */\n      0xe0\n        /* \"#utility.yul\":4556:4576   */\n      shl\n        /* \"#utility.yul\":4553:4554   */\n      0x00\n        /* \"#utility.yul\":4546:4577   */\n      mstore\n        /* \"#utility.yul\":4600:4604   */\n      0x11\n        /* \"#utility.yul\":4597:4598   */\n      0x04\n        /* \"#utility.yul\":4590:4605   */\n      mstore\n        /* \"#utility.yul\":4628:4632   */\n      0x24\n        /* \"#utility.yul\":4625:4626   */\n      0x00\n        /* \"#utility.yul\":4618:4633   */\n      revert\n\n    auxdata: 0xa264697066735822122047bb95ecfbd8e9f7b91f115dbc8e33c4d6c4b77b4202a500d4827bfd3a286eee64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_215": {
									"entryPoint": null,
									"id": 215,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 171,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint8_fromMemory": {
									"entryPoint": 341,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 534,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 616,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 476,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 151,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4356:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "210:776:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "259:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "268:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "271:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "246:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:35:1"
															},
															"nodeType": "YulIf",
															"src": "220:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "294:13:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "288:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "334:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "338:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "342:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:18:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "320:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "367:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:10:1"
															},
															"nodeType": "YulIf",
															"src": "353:36:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "412:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:7:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "402:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "444:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "438:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "428:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "506:4:1",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:1"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:1"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "518:2:1",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:1"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "474:53:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "460:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "586:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "539:46:1"
															},
															"nodeType": "YulIf",
															"src": "536:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "624:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "617:22:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "648:18:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "685:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "679:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "735:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "744:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "737:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "737:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:1"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:1"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "725:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "704:24:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "730:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:33:1"
															},
															"nodeType": "YulIf",
															"src": "698:53:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "760:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "769:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "764:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "825:87:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "854:6:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "862:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "850:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "850:14:1"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "866:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "846:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "846:23:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "885:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "893:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "881:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "881:14:1"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "897:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "877:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "877:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "871:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "871:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "839:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "839:63:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "839:63:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "790:1:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "793:2:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "787:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:9:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "797:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "799:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "808:1:1"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "811:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "804:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "799:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "783:3:1",
																"statements": []
															},
															"src": "779:133:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "936:6:1"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "944:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "932:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "932:15:1"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "949:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "928:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "928:24:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "954:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "921:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "921:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "921:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "965:15:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "974:6:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "965:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "184:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "192:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "200:5:1",
														"type": ""
													}
												],
												"src": "146:840:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1141:624:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1188:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1197:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1200:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1190:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1190:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1190:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1162:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1171:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1158:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1158:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1183:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1154:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1154:33:1"
															},
															"nodeType": "YulIf",
															"src": "1151:53:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1213:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1233:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1227:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1227:16:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1217:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1252:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1270:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1274:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1266:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1266:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1278:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1262:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1262:18:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1256:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1307:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1316:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1319:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1309:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1309:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1309:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1295:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1303:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1292:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1292:14:1"
															},
															"nodeType": "YulIf",
															"src": "1289:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1332:71:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1375:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1386:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1371:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1371:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1395:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1342:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1342:61:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1332:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1412:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1438:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1449:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1434:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1434:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1428:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1428:25:1"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1416:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1482:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1491:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1494:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1484:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1484:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1484:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1468:8:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1478:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1465:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1465:16:1"
															},
															"nodeType": "YulIf",
															"src": "1462:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1507:73:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1550:9:1"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1561:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1546:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1546:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1572:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1517:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1517:63:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1507:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1589:35:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1609:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1620:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1605:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1605:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1599:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1599:25:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1589:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1633:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1656:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1667:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1652:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1652:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1646:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1646:25:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1637:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1719:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1728:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1731:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1721:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1721:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1721:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1693:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1704:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1711:4:1",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1700:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1700:16:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1690:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1690:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1683:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1683:35:1"
															},
															"nodeType": "YulIf",
															"src": "1680:55:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1744:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1754:5:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "1744:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint8_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1083:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1094:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1106:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1114:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1122:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1130:6:1",
														"type": ""
													}
												],
												"src": "991:774:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1825:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1835:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1849:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1852:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1845:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1845:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1835:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1866:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1896:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1902:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1892:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1892:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1870:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1943:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1945:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1959:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1967:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1955:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1955:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1945:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1923:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1916:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1916:26:1"
															},
															"nodeType": "YulIf",
															"src": "1913:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2033:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2054:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2061:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2066:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2057:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2057:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2047:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2047:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2047:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2098:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2101:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2091:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2091:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2091:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2126:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2129:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2119:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2119:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2119:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1989:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2012:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2020:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2009:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2009:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1986:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1986:38:1"
															},
															"nodeType": "YulIf",
															"src": "1983:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1805:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1814:6:1",
														"type": ""
													}
												],
												"src": "1770:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2211:65:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2228:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2231:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2221:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2221:14:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2221:14:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2244:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2262:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2265:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "2252:9:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2252:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2244:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "2194:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2202:4:1",
														"type": ""
													}
												],
												"src": "2155:121:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2362:464:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2395:425:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2409:11:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "2419:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "2413:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2440:2:1"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2444:5:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2433:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2433:17:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2433:17:1"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2463:31:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2485:2:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2489:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "2475:9:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2475:19:1"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "2467:4:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2507:57:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2530:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2540:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "2547:10:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2559:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2543:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2543:19:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2536:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2536:27:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2526:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2526:38:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "2511:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2601:23:1",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2603:19:1",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "2618:4:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "2603:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "2583:10:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2595:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2580:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2580:20:1"
																		},
																		"nodeType": "YulIf",
																		"src": "2577:47:1"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2637:41:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2651:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2661:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "2668:3:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2673:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2664:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2664:12:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2657:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2657:20:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2647:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2647:31:1"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "2641:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2691:24:1",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "2704:11:1"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "2695:5:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2789:21:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2798:5:1"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "2805:2:1"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "2791:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2791:17:1"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "2791:17:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2739:5:1"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "2746:2:1"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2736:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2736:13:1"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "2750:26:1",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2752:22:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2765:5:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2772:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2761:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2761:13:1"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "2752:5:1"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "2732:3:1",
																			"statements": []
																		},
																		"src": "2728:82:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "2378:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2383:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2375:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2375:11:1"
															},
															"nodeType": "YulIf",
															"src": "2372:448:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2334:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2341:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "2346:10:1",
														"type": ""
													}
												],
												"src": "2281:545:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2916:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2926:65:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "2941:4:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2959:1:1",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "2962:3:1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "2955:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2955:11:1"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2972:1:1",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "2968:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2968:6:1"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "2951:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2951:24:1"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2947:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2947:29:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2937:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2937:40:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2983:1:1",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "2986:3:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2979:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2979:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2934:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2934:57:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "2926:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2893:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2899:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "2907:4:1",
														"type": ""
													}
												],
												"src": "2831:166:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3098:1256:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3108:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3128:3:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3122:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3122:10:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "3112:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3175:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3177:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3177:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3177:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3147:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3163:2:1",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3167:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "3159:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3159:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3171:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3155:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3155:18:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3144:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3144:30:1"
															},
															"nodeType": "YulIf",
															"src": "3141:56:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3250:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "3288:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "3282:5:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3282:11:1"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "3256:25:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3256:38:1"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3296:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "3206:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3206:97:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3206:97:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3312:18:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3329:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "3316:9:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3339:23:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3358:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "3343:11:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3371:24:1",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "3384:11:1"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "3371:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3441:656:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3455:35:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3474:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3486:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "3482:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3482:7:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "3470:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3470:20:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "3459:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3503:49:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3547:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "3517:29:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3517:35:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "3507:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3565:10:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3574:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "3569:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3652:172:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3677:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "3695:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "3700:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "3691:3:1"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3691:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "3685:5:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3685:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3670:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3670:42:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3670:42:1"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3729:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3743:6:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3751:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3739:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3739:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "3729:6:1"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3770:40:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "3787:9:1"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3798:11:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3783:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3783:27:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "3770:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3599:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3602:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3596:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3596:14:1"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "3611:28:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3613:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "3622:1:1"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3625:11:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3618:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3618:19:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3613:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "3592:3:1",
																					"statements": []
																				},
																				"src": "3588:236:1"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3872:166:1",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "3890:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "3917:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "3922:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3913:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3913:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3907:5:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3907:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "3894:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3957:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "3969:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "3996:1:1",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "3999:6:1"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "3992:3:1"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "3992:14:1"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "4008:3:1",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "3988:3:1"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3988:24:1"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "4018:1:1",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "4014:3:1"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "4014:6:1"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "3984:3:1"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "3984:37:1"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "3980:3:1"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3980:42:1"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "3965:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3965:58:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3950:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3950:74:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3950:74:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3843:7:1"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3852:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3840:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3840:19:1"
																				},
																				"nodeType": "YulIf",
																				"src": "3837:201:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4058:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "4072:1:1",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "4075:6:1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "4068:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "4068:14:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4084:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4064:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4064:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4051:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4051:36:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4051:36:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3434:663:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3439:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4114:234:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4128:14:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4141:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "4132:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4177:67:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "4195:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "4214:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "4219:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "4210:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4210:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "4204:5:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4204:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "4195:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "4158:6:1"
																				},
																				"nodeType": "YulIf",
																				"src": "4155:89:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4264:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "4323:5:1"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "4330:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "4270:52:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4270:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4257:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4257:81:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4257:81:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4106:242:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3414:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3422:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3411:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3411:14:1"
															},
															"nodeType": "YulSwitch",
															"src": "3404:944:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "3083:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3089:3:1",
														"type": ""
													}
												],
												"src": "3002:1352:1"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), _4), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint8_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n        value2 := mload(add(headStart, 64))\n        let value := mload(add(headStart, 96))\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value3 := value\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x116A CODESIZE SUB DUP1 PUSH3 0x116A DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x33 SWAP2 PUSH3 0x155 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0x3 DUP3 SWAP1 SSTORE PUSH1 0x1 PUSH3 0x57 DUP6 DUP3 PUSH3 0x268 JUMP JUMPDEST POP PUSH1 0x2 PUSH3 0x66 DUP5 DUP3 PUSH3 0x268 JUMP JUMPDEST POP PUSH1 0x4 DUP1 SLOAD PUSH3 0xFFFFFF NOT AND PUSH1 0xFF SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP PUSH1 0x3 SLOAD CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE POP PUSH3 0x330 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0xBB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0xD8 JUMPI PUSH3 0xD8 PUSH3 0x97 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x103 JUMPI PUSH3 0x103 PUSH3 0x97 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x11F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x142 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x123 JUMP JUMPDEST PUSH0 SWAP4 DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x169 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x180 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH3 0x18E DUP9 DUP4 DUP10 ADD PUSH3 0xAB JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x1A4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH3 0x1B3 DUP8 DUP3 DUP9 ADD PUSH3 0xAB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH3 0x1D1 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x1F1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x210 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x263 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x23E JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x25F JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x24A JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x284 JUMPI PUSH3 0x284 PUSH3 0x97 JUMP JUMPDEST PUSH3 0x29C DUP2 PUSH3 0x295 DUP5 SLOAD PUSH3 0x1DC JUMP JUMPDEST DUP5 PUSH3 0x216 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x2D2 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x2BA JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x25F JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x302 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x2E1 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x320 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xE2C DUP1 PUSH3 0x33E PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x13D JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7C77DB72 GT PUSH2 0xB4 JUMPI DUP1 PUSH4 0xB187BD26 GT PUSH2 0x79 JUMPI DUP1 PUSH4 0xB187BD26 EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0xB8F309C7 EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0xD6B70AC0 EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0xEB1D8152 EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0xF7B188A5 EQ PUSH2 0x314 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7C77DB72 EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x8111F24E EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0x91E2C315 EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x289 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x105 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x6985A022 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x6EBCF607 EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x211 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x1AA66049 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x1D4CA8BF EQ PUSH2 0x1A7 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x149 PUSH2 0x31C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x156 SWAP2 SWAP1 PUSH2 0xBA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x172 PUSH2 0x16D CALLDATASIZE PUSH1 0x4 PUSH2 0xC01 JUMP JUMPDEST PUSH2 0x3AC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x156 JUMP JUMPDEST PUSH1 0x3 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x156 JUMP JUMPDEST PUSH2 0x172 PUSH2 0x1A2 CALLDATASIZE PUSH1 0x4 PUSH2 0xC29 JUMP JUMPDEST PUSH2 0x43E JUMP JUMPDEST PUSH2 0x172 PUSH2 0x494 JUMP JUMPDEST PUSH2 0x172 PUSH2 0x1BD CALLDATASIZE PUSH1 0x4 PUSH2 0xC49 JUMP JUMPDEST PUSH2 0x504 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x156 JUMP JUMPDEST PUSH2 0x172 PUSH2 0x1E5 CALLDATASIZE PUSH1 0x4 PUSH2 0xC01 JUMP JUMPDEST PUSH2 0x5B2 JUMP JUMPDEST PUSH2 0x172 PUSH2 0x624 JUMP JUMPDEST PUSH2 0x186 PUSH2 0x200 CALLDATASIZE PUSH1 0x4 PUSH2 0xC29 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x186 PUSH2 0x21F CALLDATASIZE PUSH1 0x4 PUSH2 0xC29 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x172 PUSH2 0x247 CALLDATASIZE PUSH1 0x4 PUSH2 0xC29 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x172 PUSH2 0x269 CALLDATASIZE PUSH1 0x4 PUSH2 0xC29 JUMP JUMPDEST PUSH2 0x692 JUMP JUMPDEST PUSH2 0x172 PUSH2 0x27C CALLDATASIZE PUSH1 0x4 PUSH2 0xC29 JUMP JUMPDEST PUSH2 0x6AF JUMP JUMPDEST PUSH2 0x149 PUSH2 0x6FD JUMP JUMPDEST PUSH2 0x172 PUSH2 0x297 CALLDATASIZE PUSH1 0x4 PUSH2 0xC01 JUMP JUMPDEST PUSH2 0x70C JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x172 JUMP JUMPDEST PUSH2 0x2BF PUSH2 0x2BA CALLDATASIZE PUSH1 0x4 PUSH2 0xC29 JUMP JUMPDEST PUSH2 0x7A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x156 JUMP JUMPDEST PUSH2 0x172 PUSH2 0x7F1 JUMP JUMPDEST PUSH2 0x186 PUSH2 0x2ED CALLDATASIZE PUSH1 0x4 PUSH2 0xC82 JUMP JUMPDEST PUSH2 0x858 JUMP JUMPDEST PUSH2 0x172 PUSH2 0x300 CALLDATASIZE PUSH1 0x4 PUSH2 0xC29 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x172 PUSH2 0x882 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x32B SWAP1 PUSH2 0xCB3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x357 SWAP1 PUSH2 0xCB3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3A2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x379 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3A2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x385 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH0 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x3DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D6 SWAP1 PUSH2 0xCEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3E8 CALLER PUSH2 0x692 JUMP JUMPDEST ISZERO PUSH2 0x405 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D6 SWAP1 PUSH2 0xD22 JUMP JUMPDEST PUSH1 0x4 SLOAD CALLER SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x425 JUMPI PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 POP JUMPDEST PUSH2 0x432 DUP2 DUP6 DUP6 PUSH1 0x1 PUSH2 0x8E8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x468 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D6 SWAP1 PUSH2 0xD4F JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D6 SWAP1 PUSH2 0xD4F JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH3 0xFF0000 NOT AND PUSH3 0x10000 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 SWAP1 TIMESTAMP SWAP1 CALLER SWAP1 PUSH32 0x1184061675848E328FB316ABFD3F046F1CAE4FB526DC24D09BDAA92E3921217 SWAP1 PUSH0 SWAP1 LOG4 POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH0 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x52E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D6 SWAP1 PUSH2 0xCEB JUMP JUMPDEST PUSH2 0x537 CALLER PUSH2 0x692 JUMP JUMPDEST ISZERO PUSH2 0x554 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D6 SWAP1 PUSH2 0xD22 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x574 JUMPI POP PUSH1 0x4 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH2 0x590 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D6 SWAP1 PUSH2 0xD86 JUMP JUMPDEST CALLER PUSH2 0x59C DUP6 DUP3 DUP6 PUSH2 0x9BB JUMP JUMPDEST PUSH2 0x5A7 DUP6 DUP6 DUP6 PUSH2 0xA18 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH0 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x5DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D6 SWAP1 PUSH2 0xCEB JUMP JUMPDEST PUSH2 0x5E5 CALLER PUSH2 0x692 JUMP JUMPDEST ISZERO PUSH2 0x602 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D6 SWAP1 PUSH2 0xD22 JUMP JUMPDEST CALLER PUSH2 0x432 DUP2 DUP6 DUP6 PUSH2 0x613 DUP4 DUP4 PUSH2 0x858 JUMP JUMPDEST PUSH2 0x61D SWAP2 SWAP1 PUSH2 0xDD7 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x8E8 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x64E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D6 SWAP1 PUSH2 0xD4F JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 SWAP1 TIMESTAMP SWAP1 CALLER SWAP1 PUSH32 0xCD52C664C2010B8CB55E5D2EA0AE5ADD4A5B0460CFAFC8AF4AF80F5BEE1032CA SWAP1 PUSH0 SWAP1 LOG4 POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D6 SWAP1 PUSH2 0xD4F JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x32B SWAP1 PUSH2 0xCB3 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH0 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x736 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D6 SWAP1 PUSH2 0xCEB JUMP JUMPDEST PUSH2 0x73F CALLER PUSH2 0x692 JUMP JUMPDEST ISZERO PUSH2 0x75C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D6 SWAP1 PUSH2 0xD22 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x77C JUMPI POP PUSH1 0x4 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH2 0x798 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D6 SWAP1 PUSH2 0xD86 JUMP JUMPDEST CALLER PUSH2 0x432 DUP2 DUP6 DUP6 PUSH2 0xA7A JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D6 SWAP1 PUSH2 0xD4F JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SWAP1 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x81B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D6 SWAP1 PUSH2 0xD4F JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH3 0xFF0000 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH0 SWAP1 TIMESTAMP SWAP1 CALLER SWAP1 PUSH32 0x1184061675848E328FB316ABFD3F046F1CAE4FB526DC24D09BDAA92E3921217 SWAP1 DUP5 SWAP1 LOG4 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D6 SWAP1 PUSH2 0xD4F JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH0 SWAP1 TIMESTAMP SWAP1 CALLER SWAP1 PUSH32 0xCD52C664C2010B8CB55E5D2EA0AE5ADD4A5B0460CFAFC8AF4AF80F5BEE1032CA SWAP1 DUP5 SWAP1 LOG4 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x911 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3D6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x93A JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3D6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x9B5 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x9AC SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x9C6 DUP5 DUP5 PUSH2 0x858 JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 EQ PUSH2 0x9B5 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xA0A JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x3D6 JUMP JUMPDEST PUSH2 0x9B5 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x8E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA41 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3D6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA6A JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3D6 JUMP JUMPDEST PUSH2 0xA75 DUP4 DUP4 DUP4 PUSH2 0xA7A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xAA4 JUMPI DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA99 SWAP2 SWAP1 PUSH2 0xDD7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xB14 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xAF6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x3D6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB30 JUMPI PUSH1 0x3 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0xB4E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xB93 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xBCB JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xBAF JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x48F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC1B DUP4 PUSH2 0xBEB JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC39 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC42 DUP3 PUSH2 0xBEB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC5B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC64 DUP5 PUSH2 0xBEB JUMP JUMPDEST SWAP3 POP PUSH2 0xC72 PUSH1 0x20 DUP6 ADD PUSH2 0xBEB JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC93 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC9C DUP4 PUSH2 0xBEB JUMP JUMPDEST SWAP2 POP PUSH2 0xCAA PUSH1 0x20 DUP5 ADD PUSH2 0xBEB JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xCC7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xCE5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x436F6E74726163742069732050417573656420427920746865204F776E657200 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x20B2323932B9B99034B990333932B2BD32B21 PUSH1 0x6D SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x17 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C79204F776E657220636F6E206163746976617465000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x5472616E666572206973206E6F7420616C6C6F77656420746F2075736572206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1B9B1E4813DDDB995C8818D85B881CD95D PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x438 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE 0xBB SWAP6 0xEC 0xFB 0xD8 0xE9 0xF7 0xB9 0x1F GT 0x5D 0xBC DUP15 CALLER 0xC4 0xD6 0xC4 0xB7 PUSH28 0x4202A500D4827BFD3A286EEE64736F6C634300081400330000000000 ",
							"sourceMap": "4536:7710:0:-:0;;;5265:368;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5403:6;:19;;-1:-1:-1;;;;;;5403:19:0;5412:10;5403:19;;;5432:7;:17;;;5403:19;5459:13;5467:5;5403:19;5459:13;:::i;:::-;-1:-1:-1;5482:7:0;:17;5492:7;5482;:17;:::i;:::-;-1:-1:-1;5509:9:0;:21;;-1:-1:-1;;5565:20:0;5509:21;;;;5565:20;;;;;;-1:-1:-1;;5619:7:0;;5605:10;5509:9;5595:21;;;:9;:21;;;;;:31;-1:-1:-1;4536:7710:0;;14:127:1;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:1;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:1;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:1:o;991:774::-;1106:6;1114;1122;1130;1183:3;1171:9;1162:7;1158:23;1154:33;1151:53;;;1200:1;1197;1190:12;1151:53;1227:16;;-1:-1:-1;;;;;1292:14:1;;;1289:34;;;1319:1;1316;1309:12;1289:34;1342:61;1395:7;1386:6;1375:9;1371:22;1342:61;:::i;:::-;1332:71;;1449:2;1438:9;1434:18;1428:25;1412:41;;1478:2;1468:8;1465:16;1462:36;;;1494:1;1491;1484:12;1462:36;;1517:63;1572:7;1561:8;1550:9;1546:24;1517:63;:::i;:::-;1507:73;;;1620:2;1609:9;1605:18;1599:25;1589:35;;1667:2;1656:9;1652:18;1646:25;1711:4;1704:5;1700:16;1693:5;1690:27;1680:55;;1731:1;1728;1721:12;1680:55;991:774;;;;-1:-1:-1;991:774:1;;-1:-1:-1;;991:774:1:o;1770:380::-;1849:1;1845:12;;;;1892;;;1913:61;;1967:4;1959:6;1955:17;1945:27;;1913:61;2020:2;2012:6;2009:14;1989:18;1986:38;1983:161;;2066:10;2061:3;2057:20;2054:1;2047:31;2101:4;2098:1;2091:15;2129:4;2126:1;2119:15;1983:161;;1770:380;;;:::o;2281:545::-;2383:2;2378:3;2375:11;2372:448;;;2419:1;2444:5;2440:2;2433:17;2489:4;2485:2;2475:19;2559:2;2547:10;2543:19;2540:1;2536:27;2530:4;2526:38;2595:4;2583:10;2580:20;2577:47;;;-1:-1:-1;2618:4:1;2577:47;2673:2;2668:3;2664:12;2661:1;2657:20;2651:4;2647:31;2637:41;;2728:82;2746:2;2739:5;2736:13;2728:82;;;2791:17;;;2772:1;2761:13;2728:82;;;2732:3;;;2372:448;2281:545;;;:::o;3002:1352::-;3122:10;;-1:-1:-1;;;;;3144:30:1;;3141:56;;;3177:18;;:::i;:::-;3206:97;3296:6;3256:38;3288:4;3282:11;3256:38;:::i;:::-;3250:4;3206:97;:::i;:::-;3358:4;;3422:2;3411:14;;3439:1;3434:663;;;;4141:1;4158:6;4155:89;;;-1:-1:-1;4210:19:1;;;4204:26;4155:89;-1:-1:-1;;2959:1:1;2955:11;;;2951:24;2947:29;2937:40;2983:1;2979:11;;;2934:57;4257:81;;3404:944;;3434:663;2228:1;2221:14;;;2265:4;2252:18;;-1:-1:-1;;3470:20:1;;;3588:236;3602:7;3599:1;3596:14;3588:236;;;3691:19;;;3685:26;3670:42;;3783:27;;;;3751:1;3739:14;;;;3618:19;;3588:236;;;3592:3;3852:6;3843:7;3840:19;3837:201;;;3913:19;;;3907:26;-1:-1:-1;;3996:1:1;3992:14;;;4008:3;3988:24;3984:37;3980:42;3965:58;3950:74;;3837:201;-1:-1:-1;;;;;4084:1:1;4068:14;;;4064:22;4051:36;;-1:-1:-1;3002:1352:1:o;:::-;4536:7710:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@FreezeAddress_822": {
									"entryPoint": 1086,
									"id": 822,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@Pause_734": {
									"entryPoint": 1572,
									"id": 734,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@TranferOwner_704": {
									"entryPoint": 1956,
									"id": 704,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@UnFreezeAddress_841": {
									"entryPoint": 1711,
									"id": 841,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_approve_630": {
									"entryPoint": 2280,
									"id": 630,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_balances_137": {
									"entryPoint": null,
									"id": 137,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_freeze_145": {
									"entryPoint": null,
									"id": 145,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_holders_141": {
									"entryPoint": null,
									"id": 141,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_spendAllowance_555": {
									"entryPoint": 2491,
									"id": 555,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_318": {
									"entryPoint": 2584,
									"id": 318,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_508": {
									"entryPoint": 2682,
									"id": 508,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_571": {
									"entryPoint": 2136,
									"id": 571,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_354": {
									"entryPoint": 940,
									"id": 354,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_235": {
									"entryPoint": null,
									"id": 235,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_654": {
									"entryPoint": null,
									"id": 654,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@freeTranfer_784": {
									"entryPoint": 1172,
									"id": 784,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@increaseAllowance_387": {
									"entryPoint": 1458,
									"id": 387,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isFreezed_853": {
									"entryPoint": 1682,
									"id": 853,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isPaused_712": {
									"entryPoint": null,
									"id": 712,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@name_638": {
									"entryPoint": 796,
									"id": 638,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_646": {
									"entryPoint": 1789,
									"id": 646,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_223": {
									"entryPoint": null,
									"id": 223,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_432": {
									"entryPoint": 1284,
									"id": 432,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_272": {
									"entryPoint": 1804,
									"id": 272,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unFreeTransfer_804": {
									"entryPoint": 2033,
									"id": 804,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@unPause_754": {
									"entryPoint": 2178,
									"id": 754,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 3051,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3113,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3202,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3145,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3073,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2976,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_80bdb03162cdac4f69a5606b1b71af18d2a983a9d96bc24cd45e880fd4e35aa3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3307,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_975596aa8809061341563460bef71b4b93fbd02a33f75eafae8d6e8a663c3ce7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3462,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cd606c362edffb7928e2c0a22255d099d9c34b5a7e01c09b5fd45c71671419c0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3407,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d20a01f302ff9eb27a985520fd7c4646a30685fa767b089ac0f2975ef894fd64__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3362,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3543,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 3251,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5001:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "135:427:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "155:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "200:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "232:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "284:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "279:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "344:90:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "388:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "316:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "318:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "298:3:1",
																"statements": []
															},
															"src": "294:140:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "458:9:1"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "469:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "454:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "454:22:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "478:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "450:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "450:31:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "483:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "443:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "443:42:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "443:42:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "494:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "510:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "529:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "537:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "525:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "525:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "546:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "542:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "542:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "521:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "521:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "506:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "506:45:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "553:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "104:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "115:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "126:4:1",
														"type": ""
													}
												],
												"src": "14:548:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "616:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "626:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "648:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "635:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "635:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "626:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "718:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "727:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "730:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "720:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "720:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "720:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "677:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "688:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "703:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "708:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "699:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "699:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "712:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "695:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "695:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "684:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "684:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "674:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "674:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "667:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "667:50:1"
															},
															"nodeType": "YulIf",
															"src": "664:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "595:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "606:5:1",
														"type": ""
													}
												],
												"src": "567:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "832:167:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "878:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "887:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "890:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "880:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "880:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "880:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "853:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "862:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "849:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "849:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "874:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "845:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "845:32:1"
															},
															"nodeType": "YulIf",
															"src": "842:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "903:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "932:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "913:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "913:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "903:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "951:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "978:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "989:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "974:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "974:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "961:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "961:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "951:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "790:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "801:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "813:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "821:6:1",
														"type": ""
													}
												],
												"src": "745:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1099:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1109:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1121:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1132:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1117:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1117:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1109:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1151:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1176:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1169:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1169:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1162:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1162:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1144:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1144:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1144:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1068:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1079:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1090:4:1",
														"type": ""
													}
												],
												"src": "1004:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1297:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1307:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1319:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1330:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1315:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1315:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1307:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1349:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1360:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1342:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1342:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1342:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1266:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1277:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1288:4:1",
														"type": ""
													}
												],
												"src": "1196:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1448:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1494:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1503:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1506:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1496:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1496:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1496:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1469:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1478:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1465:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1465:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1490:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1461:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1461:32:1"
															},
															"nodeType": "YulIf",
															"src": "1458:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1519:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1548:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1529:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1529:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1519:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1414:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1425:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1437:6:1",
														"type": ""
													}
												],
												"src": "1378:186:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1673:224:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1719:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1728:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1731:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1721:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1721:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1721:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1694:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1703:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1690:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1690:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1715:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1686:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1686:32:1"
															},
															"nodeType": "YulIf",
															"src": "1683:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1744:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1773:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1754:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1754:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1744:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1792:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1825:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1836:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1821:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1821:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1802:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1802:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1792:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1849:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1876:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1887:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1872:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1872:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1859:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1859:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1849:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1623:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1634:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1646:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1654:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1662:6:1",
														"type": ""
													}
												],
												"src": "1569:328:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1999:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2009:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2021:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2032:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2017:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2017:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2009:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2051:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2066:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2074:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2062:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2062:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2044:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2044:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2044:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1968:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1979:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1990:4:1",
														"type": ""
													}
												],
												"src": "1902:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2192:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2202:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2214:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2225:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2210:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2210:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2202:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2244:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2259:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2275:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2280:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2271:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2271:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2284:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2267:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2267:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2255:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2255:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2237:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2237:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2237:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2161:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2172:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2183:4:1",
														"type": ""
													}
												],
												"src": "2091:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2386:173:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2432:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2441:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2444:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2434:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2434:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2434:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2407:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2416:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2403:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2403:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2428:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2399:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2399:32:1"
															},
															"nodeType": "YulIf",
															"src": "2396:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2457:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2486:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2467:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2467:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2457:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2505:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2538:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2549:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2534:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2534:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2515:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2515:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2505:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2344:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2355:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2367:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2375:6:1",
														"type": ""
													}
												],
												"src": "2299:260:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2619:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2629:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2643:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2646:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2639:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2639:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2629:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2660:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2690:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2696:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2686:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2686:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2664:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2737:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2739:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2753:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2761:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2749:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2749:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2739:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2717:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2710:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2710:26:1"
															},
															"nodeType": "YulIf",
															"src": "2707:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2827:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2848:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2855:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2860:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2851:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2851:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2841:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2841:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2841:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2892:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2895:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2885:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2885:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2885:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2920:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2923:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2913:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2913:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2913:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2783:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2806:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2814:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2803:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2803:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2780:38:1"
															},
															"nodeType": "YulIf",
															"src": "2777:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2599:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2608:6:1",
														"type": ""
													}
												],
												"src": "2564:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3123:181:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3140:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3151:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3133:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3133:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3133:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3174:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3185:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3170:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3170:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3190:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3163:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3163:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3163:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3213:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3224:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3209:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3209:18:1"
																	},
																	{
																		"hexValue": "436f6e74726163742069732050417573656420427920746865204f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3229:33:1",
																		"type": "",
																		"value": "Contract is PAused By the Owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3202:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3202:61:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3202:61:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3272:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3284:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3295:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3280:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3280:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3272:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_80bdb03162cdac4f69a5606b1b71af18d2a983a9d96bc24cd45e880fd4e35aa3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3100:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3114:4:1",
														"type": ""
													}
												],
												"src": "2949:355:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3483:169:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3500:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3511:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3493:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3493:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3493:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3534:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3545:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3530:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3530:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3550:2:1",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3523:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3523:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3523:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3573:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3584:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3569:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3569:18:1"
																	},
																	{
																		"hexValue": "4164647265737320697320667265657a656420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3589:21:1",
																		"type": "",
																		"value": "Address is freezed "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3562:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3562:49:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3562:49:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3620:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3632:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3643:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3628:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3628:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3620:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d20a01f302ff9eb27a985520fd7c4646a30685fa767b089ac0f2975ef894fd64__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3460:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3474:4:1",
														"type": ""
													}
												],
												"src": "3309:343:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3831:173:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3848:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3859:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3841:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3841:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3841:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3882:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3893:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3878:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3878:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3898:2:1",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3871:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3871:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3871:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3921:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3932:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3917:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3917:18:1"
																	},
																	{
																		"hexValue": "4f6e6c79204f776e657220636f6e206163746976617465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3937:25:1",
																		"type": "",
																		"value": "Only Owner con activate"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3910:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3910:53:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3910:53:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3972:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3984:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3995:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3980:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3980:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3972:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cd606c362edffb7928e2c0a22255d099d9c34b5a7e01c09b5fd45c71671419c0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3808:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3822:4:1",
														"type": ""
													}
												],
												"src": "3657:347:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4183:239:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4200:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4211:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4193:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4193:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4193:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4234:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4245:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4230:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4230:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4250:2:1",
																		"type": "",
																		"value": "49"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4223:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4223:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4223:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4273:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4284:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4269:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4269:18:1"
																	},
																	{
																		"hexValue": "5472616e666572206973206e6f7420616c6c6f77656420746f2075736572206f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4289:34:1",
																		"type": "",
																		"value": "Tranfer is not allowed to user o"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4262:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4262:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4262:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4344:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4355:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4340:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4340:18:1"
																	},
																	{
																		"hexValue": "6e6c79204f776e65722063616e20736574",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4360:19:1",
																		"type": "",
																		"value": "nly Owner can set"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4333:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4333:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4333:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4389:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4401:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4412:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4397:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4397:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4389:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_975596aa8809061341563460bef71b4b93fbd02a33f75eafae8d6e8a663c3ce7__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4160:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4174:4:1",
														"type": ""
													}
												],
												"src": "4009:413:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4475:174:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4485:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4496:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4499:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4492:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4492:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "4485:3:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4532:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4553:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4560:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4565:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "4556:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4556:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4546:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4546:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4546:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4597:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4600:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4590:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4590:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4590:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4625:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4628:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4618:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4618:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4618:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4516:1:1"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "4519:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4513:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4513:10:1"
															},
															"nodeType": "YulIf",
															"src": "4510:133:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4458:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4461:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "4467:3:1",
														"type": ""
													}
												],
												"src": "4427:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4811:188:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4821:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4833:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4844:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4829:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4829:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4821:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4863:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4878:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4894:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4899:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4890:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4890:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4903:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4886:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4886:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4874:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4874:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4856:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4856:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4856:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4927:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4938:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4923:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4923:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4943:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4916:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4916:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4916:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4970:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4981:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4966:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4966:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "4986:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4959:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4959:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4959:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4764:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4775:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4783:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4791:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4802:4:1",
														"type": ""
													}
												],
												"src": "4654:345:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_80bdb03162cdac4f69a5606b1b71af18d2a983a9d96bc24cd45e880fd4e35aa3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Contract is PAused By the Owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d20a01f302ff9eb27a985520fd7c4646a30685fa767b089ac0f2975ef894fd64__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Address is freezed \")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_cd606c362edffb7928e2c0a22255d099d9c34b5a7e01c09b5fd45c71671419c0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Only Owner con activate\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_975596aa8809061341563460bef71b4b93fbd02a33f75eafae8d6e8a663c3ce7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"Tranfer is not allowed to user o\")\n        mstore(add(headStart, 96), \"nly Owner can set\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061013d575f3560e01c80637c77db72116100b4578063b187bd2611610079578063b187bd261461029c578063b8f309c7146102ac578063d6b70ac0146102d7578063dd62ed3e146102df578063eb1d8152146102f2578063f7b188a514610314575f80fd5b80637c77db72146102395780638111f24e1461025b57806391e2c3151461026e57806395d89b4114610281578063a9059cbb14610289575f80fd5b806323b872dd1161010557806323b872dd146101af578063313ce567146101c257806339509351146101d75780636985a022146101ea5780636ebcf607146101f257806370a0823114610211575f80fd5b806306fdde0314610141578063095ea7b31461015f57806318160ddd146101825780631aa66049146101945780631d4ca8bf146101a7575b5f80fd5b61014961031c565b6040516101569190610ba0565b60405180910390f35b61017261016d366004610c01565b6103ac565b6040519015158152602001610156565b6003545b604051908152602001610156565b6101726101a2366004610c29565b61043e565b610172610494565b6101726101bd366004610c49565b610504565b60045460405160ff9091168152602001610156565b6101726101e5366004610c01565b6105b2565b610172610624565b610186610200366004610c29565b60056020525f908152604090205481565b61018661021f366004610c29565b6001600160a01b03165f9081526005602052604090205490565b610172610247366004610c29565b60076020525f908152604090205460ff1681565b610172610269366004610c29565b610692565b61017261027c366004610c29565b6106af565b6101496106fd565b610172610297366004610c01565b61070c565b600454610100900460ff16610172565b6102bf6102ba366004610c29565b6107a4565b6040516001600160a01b039091168152602001610156565b6101726107f1565b6101866102ed366004610c82565b610858565b610172610300366004610c29565b60066020525f908152604090205460ff1681565b610172610882565b60606001805461032b90610cb3565b80601f016020809104026020016040519081016040528092919081815260200182805461035790610cb3565b80156103a25780601f10610379576101008083540402835291602001916103a2565b820191905f5260205f20905b81548152906001019060200180831161038557829003601f168201915b5050505050905090565b6004545f90610100900460ff16156103df5760405162461bcd60e51b81526004016103d690610ceb565b60405180910390fd5b6103e833610692565b156104055760405162461bcd60e51b81526004016103d690610d22565b600454339062010000900460ff16610425575f546001600160a01b031693505b61043281858560016108e8565b60019150505b92915050565b5f80546001600160a01b031633146104685760405162461bcd60e51b81526004016103d690610d4f565b506001600160a01b0381165f908152600760205260409020805460ff191660019081179091555b919050565b5f80546001600160a01b031633146104be5760405162461bcd60e51b81526004016103d690610d4f565b6004805462ff0000191662010000179055604051600190429033907f01184061675848e328fb316abfd3f046f1cae4fb526dc24d09bdaa92e3921217905f90a450600190565b6004545f90610100900460ff161561052e5760405162461bcd60e51b81526004016103d690610ceb565b61053733610692565b156105545760405162461bcd60e51b81526004016103d690610d22565b5f546001600160a01b0316331480610574575060045462010000900460ff165b6105905760405162461bcd60e51b81526004016103d690610d86565b3361059c8582856109bb565b6105a7858585610a18565b506001949350505050565b6004545f90610100900460ff16156105dc5760405162461bcd60e51b81526004016103d690610ceb565b6105e533610692565b156106025760405162461bcd60e51b81526004016103d690610d22565b336104328185856106138383610858565b61061d9190610dd7565b60016108e8565b5f80546001600160a01b0316331461064e5760405162461bcd60e51b81526004016103d690610d4f565b6004805461ff001916610100179055604051600190429033907fcd52c664c2010b8cb55e5d2ea0ae5add4a5b0460cfafc8af4af80f5bee1032ca905f90a450600190565b6001600160a01b03165f9081526007602052604090205460ff1690565b5f80546001600160a01b031633146106d95760405162461bcd60e51b81526004016103d690610d4f565b506001600160a01b03165f908152600760205260409020805460ff19169055600190565b60606002805461032b90610cb3565b6004545f90610100900460ff16156107365760405162461bcd60e51b81526004016103d690610ceb565b61073f33610692565b1561075c5760405162461bcd60e51b81526004016103d690610d22565b5f546001600160a01b031633148061077c575060045462010000900460ff165b6107985760405162461bcd60e51b81526004016103d690610d86565b33610432818585610a7a565b5f80546001600160a01b031633146107ce5760405162461bcd60e51b81526004016103d690610d4f565b5f80546001600160a01b0319166001600160a01b03939093169290921790915590565b5f80546001600160a01b0316331461081b5760405162461bcd60e51b81526004016103d690610d4f565b6004805462ff0000191690556040515f90429033907f01184061675848e328fb316abfd3f046f1cae4fb526dc24d09bdaa92e3921217908490a490565b6001600160a01b039182165f90815260086020908152604080832093909416825291909152205490565b5f80546001600160a01b031633146108ac5760405162461bcd60e51b81526004016103d690610d4f565b6004805461ff00191690556040515f90429033907fcd52c664c2010b8cb55e5d2ea0ae5add4a5b0460cfafc8af4af80f5bee1032ca908490a490565b6001600160a01b0384166109115760405163e602df0560e01b81525f60048201526024016103d6565b6001600160a01b03831661093a57604051634a1406b160e11b81525f60048201526024016103d6565b6001600160a01b038085165f90815260086020908152604080832093871683529290522082905580156109b557826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516109ac91815260200190565b60405180910390a35b50505050565b5f6109c68484610858565b90505f1981146109b55781811015610a0a57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016103d6565b6109b584848484035f6108e8565b6001600160a01b038316610a4157604051634b637e8f60e11b81525f60048201526024016103d6565b6001600160a01b038216610a6a5760405163ec442f0560e01b81525f60048201526024016103d6565b610a75838383610a7a565b505050565b6001600160a01b038316610aa4578060035f828254610a999190610dd7565b90915550610b149050565b6001600160a01b0383165f9081526005602052604090205481811015610af65760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016103d6565b6001600160a01b0384165f9081526005602052604090209082900390555b6001600160a01b038216610b3057600380548290039055610b4e565b6001600160a01b0382165f9081526005602052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610b9391815260200190565b60405180910390a3505050565b5f6020808352835180828501525f5b81811015610bcb57858101830151858201604001528201610baf565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461048f575f80fd5b5f8060408385031215610c12575f80fd5b610c1b83610beb565b946020939093013593505050565b5f60208284031215610c39575f80fd5b610c4282610beb565b9392505050565b5f805f60608486031215610c5b575f80fd5b610c6484610beb565b9250610c7260208501610beb565b9150604084013590509250925092565b5f8060408385031215610c93575f80fd5b610c9c83610beb565b9150610caa60208401610beb565b90509250929050565b600181811c90821680610cc757607f821691505b602082108103610ce557634e487b7160e01b5f52602260045260245ffd5b50919050565b6020808252601f908201527f436f6e74726163742069732050417573656420427920746865204f776e657200604082015260600190565b602080825260139082015272020b2323932b9b99034b990333932b2bd32b21606d1b604082015260600190565b60208082526017908201527f4f6e6c79204f776e657220636f6e206163746976617465000000000000000000604082015260600190565b60208082526031908201527f5472616e666572206973206e6f7420616c6c6f77656420746f2075736572206f6040820152701b9b1e4813dddb995c8818d85b881cd95d607a1b606082015260800190565b8082018082111561043857634e487b7160e01b5f52601160045260245ffdfea264697066735822122047bb95ecfbd8e9f7b91f115dbc8e33c4d6c4b77b4202a500d4827bfd3a286eee64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x13D JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7C77DB72 GT PUSH2 0xB4 JUMPI DUP1 PUSH4 0xB187BD26 GT PUSH2 0x79 JUMPI DUP1 PUSH4 0xB187BD26 EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0xB8F309C7 EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0xD6B70AC0 EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0xEB1D8152 EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0xF7B188A5 EQ PUSH2 0x314 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7C77DB72 EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x8111F24E EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0x91E2C315 EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x289 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x105 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x6985A022 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x6EBCF607 EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x211 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x1AA66049 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x1D4CA8BF EQ PUSH2 0x1A7 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x149 PUSH2 0x31C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x156 SWAP2 SWAP1 PUSH2 0xBA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x172 PUSH2 0x16D CALLDATASIZE PUSH1 0x4 PUSH2 0xC01 JUMP JUMPDEST PUSH2 0x3AC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x156 JUMP JUMPDEST PUSH1 0x3 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x156 JUMP JUMPDEST PUSH2 0x172 PUSH2 0x1A2 CALLDATASIZE PUSH1 0x4 PUSH2 0xC29 JUMP JUMPDEST PUSH2 0x43E JUMP JUMPDEST PUSH2 0x172 PUSH2 0x494 JUMP JUMPDEST PUSH2 0x172 PUSH2 0x1BD CALLDATASIZE PUSH1 0x4 PUSH2 0xC49 JUMP JUMPDEST PUSH2 0x504 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x156 JUMP JUMPDEST PUSH2 0x172 PUSH2 0x1E5 CALLDATASIZE PUSH1 0x4 PUSH2 0xC01 JUMP JUMPDEST PUSH2 0x5B2 JUMP JUMPDEST PUSH2 0x172 PUSH2 0x624 JUMP JUMPDEST PUSH2 0x186 PUSH2 0x200 CALLDATASIZE PUSH1 0x4 PUSH2 0xC29 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x186 PUSH2 0x21F CALLDATASIZE PUSH1 0x4 PUSH2 0xC29 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x172 PUSH2 0x247 CALLDATASIZE PUSH1 0x4 PUSH2 0xC29 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x172 PUSH2 0x269 CALLDATASIZE PUSH1 0x4 PUSH2 0xC29 JUMP JUMPDEST PUSH2 0x692 JUMP JUMPDEST PUSH2 0x172 PUSH2 0x27C CALLDATASIZE PUSH1 0x4 PUSH2 0xC29 JUMP JUMPDEST PUSH2 0x6AF JUMP JUMPDEST PUSH2 0x149 PUSH2 0x6FD JUMP JUMPDEST PUSH2 0x172 PUSH2 0x297 CALLDATASIZE PUSH1 0x4 PUSH2 0xC01 JUMP JUMPDEST PUSH2 0x70C JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x172 JUMP JUMPDEST PUSH2 0x2BF PUSH2 0x2BA CALLDATASIZE PUSH1 0x4 PUSH2 0xC29 JUMP JUMPDEST PUSH2 0x7A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x156 JUMP JUMPDEST PUSH2 0x172 PUSH2 0x7F1 JUMP JUMPDEST PUSH2 0x186 PUSH2 0x2ED CALLDATASIZE PUSH1 0x4 PUSH2 0xC82 JUMP JUMPDEST PUSH2 0x858 JUMP JUMPDEST PUSH2 0x172 PUSH2 0x300 CALLDATASIZE PUSH1 0x4 PUSH2 0xC29 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x172 PUSH2 0x882 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x32B SWAP1 PUSH2 0xCB3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x357 SWAP1 PUSH2 0xCB3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3A2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x379 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3A2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x385 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH0 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x3DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D6 SWAP1 PUSH2 0xCEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3E8 CALLER PUSH2 0x692 JUMP JUMPDEST ISZERO PUSH2 0x405 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D6 SWAP1 PUSH2 0xD22 JUMP JUMPDEST PUSH1 0x4 SLOAD CALLER SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x425 JUMPI PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 POP JUMPDEST PUSH2 0x432 DUP2 DUP6 DUP6 PUSH1 0x1 PUSH2 0x8E8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x468 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D6 SWAP1 PUSH2 0xD4F JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D6 SWAP1 PUSH2 0xD4F JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH3 0xFF0000 NOT AND PUSH3 0x10000 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 SWAP1 TIMESTAMP SWAP1 CALLER SWAP1 PUSH32 0x1184061675848E328FB316ABFD3F046F1CAE4FB526DC24D09BDAA92E3921217 SWAP1 PUSH0 SWAP1 LOG4 POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH0 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x52E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D6 SWAP1 PUSH2 0xCEB JUMP JUMPDEST PUSH2 0x537 CALLER PUSH2 0x692 JUMP JUMPDEST ISZERO PUSH2 0x554 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D6 SWAP1 PUSH2 0xD22 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x574 JUMPI POP PUSH1 0x4 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH2 0x590 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D6 SWAP1 PUSH2 0xD86 JUMP JUMPDEST CALLER PUSH2 0x59C DUP6 DUP3 DUP6 PUSH2 0x9BB JUMP JUMPDEST PUSH2 0x5A7 DUP6 DUP6 DUP6 PUSH2 0xA18 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH0 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x5DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D6 SWAP1 PUSH2 0xCEB JUMP JUMPDEST PUSH2 0x5E5 CALLER PUSH2 0x692 JUMP JUMPDEST ISZERO PUSH2 0x602 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D6 SWAP1 PUSH2 0xD22 JUMP JUMPDEST CALLER PUSH2 0x432 DUP2 DUP6 DUP6 PUSH2 0x613 DUP4 DUP4 PUSH2 0x858 JUMP JUMPDEST PUSH2 0x61D SWAP2 SWAP1 PUSH2 0xDD7 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x8E8 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x64E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D6 SWAP1 PUSH2 0xD4F JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 SWAP1 TIMESTAMP SWAP1 CALLER SWAP1 PUSH32 0xCD52C664C2010B8CB55E5D2EA0AE5ADD4A5B0460CFAFC8AF4AF80F5BEE1032CA SWAP1 PUSH0 SWAP1 LOG4 POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D6 SWAP1 PUSH2 0xD4F JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x32B SWAP1 PUSH2 0xCB3 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH0 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x736 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D6 SWAP1 PUSH2 0xCEB JUMP JUMPDEST PUSH2 0x73F CALLER PUSH2 0x692 JUMP JUMPDEST ISZERO PUSH2 0x75C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D6 SWAP1 PUSH2 0xD22 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x77C JUMPI POP PUSH1 0x4 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH2 0x798 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D6 SWAP1 PUSH2 0xD86 JUMP JUMPDEST CALLER PUSH2 0x432 DUP2 DUP6 DUP6 PUSH2 0xA7A JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D6 SWAP1 PUSH2 0xD4F JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SWAP1 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x81B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D6 SWAP1 PUSH2 0xD4F JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH3 0xFF0000 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH0 SWAP1 TIMESTAMP SWAP1 CALLER SWAP1 PUSH32 0x1184061675848E328FB316ABFD3F046F1CAE4FB526DC24D09BDAA92E3921217 SWAP1 DUP5 SWAP1 LOG4 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D6 SWAP1 PUSH2 0xD4F JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH0 SWAP1 TIMESTAMP SWAP1 CALLER SWAP1 PUSH32 0xCD52C664C2010B8CB55E5D2EA0AE5ADD4A5B0460CFAFC8AF4AF80F5BEE1032CA SWAP1 DUP5 SWAP1 LOG4 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x911 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3D6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x93A JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3D6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x9B5 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x9AC SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x9C6 DUP5 DUP5 PUSH2 0x858 JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 EQ PUSH2 0x9B5 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xA0A JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x3D6 JUMP JUMPDEST PUSH2 0x9B5 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x8E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA41 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3D6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA6A JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3D6 JUMP JUMPDEST PUSH2 0xA75 DUP4 DUP4 DUP4 PUSH2 0xA7A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xAA4 JUMPI DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA99 SWAP2 SWAP1 PUSH2 0xDD7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xB14 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xAF6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x3D6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB30 JUMPI PUSH1 0x3 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0xB4E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xB93 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xBCB JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xBAF JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x48F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC1B DUP4 PUSH2 0xBEB JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC39 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC42 DUP3 PUSH2 0xBEB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC5B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC64 DUP5 PUSH2 0xBEB JUMP JUMPDEST SWAP3 POP PUSH2 0xC72 PUSH1 0x20 DUP6 ADD PUSH2 0xBEB JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC93 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC9C DUP4 PUSH2 0xBEB JUMP JUMPDEST SWAP2 POP PUSH2 0xCAA PUSH1 0x20 DUP5 ADD PUSH2 0xBEB JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xCC7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xCE5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x436F6E74726163742069732050417573656420427920746865204F776E657200 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x20B2323932B9B99034B990333932B2BD32B21 PUSH1 0x6D SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x17 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C79204F776E657220636F6E206163746976617465000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x5472616E666572206973206E6F7420616C6C6F77656420746F2075736572206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1B9B1E4813DDDB995C8818D85B881CD95D PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x438 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE 0xBB SWAP6 0xEC 0xFB 0xD8 0xE9 0xF7 0xB9 0x1F GT 0x5D 0xBC DUP15 CALLER 0xC4 0xD6 0xC4 0xB7 PUSH28 0x4202A500D4827BFD3A286EEE64736F6C634300081400330000000000 ",
							"sourceMap": "4536:7710:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9870:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6508:298;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:1;;1162:22;1144:41;;1132:2;1117:18;6508:298:0;1004:187:1;5639:84:0;5709:7;;5639:84;;;1342:25:1;;;1330:2;1315:18;5639:84:0;1196:177:1;11854:123:0;;;;;;:::i;:::-;;:::i;11413:173::-;;;:::i;7095:431::-;;;;;;:::i;:::-;;:::i;10050:82::-;10116:9;;10050:82;;10116:9;;;;2044:36:1;;2032:2;2017:18;10050:82:0;1902:184:1;6812:277:0;;;;;;:::i;:::-;;:::i;10810:163::-;;;:::i;4785:44::-;;;;;;:::i;:::-;;;;;;;;;;;;;;5729:108;;;;;;:::i;:::-;-1:-1:-1;;;;;5812:18:0;5786:7;5812:18;;;:9;:18;;;;;;;5729:108;4881:39;;;;;;:::i;:::-;;;;;;;;;;;;;;;;12149:95;;;;;;:::i;:::-;;:::i;11983:160::-;;;;;;:::i;:::-;;:::i;9958:86::-;;;:::i;5843:353::-;;;;;;:::i;:::-;;:::i;10638:79::-;10703:7;;;;;;;10638:79;;10503:129;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2255:32:1;;;2237:51;;2225:2;2210:18;10503:129:0;2091:203:1;11691:157:0;;;:::i;9226:162::-;;;;;;:::i;:::-;;:::i;4835:40::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;11078:138;;;:::i;9870:82::-;9908:13;9940:5;9933:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9870:82;:::o;6508:298::-;10285:7;;6620:4;;10285:7;;;;;10284:8;10276:52;;;;-1:-1:-1;;;10276:52:0;;;;;;;:::i;:::-;;;;;;;;;10403:21:::1;10413:10;10403:9;:21::i;:::-;:30;10382:97;;;;-1:-1:-1::0;;;10382:97:0::1;;;;;;;:::i;:::-;6677:12:::2;::::0;6652:10:::2;::::0;6677:12;;::::2;;;6672:60;;6715:6;::::0;-1:-1:-1;;;;;6715:6:0::2;::::0;-1:-1:-1;6672:60:0::2;6741:37;6750:5;6757:7;6766:5;6773:4;6741:8;:37::i;:::-;6795:4;6788:11;;;10489:1;6508:298:::0;;;;:::o;11854:123::-;11914:4;10189:6;;-1:-1:-1;;;;;10189:6:0;10175:10;:20;10167:56;;;;-1:-1:-1;;;10167:56:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;;11930:12:0;::::1;;::::0;;;:7:::1;:12;::::0;;;;:19;;-1:-1:-1;;11930:19:0::1;11945:4;11930:19:::0;;::::1;::::0;;;10233:1:::1;11854:123:::0;;;:::o;11413:173::-;11460:4;10189:6;;-1:-1:-1;;;;;10189:6:0;10175:10;:20;10167:56;;;;-1:-1:-1;;;10167:56:0;;;;;;;:::i;:::-;11476:12:::1;:19:::0;;-1:-1:-1;;11476:19:0::1;::::0;::::1;::::0;;11510:48:::1;::::0;11491:4:::1;::::0;11536:15:::1;::::0;11524:10:::1;::::0;11510:48:::1;::::0;11476:19;;11510:48:::1;-1:-1:-1::0;11575:4:0::1;11413:173:::0;:::o;7095:431::-;10285:7;;7229:4;;10285:7;;;;;10284:8;10276:52;;;;-1:-1:-1;;;10276:52:0;;;;;;;:::i;:::-;10403:21:::1;10413:10;10403:9;:21::i;:::-;:30;10382:97;;;;-1:-1:-1::0;;;10382:97:0::1;;;;;;;:::i;:::-;7280:6:::2;::::0;-1:-1:-1;;;;;7280:6:0::2;7266:10;:20;::::0;:36:::2;;-1:-1:-1::0;7290:12:0::2;::::0;;;::::2;;;7266:36;7245:132;;;;-1:-1:-1::0;;;7245:132:0::2;;;;;;;:::i;:::-;7405:10;7425:37;7441:4:::0;7405:10;7456:5;7425:15:::2;:37::i;:::-;7472:26;7482:4;7488:2;7492:5;7472:9;:26::i;:::-;-1:-1:-1::0;7515:4:0::2;::::0;7095:431;-1:-1:-1;;;;7095:431:0:o;6812:277::-;10285:7;;6939:4;;10285:7;;;;;10284:8;10276:52;;;;-1:-1:-1;;;10276:52:0;;;;;;;:::i;:::-;10403:21:::1;10413:10;10403:9;:21::i;:::-;:30;10382:97;;;;-1:-1:-1::0;;;10382:97:0::1;;;;;;;:::i;:::-;6971:10:::2;6991:70;6971:10:::0;7007:7;7044:10;7016:25:::2;6971:10:::0;7007:7;7016:9:::2;:25::i;:::-;:38;;;;:::i;:::-;7056:4;6991:8;:70::i;10810:163::-:0;10859:4;10189:6;;-1:-1:-1;;;;;10189:6:0;10175:10;:20;10167:56;;;;-1:-1:-1;;;10167:56:0;;;;;;;:::i;:::-;10875:7:::1;:14:::0;;-1:-1:-1;;10875:14:0::1;;;::::0;;10904:41:::1;::::0;10885:4:::1;::::0;10923:15:::1;::::0;10911:10:::1;::::0;10904:41:::1;::::0;10875:14;;10904:41:::1;-1:-1:-1::0;10962:4:0::1;10810:163:::0;:::o;12149:95::-;-1:-1:-1;;;;;12225:12:0;12202:4;12225:12;;;:7;:12;;;;;;;;;12149:95::o;11983:160::-;12045:4;10189:6;;-1:-1:-1;;;;;10189:6:0;10175:10;:20;10167:56;;;;-1:-1:-1;;;10167:56:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;;12085:12:0::1;12100:5;12085:12:::0;;;:7:::1;:12;::::0;;;;:20;;-1:-1:-1;;12085:20:0::1;::::0;;-1:-1:-1;;11983:160:0:o;9958:86::-;9998:13;10030:7;10023:14;;;;;:::i;5843:353::-;10285:7;;5951:4;;10285:7;;;;;10284:8;10276:52;;;;-1:-1:-1;;;10276:52:0;;;;;;;:::i;:::-;10403:21:::1;10413:10;10403:9;:21::i;:::-;:30;10382:97;;;;-1:-1:-1::0;;;10382:97:0::1;;;;;;;:::i;:::-;6002:6:::2;::::0;-1:-1:-1;;;;;6002:6:0::2;5988:10;:20;::::0;:36:::2;;-1:-1:-1::0;6012:12:0::2;::::0;;;::::2;;;5988:36;5967:132;;;;-1:-1:-1::0;;;5967:132:0::2;;;;;;;:::i;:::-;6124:10;6144:24;6124:10:::0;6158:2;6162:5;6144:7:::2;:24::i;10503:129::-:0;10589:7;10189:6;;-1:-1:-1;;;;;10189:6:0;10175:10;:20;10167:56;;;;-1:-1:-1;;;10167:56:0;;;;;;;:::i;:::-;10608:6:::1;:17:::0;;-1:-1:-1;;;;;;10608:17:0::1;-1:-1:-1::0;;;;;10608:17:0;;;::::1;::::0;;;::::1;::::0;;;;10503:129::o;11691:157::-;11741:4;10189:6;;-1:-1:-1;;;;;10189:6:0;10175:10;:20;10167:56;;;;-1:-1:-1;;;10167:56:0;;;;;;;:::i;:::-;11757:12:::1;:20:::0;;-1:-1:-1;;11757:20:0::1;::::0;;11792:49:::1;::::0;11772:5:::1;::::0;11818:15:::1;::::0;11806:10:::1;::::0;11792:49:::1;::::0;11772:5;;11792:49:::1;11691:157:::0;:::o;9226:162::-;-1:-1:-1;;;;;9354:18:0;;;9328:7;9354:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;9226:162::o;11078:138::-;11121:4;10189:6;;-1:-1:-1;;;;;10189:6:0;10175:10;:20;10167:56;;;;-1:-1:-1;;;10167:56:0;;;;;;;:::i;:::-;11137:7:::1;:15:::0;;-1:-1:-1;;11137:15:0::1;::::0;;11167:42:::1;::::0;11147:5:::1;::::0;11186:15:::1;::::0;11174:10:::1;::::0;11167:42:::1;::::0;11147:5;;11167:42:::1;11078:138:::0;:::o;9394:470::-;-1:-1:-1;;;;;9544:19:0;;9540:89;;9586:32;;-1:-1:-1;;;9586:32:0;;9615:1;9586:32;;;2237:51:1;2210:18;;9586:32:0;2091:203:1;9540:89:0;-1:-1:-1;;;;;9642:21:0;;9638:90;;9686:31;;-1:-1:-1;;;9686:31:0;;9714:1;9686:31;;;2237:51:1;2210:18;;9686:31:0;2091:203:1;9638:90:0;-1:-1:-1;;;;;9737:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;9782:76;;;;9832:7;-1:-1:-1;;;;;9816:31:0;9825:5;-1:-1:-1;;;;;9816:31:0;;9841:5;9816:31;;;;1342:25:1;;1330:2;1315:18;;1196:177;9816:31:0;;;;;;;;9782:76;9394:470;;;;:::o;8635:585::-;8764:24;8791:25;8801:5;8808:7;8791:9;:25::i;:::-;8764:52;;-1:-1:-1;;8830:16:0;:37;8826:388;;8906:5;8887:16;:24;8883:208;;;8938:138;;-1:-1:-1;;;8938:138:0;;-1:-1:-1;;;;;4874:32:1;;8938:138:0;;;4856:51:1;4923:18;;;4916:34;;;4966:18;;;4959:34;;;4829:18;;8938:138:0;4654:345:1;8883:208:0;9132:57;9141:5;9148:7;9176:5;9157:16;:24;9183:5;9132:8;:57::i;6202:300::-;-1:-1:-1;;;;;6285:18:0;;6281:86;;6326:30;;-1:-1:-1;;;6326:30:0;;6353:1;6326:30;;;2237:51:1;2210:18;;6326:30:0;2091:203:1;6281:86:0;-1:-1:-1;;;;;6380:16:0;;6376:86;;6419:32;;-1:-1:-1;;;6419:32:0;;6448:1;6419:32;;;2237:51:1;2210:18;;6419:32:0;2091:203:1;6376:86:0;6471:24;6479:4;6485:2;6489:5;6471:7;:24::i;:::-;6202:300;;;:::o;7532:1097::-;-1:-1:-1;;;;;7621:18:0;;7617:535;;7768:5;7757:7;;:16;;;;;;;:::i;:::-;;;;-1:-1:-1;7617:535:0;;-1:-1:-1;7617:535:0;;-1:-1:-1;;;;;7826:15:0;;7804:19;7826:15;;;:9;:15;;;;;;7859:19;;;7855:115;;;7905:50;;-1:-1:-1;;;7905:50:0;;-1:-1:-1;;;;;4874:32:1;;7905:50:0;;;4856:51:1;4923:18;;;4916:34;;;4966:18;;;4959:34;;;4829:18;;7905:50:0;4654:345:1;7855:115:0;-1:-1:-1;;;;;8090:15:0;;;;;;:9;:15;;;;;8108:19;;;;8090:37;;7617:535;-1:-1:-1;;;;;8166:16:0;;8162:420;;8329:7;:16;;;;;;;8162:420;;;-1:-1:-1;;;;;8535:13:0;;;;;;:9;:13;;;;;:22;;;;;;8162:420;8612:2;-1:-1:-1;;;;;8597:25:0;8606:4;-1:-1:-1;;;;;8597:25:0;;8616:5;8597:25;;;;1342::1;;1330:2;1315:18;;1196:177;8597:25:0;;;;;;;;7532:1097;;;:::o;14:548:1:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:1;;674:42;;664:70;;730:1;727;720:12;745:254;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:1:o;1378:186::-;1437:6;1490:2;1478:9;1469:7;1465:23;1461:32;1458:52;;;1506:1;1503;1496:12;1458:52;1529:29;1548:9;1529:29;:::i;:::-;1519:39;1378:186;-1:-1:-1;;;1378:186:1:o;1569:328::-;1646:6;1654;1662;1715:2;1703:9;1694:7;1690:23;1686:32;1683:52;;;1731:1;1728;1721:12;1683:52;1754:29;1773:9;1754:29;:::i;:::-;1744:39;;1802:38;1836:2;1825:9;1821:18;1802:38;:::i;:::-;1792:48;;1887:2;1876:9;1872:18;1859:32;1849:42;;1569:328;;;;;:::o;2299:260::-;2367:6;2375;2428:2;2416:9;2407:7;2403:23;2399:32;2396:52;;;2444:1;2441;2434:12;2396:52;2467:29;2486:9;2467:29;:::i;:::-;2457:39;;2515:38;2549:2;2538:9;2534:18;2515:38;:::i;:::-;2505:48;;2299:260;;;;;:::o;2564:380::-;2643:1;2639:12;;;;2686;;;2707:61;;2761:4;2753:6;2749:17;2739:27;;2707:61;2814:2;2806:6;2803:14;2783:18;2780:38;2777:161;;2860:10;2855:3;2851:20;2848:1;2841:31;2895:4;2892:1;2885:15;2923:4;2920:1;2913:15;2777:161;;2564:380;;;:::o;2949:355::-;3151:2;3133:21;;;3190:2;3170:18;;;3163:30;3229:33;3224:2;3209:18;;3202:61;3295:2;3280:18;;2949:355::o;3309:343::-;3511:2;3493:21;;;3550:2;3530:18;;;3523:30;-1:-1:-1;;;3584:2:1;3569:18;;3562:49;3643:2;3628:18;;3309:343::o;3657:347::-;3859:2;3841:21;;;3898:2;3878:18;;;3871:30;3937:25;3932:2;3917:18;;3910:53;3995:2;3980:18;;3657:347::o;4009:413::-;4211:2;4193:21;;;4250:2;4230:18;;;4223:30;4289:34;4284:2;4269:18;;4262:62;-1:-1:-1;;;4355:2:1;4340:18;;4333:47;4412:3;4397:19;;4009:413::o;4427:222::-;4492:9;;;4513:10;;;4510:133;;;4565:10;4560:3;4556:20;4553:1;4546:31;4600:4;4597:1;4590:15;4628:4;4625:1;4618:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "725600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"FreezeAddress(address)": "infinite",
								"Pause()": "28577",
								"TranferOwner(address)": "26838",
								"UnFreezeAddress(address)": "26881",
								"_balances(address)": "2627",
								"_freeze(address)": "2551",
								"_holders(address)": "2638",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "33360",
								"balanceOf(address)": "2667",
								"decimals()": "2333",
								"freeTranfer()": "28600",
								"increaseAllowance(address,uint256)": "infinite",
								"isFreezed(address)": "2603",
								"isPaused()": "2336",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2348",
								"transfer(address,uint256)": "59865",
								"transferFrom(address,address,uint256)": "infinite",
								"unFreeTransfer()": "28543",
								"unPause()": "28609"
							},
							"internal": {
								"_approve(address,address,uint256,bool)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite",
								"_update(address,address,uint256)": "infinite",
								"isFreeTranfer()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 4536,
									"end": 12246,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 4536,
									"end": 12246,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 4536,
									"end": 12246,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5265,
									"end": 5633,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 5265,
									"end": 5633,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5265,
									"end": 5633,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 5265,
									"end": 5633,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 5265,
									"end": 5633,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 5265,
									"end": 5633,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5265,
									"end": 5633,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5265,
									"end": 5633,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 5265,
									"end": 5633,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 5265,
									"end": 5633,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5265,
									"end": 5633,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5265,
									"end": 5633,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5265,
									"end": 5633,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 5265,
									"end": 5633,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 5265,
									"end": 5633,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 5265,
									"end": 5633,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 5265,
									"end": 5633,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5265,
									"end": 5633,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 5265,
									"end": 5633,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 5265,
									"end": 5633,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 5265,
									"end": 5633,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5265,
									"end": 5633,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5265,
									"end": 5633,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5265,
									"end": 5633,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5265,
									"end": 5633,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5265,
									"end": 5633,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5265,
									"end": 5633,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 5265,
									"end": 5633,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5265,
									"end": 5633,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 5265,
									"end": 5633,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5265,
									"end": 5633,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 5265,
									"end": 5633,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5403,
									"end": 5409,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5403,
									"end": 5422,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5403,
									"end": 5422,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 5403,
									"end": 5422,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 5412,
									"end": 5422,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 5403,
									"end": 5422,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 5403,
									"end": 5422,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5403,
									"end": 5422,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 5439,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 5432,
									"end": 5449,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 5449,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 5449,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 5403,
									"end": 5422,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 5459,
									"end": 5472,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 5467,
									"end": 5472,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 5403,
									"end": 5422,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5459,
									"end": 5472,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 5459,
									"end": 5472,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5459,
									"end": 5472,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 5459,
									"end": 5472,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5482,
									"end": 5489,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 5482,
									"end": 5499,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 5492,
									"end": 5499,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 5482,
									"end": 5489,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5482,
									"end": 5499,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 5482,
									"end": 5499,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5482,
									"end": 5499,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 5482,
									"end": 5499,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5509,
									"end": 5518,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 5509,
									"end": 5530,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5509,
									"end": 5530,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FFFFFF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 5565,
									"end": 5585,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 5509,
									"end": 5530,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 5509,
									"end": 5530,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5509,
									"end": 5530,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 5509,
									"end": 5530,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 5565,
									"end": 5585,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5565,
									"end": 5585,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5565,
									"end": 5585,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5565,
									"end": 5585,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 5565,
									"end": 5585,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5565,
									"end": 5585,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5619,
									"end": 5626,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 5619,
									"end": 5626,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 5605,
									"end": 5615,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 5509,
									"end": 5518,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5595,
									"end": 5616,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5595,
									"end": 5616,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5595,
									"end": 5616,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5595,
									"end": 5604,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 5595,
									"end": 5616,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 5595,
									"end": 5616,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5595,
									"end": 5616,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5595,
									"end": 5616,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5595,
									"end": 5616,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 5595,
									"end": 5626,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4536,
									"end": 12246,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 4536,
									"end": 12246,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 146,
									"end": 986,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 146,
									"end": 986,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 369,
									"end": 387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 1,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 588,
									"end": 606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 730,
									"end": 733,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 725,
									"end": 727,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 704,
									"end": 728,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 701,
									"end": 734,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 698,
									"end": 751,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 698,
									"end": 751,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 744,
									"end": 745,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 737,
									"end": 749,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 698,
									"end": 751,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 770,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 760,
									"end": 770,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 793,
									"end": 795,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 790,
									"end": 791,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 787,
									"end": 796,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 779,
									"end": 912,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 881,
									"end": 895,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 877,
									"end": 900,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 877,
									"end": 900,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 871,
									"end": 901,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 850,
									"end": 864,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 846,
									"end": 869,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 846,
									"end": 869,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 839,
									"end": 902,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 804,
									"end": 814,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 804,
									"end": 814,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 954,
									"end": 955,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 947,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 932,
									"end": 947,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 932,
									"end": 947,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 928,
									"end": 952,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 928,
									"end": 952,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 928,
									"end": 952,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 921,
									"end": 956,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 936,
									"end": 942,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 146,
									"end": 986,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 986,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 991,
									"end": 1765,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 991,
									"end": 1765,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1106,
									"end": 1112,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1114,
									"end": 1120,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1122,
									"end": 1128,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1130,
									"end": 1136,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1183,
									"end": 1186,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1171,
									"end": 1180,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1162,
									"end": 1169,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1158,
									"end": 1181,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1154,
									"end": 1187,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 1151,
									"end": 1204,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1151,
									"end": 1204,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1151,
									"end": 1204,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1200,
									"end": 1201,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1197,
									"end": 1198,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1190,
									"end": 1202,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1151,
									"end": 1204,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1151,
									"end": 1204,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1227,
									"end": 1243,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1227,
									"end": 1243,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1292,
									"end": 1306,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1292,
									"end": 1306,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1292,
									"end": 1306,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1289,
									"end": 1323,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1289,
									"end": 1323,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 1289,
									"end": 1323,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1319,
									"end": 1320,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1316,
									"end": 1317,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1309,
									"end": 1321,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1289,
									"end": 1323,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 1289,
									"end": 1323,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1342,
									"end": 1403,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 1395,
									"end": 1402,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 1386,
									"end": 1392,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1375,
									"end": 1384,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 1371,
									"end": 1393,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1342,
									"end": 1403,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1342,
									"end": 1403,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1342,
									"end": 1403,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 1342,
									"end": 1403,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1332,
									"end": 1403,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 1332,
									"end": 1403,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1449,
									"end": 1451,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1438,
									"end": 1447,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1434,
									"end": 1452,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1428,
									"end": 1453,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1412,
									"end": 1453,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1412,
									"end": 1453,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1478,
									"end": 1480,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1468,
									"end": 1476,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1465,
									"end": 1481,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1462,
									"end": 1498,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1462,
									"end": 1498,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 1462,
									"end": 1498,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1494,
									"end": 1495,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1491,
									"end": 1492,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1484,
									"end": 1496,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1462,
									"end": 1498,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 1462,
									"end": 1498,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1462,
									"end": 1498,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1517,
									"end": 1580,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 1572,
									"end": 1579,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1561,
									"end": 1569,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1550,
									"end": 1559,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 1546,
									"end": 1570,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1517,
									"end": 1580,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1517,
									"end": 1580,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1517,
									"end": 1580,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 1517,
									"end": 1580,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1507,
									"end": 1580,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1507,
									"end": 1580,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1507,
									"end": 1580,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1620,
									"end": 1622,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1609,
									"end": 1618,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1605,
									"end": 1623,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1599,
									"end": 1624,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1589,
									"end": 1624,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1589,
									"end": 1624,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1669,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 1656,
									"end": 1665,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1652,
									"end": 1670,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1646,
									"end": 1671,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1711,
									"end": 1715,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 1704,
									"end": 1709,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1700,
									"end": 1716,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1693,
									"end": 1698,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1690,
									"end": 1717,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1680,
									"end": 1735,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 1680,
									"end": 1735,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1731,
									"end": 1732,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1728,
									"end": 1729,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1721,
									"end": 1733,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1680,
									"end": 1735,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 1680,
									"end": 1735,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 991,
									"end": 1765,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 991,
									"end": 1765,
									"name": "SWAP7",
									"source": 1
								},
								{
									"begin": 991,
									"end": 1765,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 991,
									"end": 1765,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 991,
									"end": 1765,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 991,
									"end": 1765,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 991,
									"end": 1765,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1770,
									"end": 2150,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1770,
									"end": 2150,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1849,
									"end": 1850,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1845,
									"end": 1857,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1845,
									"end": 1857,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1845,
									"end": 1857,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1845,
									"end": 1857,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1892,
									"end": 1904,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1892,
									"end": 1904,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1892,
									"end": 1904,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1913,
									"end": 1974,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1913,
									"end": 1974,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1967,
									"end": 1971,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 1959,
									"end": 1965,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1955,
									"end": 1972,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1945,
									"end": 1972,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1945,
									"end": 1972,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1913,
									"end": 1974,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1913,
									"end": 1974,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2020,
									"end": 2022,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2012,
									"end": 2018,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1989,
									"end": 2007,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1986,
									"end": 2024,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1983,
									"end": 2144,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 1983,
									"end": 2144,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2066,
									"end": 2076,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 2061,
									"end": 2064,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 2057,
									"end": 2077,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2054,
									"end": 2055,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2047,
									"end": 2078,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2101,
									"end": 2105,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 2098,
									"end": 2099,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2091,
									"end": 2106,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2129,
									"end": 2133,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 2126,
									"end": 2127,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2119,
									"end": 2134,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1983,
									"end": 2144,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 1983,
									"end": 2144,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1983,
									"end": 2144,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1770,
									"end": 2150,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1770,
									"end": 2150,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1770,
									"end": 2150,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1770,
									"end": 2150,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2281,
									"end": 2826,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 2281,
									"end": 2826,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2383,
									"end": 2385,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2378,
									"end": 2381,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2375,
									"end": 2386,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2372,
									"end": 2820,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2372,
									"end": 2820,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2372,
									"end": 2820,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2419,
									"end": 2420,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2444,
									"end": 2449,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2440,
									"end": 2442,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2433,
									"end": 2450,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2489,
									"end": 2493,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2485,
									"end": 2487,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2475,
									"end": 2494,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 2559,
									"end": 2561,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2547,
									"end": 2557,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2543,
									"end": 2562,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2540,
									"end": 2541,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 2536,
									"end": 2563,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2530,
									"end": 2534,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2526,
									"end": 2564,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2595,
									"end": 2599,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2583,
									"end": 2593,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2580,
									"end": 2600,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2577,
									"end": 2624,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2577,
									"end": 2624,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 2577,
									"end": 2624,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2618,
									"end": 2622,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2577,
									"end": 2624,
									"name": "tag",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 2577,
									"end": 2624,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2673,
									"end": 2675,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2668,
									"end": 2671,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2664,
									"end": 2676,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2661,
									"end": 2662,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 2657,
									"end": 2677,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2651,
									"end": 2655,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2647,
									"end": 2678,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2637,
									"end": 2678,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2637,
									"end": 2678,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2728,
									"end": 2810,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 2728,
									"end": 2810,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2746,
									"end": 2748,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2739,
									"end": 2744,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2736,
									"end": 2749,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2728,
									"end": 2810,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2728,
									"end": 2810,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 2728,
									"end": 2810,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2791,
									"end": 2808,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2791,
									"end": 2808,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2791,
									"end": 2808,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2772,
									"end": 2773,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2761,
									"end": 2774,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2728,
									"end": 2810,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 2728,
									"end": 2810,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2728,
									"end": 2810,
									"name": "tag",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 2728,
									"end": 2810,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2732,
									"end": 2735,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2732,
									"end": 2735,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2732,
									"end": 2735,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2372,
									"end": 2820,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2372,
									"end": 2820,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2281,
									"end": 2826,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2281,
									"end": 2826,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2281,
									"end": 2826,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2281,
									"end": 2826,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3002,
									"end": 4354,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 3002,
									"end": 4354,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3122,
									"end": 3132,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3122,
									"end": 3132,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3144,
									"end": 3174,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3144,
									"end": 3174,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 3141,
									"end": 3197,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3141,
									"end": 3197,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 3141,
									"end": 3197,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3177,
									"end": 3195,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 3177,
									"end": 3195,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 3177,
									"end": 3195,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3177,
									"end": 3195,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 3177,
									"end": 3195,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3206,
									"end": 3303,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 3296,
									"end": 3302,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3256,
									"end": 3294,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 3288,
									"end": 3292,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3282,
									"end": 3293,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3256,
									"end": 3294,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 3256,
									"end": 3294,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3256,
									"end": 3294,
									"name": "tag",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 3256,
									"end": 3294,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3250,
									"end": 3254,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3206,
									"end": 3303,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 3206,
									"end": 3303,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3206,
									"end": 3303,
									"name": "tag",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 3206,
									"end": 3303,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3358,
									"end": 3362,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3358,
									"end": 3362,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3422,
									"end": 3424,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 3411,
									"end": 3425,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3411,
									"end": 3425,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 3439,
									"end": 3440,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3434,
									"end": 4097,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3434,
									"end": 4097,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 3434,
									"end": 4097,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 3434,
									"end": 4097,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4141,
									"end": 4142,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4158,
									"end": 4164,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4155,
									"end": 4244,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4155,
									"end": 4244,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 4155,
									"end": 4244,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4210,
									"end": 4229,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4210,
									"end": 4229,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4210,
									"end": 4229,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4204,
									"end": 4230,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 4155,
									"end": 4244,
									"name": "tag",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 4155,
									"end": 4244,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2959,
									"end": 2960,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2955,
									"end": 2966,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2955,
									"end": 2966,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2955,
									"end": 2966,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2951,
									"end": 2975,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2947,
									"end": 2976,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2937,
									"end": 2977,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2983,
									"end": 2984,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2979,
									"end": 2990,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2979,
									"end": 2990,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2979,
									"end": 2990,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2934,
									"end": 2991,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 4257,
									"end": 4338,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4257,
									"end": 4338,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3404,
									"end": 4348,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 3404,
									"end": 4348,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3434,
									"end": 4097,
									"name": "tag",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 3434,
									"end": 4097,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2228,
									"end": 2229,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2235,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2221,
									"end": 2235,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2221,
									"end": 2235,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2265,
									"end": 2269,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2252,
									"end": 2270,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2252,
									"end": 2270,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3470,
									"end": 3490,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 3470,
									"end": 3490,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3470,
									"end": 3490,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3588,
									"end": 3824,
									"name": "tag",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 3588,
									"end": 3824,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3602,
									"end": 3609,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3599,
									"end": 3600,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3596,
									"end": 3610,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3588,
									"end": 3824,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3588,
									"end": 3824,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 3588,
									"end": 3824,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3691,
									"end": 3710,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 3691,
									"end": 3710,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 3691,
									"end": 3710,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3685,
									"end": 3711,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3670,
									"end": 3712,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3670,
									"end": 3712,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3783,
									"end": 3810,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 3783,
									"end": 3810,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3783,
									"end": 3810,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3783,
									"end": 3810,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 3751,
									"end": 3752,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3739,
									"end": 3753,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3739,
									"end": 3753,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3739,
									"end": 3753,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3739,
									"end": 3753,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3618,
									"end": 3637,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3618,
									"end": 3637,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3588,
									"end": 3824,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 3588,
									"end": 3824,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3588,
									"end": 3824,
									"name": "tag",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 3588,
									"end": 3824,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3592,
									"end": 3595,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3852,
									"end": 3858,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3843,
									"end": 3850,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3840,
									"end": 3859,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3837,
									"end": 4038,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3837,
									"end": 4038,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 3837,
									"end": 4038,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3913,
									"end": 3932,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 3913,
									"end": 3932,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3913,
									"end": 3932,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3907,
									"end": 3933,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3996,
									"end": 3997,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 3992,
									"end": 4006,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 3992,
									"end": 4006,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3992,
									"end": 4006,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 4008,
									"end": 4011,
									"name": "PUSH",
									"source": 1,
									"value": "F8"
								},
								{
									"begin": 3988,
									"end": 4012,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3984,
									"end": 4021,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 3980,
									"end": 4022,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3965,
									"end": 4023,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3950,
									"end": 4024,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3950,
									"end": 4024,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3837,
									"end": 4038,
									"name": "tag",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 3837,
									"end": 4038,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4084,
									"end": 4085,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 4068,
									"end": 4082,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4068,
									"end": 4082,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4068,
									"end": 4082,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 4064,
									"end": 4086,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4051,
									"end": 4087,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4051,
									"end": 4087,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3002,
									"end": 4354,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3002,
									"end": 4354,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 3002,
									"end": 4354,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4536,
									"end": 12246,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4536,
									"end": 12246,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 4536,
									"end": 12246,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4536,
									"end": 12246,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4536,
									"end": 12246,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 4536,
									"end": 12246,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4536,
									"end": 12246,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122047bb95ecfbd8e9f7b91f115dbc8e33c4d6c4b77b4202a500d4827bfd3a286eee64736f6c63430008140033",
									".code": [
										{
											"begin": 4536,
											"end": 12246,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "PUSH",
											"source": 0,
											"value": "7C77DB72"
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "PUSH",
											"source": 0,
											"value": "B187BD26"
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "PUSH",
											"source": 0,
											"value": "B187BD26"
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "PUSH",
											"source": 0,
											"value": "B8F309C7"
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "PUSH",
											"source": 0,
											"value": "D6B70AC0"
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "PUSH",
											"source": 0,
											"value": "EB1D8152"
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "PUSH",
											"source": 0,
											"value": "F7B188A5"
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "PUSH",
											"source": 0,
											"value": "7C77DB72"
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "PUSH",
											"source": 0,
											"value": "8111F24E"
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "PUSH",
											"source": 0,
											"value": "91E2C315"
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "PUSH",
											"source": 0,
											"value": "6985A022"
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "PUSH",
											"source": 0,
											"value": "6EBCF607"
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "PUSH",
											"source": 0,
											"value": "1AA66049"
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "PUSH",
											"source": 0,
											"value": "1D4CA8BF"
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 12246,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9870,
											"end": 9952,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9870,
											"end": 9952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9870,
											"end": 9952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 9870,
											"end": 9952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 9870,
											"end": 9952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9870,
											"end": 9952,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 9870,
											"end": 9952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9870,
											"end": 9952,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9870,
											"end": 9952,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9870,
											"end": 9952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 9870,
											"end": 9952,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9870,
											"end": 9952,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9870,
											"end": 9952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 9870,
											"end": 9952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9870,
											"end": 9952,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 9870,
											"end": 9952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9870,
											"end": 9952,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9870,
											"end": 9952,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9870,
											"end": 9952,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9870,
											"end": 9952,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9870,
											"end": 9952,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9870,
											"end": 9952,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9870,
											"end": 9952,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 6508,
											"end": 6806,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6508,
											"end": 6806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6508,
											"end": 6806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 6508,
											"end": 6806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 6508,
											"end": 6806,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6508,
											"end": 6806,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6508,
											"end": 6806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 6508,
											"end": 6806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6508,
											"end": 6806,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 6508,
											"end": 6806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6508,
											"end": 6806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 6508,
											"end": 6806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6508,
											"end": 6806,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 6508,
											"end": 6806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6508,
											"end": 6806,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6508,
											"end": 6806,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1162,
											"end": 1184,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1134,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1117,
											"end": 1135,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6508,
											"end": 6806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1004,
											"end": 1191,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5639,
											"end": 5723,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 5639,
											"end": 5723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5709,
											"end": 5716,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5709,
											"end": 5716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5639,
											"end": 5723,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 5639,
											"end": 5723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5639,
											"end": 5723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5639,
											"end": 5723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5639,
											"end": 5723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11854,
											"end": 11977,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 11854,
											"end": 11977,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11854,
											"end": 11977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 11854,
											"end": 11977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 11854,
											"end": 11977,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 11854,
											"end": 11977,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11854,
											"end": 11977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 11854,
											"end": 11977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11854,
											"end": 11977,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 11854,
											"end": 11977,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11854,
											"end": 11977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 11854,
											"end": 11977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11413,
											"end": 11586,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 11413,
											"end": 11586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11413,
											"end": 11586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 11413,
											"end": 11586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 11413,
											"end": 11586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7095,
											"end": 7526,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 7095,
											"end": 7526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7095,
											"end": 7526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 7095,
											"end": 7526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 7095,
											"end": 7526,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7095,
											"end": 7526,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7095,
											"end": 7526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 7095,
											"end": 7526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7095,
											"end": 7526,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 7095,
											"end": 7526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7095,
											"end": 7526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 7095,
											"end": 7526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10050,
											"end": 10132,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 10050,
											"end": 10132,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10116,
											"end": 10125,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10116,
											"end": 10125,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10050,
											"end": 10132,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10050,
											"end": 10132,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10116,
											"end": 10125,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 10116,
											"end": 10125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10116,
											"end": 10125,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10116,
											"end": 10125,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2044,
											"end": 2080,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2044,
											"end": 2080,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2032,
											"end": 2034,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2017,
											"end": 2035,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10050,
											"end": 10132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1902,
											"end": 2086,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6812,
											"end": 7089,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 6812,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6812,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 6812,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6812,
											"end": 7089,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6812,
											"end": 7089,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6812,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 6812,
											"end": 7089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6812,
											"end": 7089,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6812,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6812,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 6812,
											"end": 7089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10973,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 10810,
											"end": 10973,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10973,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 10810,
											"end": 10973,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 10810,
											"end": 10973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4785,
											"end": 4829,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 4785,
											"end": 4829,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4785,
											"end": 4829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 4785,
											"end": 4829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 4785,
											"end": 4829,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4785,
											"end": 4829,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4785,
											"end": 4829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 4785,
											"end": 4829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4785,
											"end": 4829,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 4785,
											"end": 4829,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4785,
											"end": 4829,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4785,
											"end": 4829,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4785,
											"end": 4829,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4785,
											"end": 4829,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4785,
											"end": 4829,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4785,
											"end": 4829,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4785,
											"end": 4829,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4785,
											"end": 4829,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4785,
											"end": 4829,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4785,
											"end": 4829,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4785,
											"end": 4829,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4785,
											"end": 4829,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4785,
											"end": 4829,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5729,
											"end": 5837,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 5729,
											"end": 5837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5729,
											"end": 5837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 5729,
											"end": 5837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 5729,
											"end": 5837,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5729,
											"end": 5837,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5729,
											"end": 5837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 5729,
											"end": 5837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5729,
											"end": 5837,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 5729,
											"end": 5837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5812,
											"end": 5830,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5786,
											"end": 5793,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5812,
											"end": 5830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5812,
											"end": 5830,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5812,
											"end": 5830,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5812,
											"end": 5821,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 5812,
											"end": 5830,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5812,
											"end": 5830,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5812,
											"end": 5830,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5812,
											"end": 5830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5812,
											"end": 5830,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5812,
											"end": 5830,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5812,
											"end": 5830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5729,
											"end": 5837,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4881,
											"end": 4920,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 4881,
											"end": 4920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4881,
											"end": 4920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4881,
											"end": 4920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4881,
											"end": 4920,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4881,
											"end": 4920,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4881,
											"end": 4920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 4881,
											"end": 4920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4881,
											"end": 4920,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4881,
											"end": 4920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4881,
											"end": 4920,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4881,
											"end": 4920,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4881,
											"end": 4920,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4881,
											"end": 4920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4881,
											"end": 4920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4881,
											"end": 4920,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4881,
											"end": 4920,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4881,
											"end": 4920,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4881,
											"end": 4920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4881,
											"end": 4920,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4881,
											"end": 4920,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4881,
											"end": 4920,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 4881,
											"end": 4920,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4881,
											"end": 4920,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4881,
											"end": 4920,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12149,
											"end": 12244,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 12149,
											"end": 12244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12149,
											"end": 12244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 12149,
											"end": 12244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 12149,
											"end": 12244,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 12149,
											"end": 12244,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12149,
											"end": 12244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 12149,
											"end": 12244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12149,
											"end": 12244,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 12149,
											"end": 12244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12149,
											"end": 12244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 12149,
											"end": 12244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11983,
											"end": 12143,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 11983,
											"end": 12143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11983,
											"end": 12143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 11983,
											"end": 12143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 11983,
											"end": 12143,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 11983,
											"end": 12143,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11983,
											"end": 12143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 11983,
											"end": 12143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11983,
											"end": 12143,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 11983,
											"end": 12143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11983,
											"end": 12143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 11983,
											"end": 12143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9958,
											"end": 10044,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 9958,
											"end": 10044,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9958,
											"end": 10044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 9958,
											"end": 10044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 9958,
											"end": 10044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5843,
											"end": 6196,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 5843,
											"end": 6196,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5843,
											"end": 6196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 5843,
											"end": 6196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 5843,
											"end": 6196,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5843,
											"end": 6196,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5843,
											"end": 6196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 5843,
											"end": 6196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5843,
											"end": 6196,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 5843,
											"end": 6196,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5843,
											"end": 6196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 5843,
											"end": 6196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10638,
											"end": 10717,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 10638,
											"end": 10717,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10703,
											"end": 10710,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10703,
											"end": 10710,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10703,
											"end": 10710,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10703,
											"end": 10710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10703,
											"end": 10710,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 10703,
											"end": 10710,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 10703,
											"end": 10710,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10638,
											"end": 10717,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 10638,
											"end": 10717,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10503,
											"end": 10632,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10503,
											"end": 10632,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10503,
											"end": 10632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 10503,
											"end": 10632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 10503,
											"end": 10632,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10503,
											"end": 10632,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10503,
											"end": 10632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 10503,
											"end": 10632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10503,
											"end": 10632,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 10503,
											"end": 10632,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10503,
											"end": 10632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 10503,
											"end": 10632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10503,
											"end": 10632,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 10503,
											"end": 10632,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10503,
											"end": 10632,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10503,
											"end": 10632,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2255,
											"end": 2287,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2255,
											"end": 2287,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2255,
											"end": 2287,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2288,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2288,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2225,
											"end": 2227,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10503,
											"end": 10632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2091,
											"end": 2294,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11691,
											"end": 11848,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 11691,
											"end": 11848,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11691,
											"end": 11848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 11691,
											"end": 11848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 11691,
											"end": 11848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9226,
											"end": 9388,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 9226,
											"end": 9388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9226,
											"end": 9388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 9226,
											"end": 9388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 9226,
											"end": 9388,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9226,
											"end": 9388,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9226,
											"end": 9388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 9226,
											"end": 9388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9226,
											"end": 9388,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 9226,
											"end": 9388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9226,
											"end": 9388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 9226,
											"end": 9388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4835,
											"end": 4875,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 4835,
											"end": 4875,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4835,
											"end": 4875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4835,
											"end": 4875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 4835,
											"end": 4875,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4835,
											"end": 4875,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4835,
											"end": 4875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 4835,
											"end": 4875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4835,
											"end": 4875,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 4835,
											"end": 4875,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4835,
											"end": 4875,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4835,
											"end": 4875,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4835,
											"end": 4875,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4835,
											"end": 4875,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4835,
											"end": 4875,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4835,
											"end": 4875,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4835,
											"end": 4875,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4835,
											"end": 4875,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4835,
											"end": 4875,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4835,
											"end": 4875,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4835,
											"end": 4875,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4835,
											"end": 4875,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 4835,
											"end": 4875,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4835,
											"end": 4875,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4835,
											"end": 4875,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11078,
											"end": 11216,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 11078,
											"end": 11216,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11078,
											"end": 11216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 11078,
											"end": 11216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 11078,
											"end": 11216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9870,
											"end": 9952,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 9870,
											"end": 9952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9908,
											"end": 9921,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 9940,
											"end": 9945,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 9933,
											"end": 9945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 9933,
											"end": 9945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9870,
											"end": 9952,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9870,
											"end": 9952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6508,
											"end": 6806,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 6508,
											"end": 6806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10285,
											"end": 10292,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10285,
											"end": 10292,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6620,
											"end": 6624,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6620,
											"end": 6624,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10285,
											"end": 10292,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10285,
											"end": 10292,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10285,
											"end": 10292,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 10285,
											"end": 10292,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 10285,
											"end": 10292,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10284,
											"end": 10292,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10276,
											"end": 10328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 10276,
											"end": 10328,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10276,
											"end": 10328,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10276,
											"end": 10328,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10276,
											"end": 10328,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10276,
											"end": 10328,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10276,
											"end": 10328,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10276,
											"end": 10328,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10276,
											"end": 10328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 10276,
											"end": 10328,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10276,
											"end": 10328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 10276,
											"end": 10328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10276,
											"end": 10328,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 10276,
											"end": 10328,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10276,
											"end": 10328,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10276,
											"end": 10328,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10276,
											"end": 10328,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10276,
											"end": 10328,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10276,
											"end": 10328,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10276,
											"end": 10328,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10276,
											"end": 10328,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10276,
											"end": 10328,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 10276,
											"end": 10328,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10403,
											"end": 10424,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 10413,
											"end": 10423,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10403,
											"end": 10412,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 10403,
											"end": 10424,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10403,
											"end": 10424,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 10403,
											"end": 10424,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10403,
											"end": 10433,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10382,
											"end": 10479,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 10382,
											"end": 10479,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10382,
											"end": 10479,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10382,
											"end": 10479,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10382,
											"end": 10479,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10382,
											"end": 10479,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10382,
											"end": 10479,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10382,
											"end": 10479,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10382,
											"end": 10479,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 10382,
											"end": 10479,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10382,
											"end": 10479,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 10382,
											"end": 10479,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10382,
											"end": 10479,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 10382,
											"end": 10479,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6677,
											"end": 6689,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6677,
											"end": 6689,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6662,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6677,
											"end": 6689,
											"name": "PUSH",
											"source": 0,
											"value": "10000"
										},
										{
											"begin": 6677,
											"end": 6689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6677,
											"end": 6689,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6677,
											"end": 6689,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6677,
											"end": 6689,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6672,
											"end": 6732,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 6672,
											"end": 6732,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6715,
											"end": 6721,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6715,
											"end": 6721,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6715,
											"end": 6721,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6715,
											"end": 6721,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6672,
											"end": 6732,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 6672,
											"end": 6732,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6741,
											"end": 6778,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 6750,
											"end": 6755,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6757,
											"end": 6764,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6766,
											"end": 6771,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6773,
											"end": 6777,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6741,
											"end": 6749,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 6741,
											"end": 6778,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6741,
											"end": 6778,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 6741,
											"end": 6778,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 6799,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6788,
											"end": 6799,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6788,
											"end": 6799,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6788,
											"end": 6799,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10489,
											"end": 10490,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 10489,
											"end": 10490,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6508,
											"end": 6806,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6508,
											"end": 6806,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6508,
											"end": 6806,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6508,
											"end": 6806,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6508,
											"end": 6806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11854,
											"end": 11977,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 11854,
											"end": 11977,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11918,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10189,
											"end": 10195,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10189,
											"end": 10195,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10189,
											"end": 10195,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10175,
											"end": 10185,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10175,
											"end": 10195,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 10167,
											"end": 10223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11930,
											"end": 11942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 11942,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 11942,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11930,
											"end": 11942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 11942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 11942,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 11937,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 11930,
											"end": 11942,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11930,
											"end": 11942,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 11942,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11930,
											"end": 11942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 11942,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 11949,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 11949,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11930,
											"end": 11949,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11945,
											"end": 11949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11930,
											"end": 11949,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 11949,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 11949,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 11949,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 11949,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 11949,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10233,
											"end": 10234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 10233,
											"end": 10234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11854,
											"end": 11977,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11854,
											"end": 11977,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11854,
											"end": 11977,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11854,
											"end": 11977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11413,
											"end": 11586,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 11413,
											"end": 11586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11460,
											"end": 11464,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10189,
											"end": 10195,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10189,
											"end": 10195,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10189,
											"end": 10195,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10175,
											"end": 10185,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10175,
											"end": 10195,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 10167,
											"end": 10223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11476,
											"end": 11488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11476,
											"end": 11495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11476,
											"end": 11495,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF0000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11476,
											"end": 11495,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11476,
											"end": 11495,
											"name": "PUSH",
											"source": 0,
											"value": "10000"
										},
										{
											"begin": 11476,
											"end": 11495,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 11476,
											"end": 11495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11476,
											"end": 11495,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11510,
											"end": 11558,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11510,
											"end": 11558,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11491,
											"end": 11495,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11491,
											"end": 11495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11536,
											"end": 11551,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 11536,
											"end": 11551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11524,
											"end": 11534,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 11524,
											"end": 11534,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11510,
											"end": 11558,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1184061675848E328FB316ABFD3F046F1CAE4FB526DC24D09BDAA92E3921217"
										},
										{
											"begin": 11510,
											"end": 11558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11476,
											"end": 11495,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11476,
											"end": 11495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11510,
											"end": 11558,
											"modifierDepth": 1,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11575,
											"end": 11579,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11413,
											"end": 11586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11413,
											"end": 11586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7095,
											"end": 7526,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 7095,
											"end": 7526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10285,
											"end": 10292,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10285,
											"end": 10292,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7229,
											"end": 7233,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7229,
											"end": 7233,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10285,
											"end": 10292,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10285,
											"end": 10292,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10285,
											"end": 10292,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 10285,
											"end": 10292,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 10285,
											"end": 10292,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10284,
											"end": 10292,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10276,
											"end": 10328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 10276,
											"end": 10328,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10276,
											"end": 10328,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10276,
											"end": 10328,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10276,
											"end": 10328,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10276,
											"end": 10328,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10276,
											"end": 10328,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10276,
											"end": 10328,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10276,
											"end": 10328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 10276,
											"end": 10328,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10276,
											"end": 10328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 10276,
											"end": 10328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10276,
											"end": 10328,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 10276,
											"end": 10328,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10403,
											"end": 10424,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 10413,
											"end": 10423,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10403,
											"end": 10412,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 10403,
											"end": 10424,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10403,
											"end": 10424,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 10403,
											"end": 10424,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10403,
											"end": 10433,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10382,
											"end": 10479,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 10382,
											"end": 10479,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10382,
											"end": 10479,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10382,
											"end": 10479,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10382,
											"end": 10479,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10382,
											"end": 10479,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10382,
											"end": 10479,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10382,
											"end": 10479,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10382,
											"end": 10479,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 10382,
											"end": 10479,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10382,
											"end": 10479,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 10382,
											"end": 10479,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10382,
											"end": 10479,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 10382,
											"end": 10479,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7280,
											"end": 7286,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7280,
											"end": 7286,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7280,
											"end": 7286,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7266,
											"end": 7276,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7266,
											"end": 7286,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7266,
											"end": 7286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7266,
											"end": 7302,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 7266,
											"end": 7302,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7290,
											"end": 7302,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7290,
											"end": 7302,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7290,
											"end": 7302,
											"name": "PUSH",
											"source": 0,
											"value": "10000"
										},
										{
											"begin": 7290,
											"end": 7302,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7290,
											"end": 7302,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7290,
											"end": 7302,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 7290,
											"end": 7302,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7266,
											"end": 7302,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 7266,
											"end": 7302,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7245,
											"end": 7377,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 7245,
											"end": 7377,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7245,
											"end": 7377,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7245,
											"end": 7377,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7245,
											"end": 7377,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7245,
											"end": 7377,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7245,
											"end": 7377,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7245,
											"end": 7377,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7245,
											"end": 7377,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 7245,
											"end": 7377,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7245,
											"end": 7377,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 7245,
											"end": 7377,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7245,
											"end": 7377,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 7245,
											"end": 7377,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7405,
											"end": 7415,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7425,
											"end": 7462,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 7441,
											"end": 7445,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7405,
											"end": 7415,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7456,
											"end": 7461,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7425,
											"end": 7440,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 7425,
											"end": 7462,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7425,
											"end": 7462,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 7425,
											"end": 7462,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7472,
											"end": 7498,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 7482,
											"end": 7486,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7488,
											"end": 7490,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7492,
											"end": 7497,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7472,
											"end": 7481,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 7472,
											"end": 7498,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7472,
											"end": 7498,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 7472,
											"end": 7498,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7515,
											"end": 7519,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7515,
											"end": 7519,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 7095,
											"end": 7526,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7095,
											"end": 7526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6812,
											"end": 7089,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 6812,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10285,
											"end": 10292,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10285,
											"end": 10292,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6939,
											"end": 6943,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6939,
											"end": 6943,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10285,
											"end": 10292,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10285,
											"end": 10292,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10285,
											"end": 10292,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 10285,
											"end": 10292,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 10285,
											"end": 10292,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10284,
											"end": 10292,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10276,
											"end": 10328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 10276,
											"end": 10328,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10276,
											"end": 10328,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10276,
											"end": 10328,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10276,
											"end": 10328,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10276,
											"end": 10328,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10276,
											"end": 10328,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10276,
											"end": 10328,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10276,
											"end": 10328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 10276,
											"end": 10328,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10276,
											"end": 10328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 10276,
											"end": 10328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10276,
											"end": 10328,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 10276,
											"end": 10328,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10403,
											"end": 10424,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 10413,
											"end": 10423,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10403,
											"end": 10412,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 10403,
											"end": 10424,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10403,
											"end": 10424,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 10403,
											"end": 10424,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10403,
											"end": 10433,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10382,
											"end": 10479,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 10382,
											"end": 10479,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10382,
											"end": 10479,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10382,
											"end": 10479,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10382,
											"end": 10479,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10382,
											"end": 10479,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10382,
											"end": 10479,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10382,
											"end": 10479,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10382,
											"end": 10479,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 10382,
											"end": 10479,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10382,
											"end": 10479,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 10382,
											"end": 10479,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10382,
											"end": 10479,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 10382,
											"end": 10479,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6971,
											"end": 6981,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 6991,
											"end": 7061,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 6971,
											"end": 6981,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7007,
											"end": 7014,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7044,
											"end": 7054,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7041,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 6971,
											"end": 6981,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7007,
											"end": 7014,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7025,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 7016,
											"end": 7041,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7041,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 7016,
											"end": 7041,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7054,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 7016,
											"end": 7054,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7054,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7054,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 7016,
											"end": 7054,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7054,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 7016,
											"end": 7054,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7056,
											"end": 7060,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6991,
											"end": 6999,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 6991,
											"end": 7061,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10973,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 10810,
											"end": 10973,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10859,
											"end": 10863,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10189,
											"end": 10195,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10189,
											"end": 10195,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10189,
											"end": 10195,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10175,
											"end": 10185,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10175,
											"end": 10195,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 10167,
											"end": 10223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10875,
											"end": 10882,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10875,
											"end": 10889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10875,
											"end": 10889,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10875,
											"end": 10889,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10875,
											"end": 10889,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10875,
											"end": 10889,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 10875,
											"end": 10889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10875,
											"end": 10889,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10904,
											"end": 10945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10904,
											"end": 10945,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10885,
											"end": 10889,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10885,
											"end": 10889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10923,
											"end": 10938,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 10923,
											"end": 10938,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10911,
											"end": 10921,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10911,
											"end": 10921,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10904,
											"end": 10945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "CD52C664C2010B8CB55E5D2EA0AE5ADD4A5B0460CFAFC8AF4AF80F5BEE1032CA"
										},
										{
											"begin": 10904,
											"end": 10945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10875,
											"end": 10889,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10875,
											"end": 10889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10904,
											"end": 10945,
											"modifierDepth": 1,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10962,
											"end": 10966,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10810,
											"end": 10973,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10973,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12149,
											"end": 12244,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 12149,
											"end": 12244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12225,
											"end": 12237,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12202,
											"end": 12206,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12225,
											"end": 12237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12225,
											"end": 12237,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12225,
											"end": 12237,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12225,
											"end": 12232,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 12225,
											"end": 12237,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12225,
											"end": 12237,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12225,
											"end": 12237,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12225,
											"end": 12237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12225,
											"end": 12237,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12225,
											"end": 12237,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12225,
											"end": 12237,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 12225,
											"end": 12237,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12225,
											"end": 12237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12149,
											"end": 12244,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11983,
											"end": 12143,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 11983,
											"end": 12143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12045,
											"end": 12049,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10189,
											"end": 10195,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10189,
											"end": 10195,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10189,
											"end": 10195,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10175,
											"end": 10185,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10175,
											"end": 10195,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 10167,
											"end": 10223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12085,
											"end": 12097,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12100,
											"end": 12105,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12085,
											"end": 12092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 12085,
											"end": 12097,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12085,
											"end": 12105,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12085,
											"end": 12105,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12085,
											"end": 12105,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12085,
											"end": 12105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12085,
											"end": 12105,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 11983,
											"end": 12143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9958,
											"end": 10044,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 9958,
											"end": 10044,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9998,
											"end": 10011,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 10030,
											"end": 10037,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10023,
											"end": 10037,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10023,
											"end": 10037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10023,
											"end": 10037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 10023,
											"end": 10037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10023,
											"end": 10037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 10023,
											"end": 10037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5843,
											"end": 6196,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 5843,
											"end": 6196,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10285,
											"end": 10292,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10285,
											"end": 10292,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5951,
											"end": 5955,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5951,
											"end": 5955,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10285,
											"end": 10292,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10285,
											"end": 10292,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10285,
											"end": 10292,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 10285,
											"end": 10292,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 10285,
											"end": 10292,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10284,
											"end": 10292,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10276,
											"end": 10328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 10276,
											"end": 10328,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10276,
											"end": 10328,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10276,
											"end": 10328,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10276,
											"end": 10328,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10276,
											"end": 10328,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10276,
											"end": 10328,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10276,
											"end": 10328,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10276,
											"end": 10328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 10276,
											"end": 10328,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10276,
											"end": 10328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 10276,
											"end": 10328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10276,
											"end": 10328,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 10276,
											"end": 10328,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10403,
											"end": 10424,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 10413,
											"end": 10423,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10403,
											"end": 10412,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 10403,
											"end": 10424,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10403,
											"end": 10424,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 10403,
											"end": 10424,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10403,
											"end": 10433,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10382,
											"end": 10479,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 10382,
											"end": 10479,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10382,
											"end": 10479,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10382,
											"end": 10479,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10382,
											"end": 10479,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10382,
											"end": 10479,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10382,
											"end": 10479,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10382,
											"end": 10479,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10382,
											"end": 10479,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 10382,
											"end": 10479,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10382,
											"end": 10479,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 10382,
											"end": 10479,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10382,
											"end": 10479,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 10382,
											"end": 10479,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6002,
											"end": 6008,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6002,
											"end": 6008,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6002,
											"end": 6008,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5988,
											"end": 5998,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5988,
											"end": 6008,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5988,
											"end": 6008,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5988,
											"end": 6024,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 5988,
											"end": 6024,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6012,
											"end": 6024,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6012,
											"end": 6024,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6012,
											"end": 6024,
											"name": "PUSH",
											"source": 0,
											"value": "10000"
										},
										{
											"begin": 6012,
											"end": 6024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6012,
											"end": 6024,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6012,
											"end": 6024,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6012,
											"end": 6024,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5988,
											"end": 6024,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 5988,
											"end": 6024,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5967,
											"end": 6099,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 5967,
											"end": 6099,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5967,
											"end": 6099,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5967,
											"end": 6099,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5967,
											"end": 6099,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5967,
											"end": 6099,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5967,
											"end": 6099,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5967,
											"end": 6099,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5967,
											"end": 6099,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 5967,
											"end": 6099,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5967,
											"end": 6099,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 5967,
											"end": 6099,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5967,
											"end": 6099,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 5967,
											"end": 6099,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6124,
											"end": 6134,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 6144,
											"end": 6168,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 6124,
											"end": 6134,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6158,
											"end": 6160,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6162,
											"end": 6167,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6144,
											"end": 6151,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 6144,
											"end": 6168,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10503,
											"end": 10632,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 10503,
											"end": 10632,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10589,
											"end": 10596,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10189,
											"end": 10195,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10189,
											"end": 10195,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10189,
											"end": 10195,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10175,
											"end": 10185,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10175,
											"end": 10195,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 10167,
											"end": 10223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10608,
											"end": 10614,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10608,
											"end": 10625,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10608,
											"end": 10625,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10608,
											"end": 10625,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10608,
											"end": 10625,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10608,
											"end": 10625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10608,
											"end": 10625,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10608,
											"end": 10625,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10608,
											"end": 10625,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10608,
											"end": 10625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10608,
											"end": 10625,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10608,
											"end": 10625,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 10608,
											"end": 10625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10608,
											"end": 10625,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10608,
											"end": 10625,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10608,
											"end": 10625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10503,
											"end": 10632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11691,
											"end": 11848,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 11691,
											"end": 11848,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11741,
											"end": 11745,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10189,
											"end": 10195,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10189,
											"end": 10195,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10189,
											"end": 10195,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10175,
											"end": 10185,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10175,
											"end": 10195,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 10167,
											"end": 10223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11757,
											"end": 11769,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11757,
											"end": 11777,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11757,
											"end": 11777,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF0000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11757,
											"end": 11777,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11757,
											"end": 11777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11757,
											"end": 11777,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11792,
											"end": 11841,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11792,
											"end": 11841,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11772,
											"end": 11777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11772,
											"end": 11777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11818,
											"end": 11833,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 11818,
											"end": 11833,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11806,
											"end": 11816,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 11806,
											"end": 11816,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11792,
											"end": 11841,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1184061675848E328FB316ABFD3F046F1CAE4FB526DC24D09BDAA92E3921217"
										},
										{
											"begin": 11792,
											"end": 11841,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11772,
											"end": 11777,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11772,
											"end": 11777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11792,
											"end": 11841,
											"modifierDepth": 1,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 11691,
											"end": 11848,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11691,
											"end": 11848,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9226,
											"end": 9388,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 9226,
											"end": 9388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9354,
											"end": 9372,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9354,
											"end": 9372,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9354,
											"end": 9372,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9328,
											"end": 9335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9354,
											"end": 9372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9354,
											"end": 9372,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9354,
											"end": 9372,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9354,
											"end": 9365,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 9354,
											"end": 9372,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9354,
											"end": 9372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9354,
											"end": 9372,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9354,
											"end": 9372,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9354,
											"end": 9372,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9354,
											"end": 9372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9354,
											"end": 9372,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9354,
											"end": 9372,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9354,
											"end": 9381,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 9354,
											"end": 9381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9354,
											"end": 9381,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 9354,
											"end": 9381,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9354,
											"end": 9381,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9354,
											"end": 9381,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9354,
											"end": 9381,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9354,
											"end": 9381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9354,
											"end": 9381,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9354,
											"end": 9381,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9354,
											"end": 9381,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9354,
											"end": 9381,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9354,
											"end": 9381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9226,
											"end": 9388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11078,
											"end": 11216,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 11078,
											"end": 11216,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11121,
											"end": 11125,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10189,
											"end": 10195,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10189,
											"end": 10195,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10189,
											"end": 10195,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10175,
											"end": 10185,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10175,
											"end": 10195,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 10167,
											"end": 10223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 10167,
											"end": 10223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11137,
											"end": 11144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11137,
											"end": 11152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11137,
											"end": 11152,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11137,
											"end": 11152,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11137,
											"end": 11152,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11137,
											"end": 11152,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11167,
											"end": 11209,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11167,
											"end": 11209,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11147,
											"end": 11152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11147,
											"end": 11152,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11186,
											"end": 11201,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 11186,
											"end": 11201,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11174,
											"end": 11184,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 11174,
											"end": 11184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11167,
											"end": 11209,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "CD52C664C2010B8CB55E5D2EA0AE5ADD4A5B0460CFAFC8AF4AF80F5BEE1032CA"
										},
										{
											"begin": 11167,
											"end": 11209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11147,
											"end": 11152,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11147,
											"end": 11152,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11167,
											"end": 11209,
											"modifierDepth": 1,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 11078,
											"end": 11216,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11078,
											"end": 11216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9394,
											"end": 9864,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 9394,
											"end": 9864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9544,
											"end": 9563,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9544,
											"end": 9563,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9540,
											"end": 9629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 9540,
											"end": 9629,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9586,
											"end": 9618,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9586,
											"end": 9618,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9586,
											"end": 9618,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9586,
											"end": 9618,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9615,
											"end": 9616,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9586,
											"end": 9618,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9586,
											"end": 9618,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9586,
											"end": 9618,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2288,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9586,
											"end": 9618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2091,
											"end": 2294,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9629,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 9540,
											"end": 9629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9642,
											"end": 9663,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9642,
											"end": 9663,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9638,
											"end": 9728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 9638,
											"end": 9728,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9686,
											"end": 9717,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9686,
											"end": 9717,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9686,
											"end": 9717,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9686,
											"end": 9717,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9714,
											"end": 9715,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9686,
											"end": 9717,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9686,
											"end": 9717,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9686,
											"end": 9717,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2288,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9686,
											"end": 9717,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2091,
											"end": 2294,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9638,
											"end": 9728,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 9638,
											"end": 9728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9737,
											"end": 9755,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9737,
											"end": 9755,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9737,
											"end": 9755,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9737,
											"end": 9755,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9737,
											"end": 9755,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9737,
											"end": 9755,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9737,
											"end": 9755,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9737,
											"end": 9748,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 9737,
											"end": 9755,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9737,
											"end": 9755,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9737,
											"end": 9755,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9737,
											"end": 9755,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9737,
											"end": 9755,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9737,
											"end": 9755,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9737,
											"end": 9755,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9737,
											"end": 9755,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9737,
											"end": 9764,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 9737,
											"end": 9764,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 9737,
											"end": 9764,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9737,
											"end": 9764,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9737,
											"end": 9764,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9737,
											"end": 9764,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9737,
											"end": 9764,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9737,
											"end": 9764,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9737,
											"end": 9764,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9737,
											"end": 9772,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9737,
											"end": 9772,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9737,
											"end": 9772,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9782,
											"end": 9858,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9782,
											"end": 9858,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9782,
											"end": 9858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 9782,
											"end": 9858,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9832,
											"end": 9839,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9816,
											"end": 9847,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9825,
											"end": 9830,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9816,
											"end": 9847,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9816,
											"end": 9847,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 9841,
											"end": 9846,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9816,
											"end": 9847,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9816,
											"end": 9847,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9816,
											"end": 9847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 9816,
											"end": 9847,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9816,
											"end": 9847,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 9816,
											"end": 9847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9816,
											"end": 9847,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9816,
											"end": 9847,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9816,
											"end": 9847,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9816,
											"end": 9847,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9816,
											"end": 9847,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9816,
											"end": 9847,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9816,
											"end": 9847,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 9782,
											"end": 9858,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 9782,
											"end": 9858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9394,
											"end": 9864,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9394,
											"end": 9864,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9394,
											"end": 9864,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9394,
											"end": 9864,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9394,
											"end": 9864,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8635,
											"end": 9220,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 8635,
											"end": 9220,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8764,
											"end": 8788,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8791,
											"end": 8816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 8801,
											"end": 8806,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8808,
											"end": 8815,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8791,
											"end": 8800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 8791,
											"end": 8816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8791,
											"end": 8816,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 8791,
											"end": 8816,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8764,
											"end": 8816,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8764,
											"end": 8816,
											"name": "POP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8830,
											"end": 8846,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8830,
											"end": 8867,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8826,
											"end": 9214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 8826,
											"end": 9214,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8906,
											"end": 8911,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8887,
											"end": 8903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8887,
											"end": 8911,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8883,
											"end": 9091,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8883,
											"end": 9091,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 8883,
											"end": 9091,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 9076,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8938,
											"end": 9076,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7DC7A0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8938,
											"end": 9076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 9076,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4874,
											"end": 4906,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4874,
											"end": 4906,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8938,
											"end": 9076,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8938,
											"end": 9076,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 9076,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4856,
											"end": 4907,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4923,
											"end": 4941,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4923,
											"end": 4941,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4923,
											"end": 4941,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4916,
											"end": 4950,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4916,
											"end": 4950,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4916,
											"end": 4950,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4966,
											"end": 4984,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4966,
											"end": 4984,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4966,
											"end": 4984,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4959,
											"end": 4993,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4959,
											"end": 4993,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4959,
											"end": 4993,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4829,
											"end": 4847,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4829,
											"end": 4847,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8938,
											"end": 9076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 4654,
											"end": 4999,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8883,
											"end": 9091,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 8883,
											"end": 9091,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9132,
											"end": 9189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 9141,
											"end": 9146,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9148,
											"end": 9155,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9176,
											"end": 9181,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9157,
											"end": 9173,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9157,
											"end": 9181,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9183,
											"end": 9188,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9132,
											"end": 9140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 9132,
											"end": 9189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6202,
											"end": 6502,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 6202,
											"end": 6502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6285,
											"end": 6303,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6285,
											"end": 6303,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6281,
											"end": 6367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 6281,
											"end": 6367,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6326,
											"end": 6356,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6326,
											"end": 6356,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6326,
											"end": 6356,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6326,
											"end": 6356,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6353,
											"end": 6354,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6326,
											"end": 6356,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6326,
											"end": 6356,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6326,
											"end": 6356,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2288,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6326,
											"end": 6356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2091,
											"end": 2294,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6367,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 6281,
											"end": 6367,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6380,
											"end": 6396,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6380,
											"end": 6396,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6376,
											"end": 6462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 6376,
											"end": 6462,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 6451,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6419,
											"end": 6451,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6419,
											"end": 6451,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 6451,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6448,
											"end": 6449,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6419,
											"end": 6451,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6419,
											"end": 6451,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 6451,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2288,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6419,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2091,
											"end": 2294,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6462,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 6376,
											"end": 6462,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6471,
											"end": 6495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 6479,
											"end": 6483,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6485,
											"end": 6487,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6489,
											"end": 6494,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6471,
											"end": 6478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 6471,
											"end": 6495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6471,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 6471,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6202,
											"end": 6502,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6202,
											"end": 6502,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6202,
											"end": 6502,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6202,
											"end": 6502,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 8629,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 7532,
											"end": 8629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7621,
											"end": 7639,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7621,
											"end": 7639,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7617,
											"end": 8152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 7617,
											"end": 8152,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7768,
											"end": 7773,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7764,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7757,
											"end": 7764,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7757,
											"end": 7773,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7773,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7773,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 7757,
											"end": 7773,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7773,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 7757,
											"end": 7773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7773,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 7757,
											"end": 7773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7773,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7773,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7773,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7617,
											"end": 8152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 7617,
											"end": 8152,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7617,
											"end": 8152,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7617,
											"end": 8152,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 7617,
											"end": 8152,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7826,
											"end": 7841,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7826,
											"end": 7841,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7804,
											"end": 7823,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7826,
											"end": 7841,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7826,
											"end": 7841,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7826,
											"end": 7841,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7826,
											"end": 7835,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 7826,
											"end": 7841,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7826,
											"end": 7841,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7826,
											"end": 7841,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7826,
											"end": 7841,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7826,
											"end": 7841,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7826,
											"end": 7841,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7859,
											"end": 7878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7859,
											"end": 7878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7859,
											"end": 7878,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7855,
											"end": 7970,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7855,
											"end": 7970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 7855,
											"end": 7970,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7905,
											"end": 7955,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7905,
											"end": 7955,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "391434E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7905,
											"end": 7955,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7905,
											"end": 7955,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4874,
											"end": 4906,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4874,
											"end": 4906,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7905,
											"end": 7955,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7905,
											"end": 7955,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7905,
											"end": 7955,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4856,
											"end": 4907,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4923,
											"end": 4941,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4923,
											"end": 4941,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4923,
											"end": 4941,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4916,
											"end": 4950,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4916,
											"end": 4950,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4916,
											"end": 4950,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4966,
											"end": 4984,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4966,
											"end": 4984,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4966,
											"end": 4984,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4959,
											"end": 4993,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4959,
											"end": 4993,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4959,
											"end": 4993,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4829,
											"end": 4847,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4829,
											"end": 4847,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7905,
											"end": 7955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 4654,
											"end": 4999,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7855,
											"end": 7970,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 7855,
											"end": 7970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8090,
											"end": 8105,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8090,
											"end": 8105,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8090,
											"end": 8105,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8090,
											"end": 8105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8090,
											"end": 8105,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8090,
											"end": 8105,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8090,
											"end": 8099,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 8090,
											"end": 8105,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8090,
											"end": 8105,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8090,
											"end": 8105,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8090,
											"end": 8105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8090,
											"end": 8105,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8108,
											"end": 8127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8108,
											"end": 8127,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8108,
											"end": 8127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8108,
											"end": 8127,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8090,
											"end": 8127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8090,
											"end": 8127,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7617,
											"end": 8152,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 7617,
											"end": 8152,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8166,
											"end": 8182,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8166,
											"end": 8182,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8162,
											"end": 8582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 8162,
											"end": 8582,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8329,
											"end": 8336,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8329,
											"end": 8345,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8329,
											"end": 8345,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8329,
											"end": 8345,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8329,
											"end": 8345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8329,
											"end": 8345,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8329,
											"end": 8345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8329,
											"end": 8345,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8162,
											"end": 8582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 8162,
											"end": 8582,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8162,
											"end": 8582,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 8162,
											"end": 8582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8535,
											"end": 8548,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8535,
											"end": 8548,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8535,
											"end": 8548,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8535,
											"end": 8548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8535,
											"end": 8548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8535,
											"end": 8548,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8535,
											"end": 8544,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 8535,
											"end": 8548,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8535,
											"end": 8548,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8535,
											"end": 8548,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8535,
											"end": 8548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8535,
											"end": 8548,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8535,
											"end": 8557,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8535,
											"end": 8557,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8535,
											"end": 8557,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8535,
											"end": 8557,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8535,
											"end": 8557,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8535,
											"end": 8557,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8162,
											"end": 8582,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 8162,
											"end": 8582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8612,
											"end": 8614,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8597,
											"end": 8622,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8606,
											"end": 8610,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8597,
											"end": 8622,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8597,
											"end": 8622,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8616,
											"end": 8621,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8597,
											"end": 8622,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8597,
											"end": 8622,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8597,
											"end": 8622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 8597,
											"end": 8622,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8597,
											"end": 8622,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 8597,
											"end": 8622,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8597,
											"end": 8622,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8597,
											"end": 8622,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8597,
											"end": 8622,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8597,
											"end": 8622,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8597,
											"end": 8622,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8597,
											"end": 8622,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8597,
											"end": 8622,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 8629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 8629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 8629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 8629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 562,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 14,
											"end": 562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 298,
											"end": 301,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 483,
											"end": 484,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 480,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 475,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 458,
											"end": 467,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 454,
											"end": 476,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 450,
											"end": 481,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 443,
											"end": 485,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 553,
											"end": 555,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 548,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 542,
											"end": 549,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 537,
											"end": 539,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 529,
											"end": 535,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 525,
											"end": 540,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 521,
											"end": 550,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 506,
											"end": 551,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 502,
											"end": 556,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 494,
											"end": 556,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 567,
											"end": 740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 635,
											"end": 655,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 635,
											"end": 655,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 674,
											"end": 716,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 674,
											"end": 716,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 664,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 730,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 728,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 720,
											"end": 732,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 745,
											"end": 999,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 745,
											"end": 999,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 813,
											"end": 819,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 827,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 874,
											"end": 876,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 871,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 853,
											"end": 860,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 849,
											"end": 872,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 845,
											"end": 877,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 842,
											"end": 894,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 842,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 890,
											"end": 891,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 888,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 880,
											"end": 892,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 842,
											"end": 894,
											"name": "tag",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 932,
											"end": 941,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 913,
											"end": 942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 913,
											"end": 942,
											"name": "tag",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 913,
											"end": 942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 903,
											"end": 942,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 974,
											"end": 992,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 961,
											"end": 993,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 961,
											"end": 993,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 745,
											"end": 999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1564,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1378,
											"end": 1564,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1437,
											"end": 1443,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1490,
											"end": 1492,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1478,
											"end": 1487,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1469,
											"end": 1476,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1461,
											"end": 1493,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1510,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1510,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 1458,
											"end": 1510,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1506,
											"end": 1507,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1503,
											"end": 1504,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1496,
											"end": 1508,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1510,
											"name": "tag",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 1458,
											"end": 1510,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1558,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 1548,
											"end": 1557,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1558,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 1529,
											"end": 1558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1558,
											"name": "tag",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 1529,
											"end": 1558,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1519,
											"end": 1558,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1564,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1378,
											"end": 1564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1569,
											"end": 1897,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1569,
											"end": 1897,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1652,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1654,
											"end": 1660,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1662,
											"end": 1668,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1715,
											"end": 1717,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1703,
											"end": 1712,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1694,
											"end": 1701,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1690,
											"end": 1713,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1686,
											"end": 1718,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1683,
											"end": 1735,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1683,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 1683,
											"end": 1735,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1731,
											"end": 1732,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1728,
											"end": 1729,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1721,
											"end": 1733,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1683,
											"end": 1735,
											"name": "tag",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 1683,
											"end": 1735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 1773,
											"end": 1782,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 1754,
											"end": 1783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1783,
											"name": "tag",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 1754,
											"end": 1783,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1783,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1783,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1802,
											"end": 1840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 1836,
											"end": 1838,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1825,
											"end": 1834,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1821,
											"end": 1839,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1802,
											"end": 1840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 1802,
											"end": 1840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1802,
											"end": 1840,
											"name": "tag",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 1802,
											"end": 1840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 1840,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 1840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 1889,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1876,
											"end": 1885,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 1890,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1859,
											"end": 1891,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1891,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1569,
											"end": 1897,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1569,
											"end": 1897,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1569,
											"end": 1897,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1569,
											"end": 1897,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1569,
											"end": 1897,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1569,
											"end": 1897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2299,
											"end": 2559,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 2299,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2373,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2381,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2428,
											"end": 2430,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2416,
											"end": 2425,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2407,
											"end": 2414,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2403,
											"end": 2426,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 2431,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2396,
											"end": 2448,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2396,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 2396,
											"end": 2448,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2444,
											"end": 2445,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2441,
											"end": 2442,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2396,
											"end": 2448,
											"name": "tag",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 2396,
											"end": 2448,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2467,
											"end": 2496,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 2486,
											"end": 2495,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2467,
											"end": 2496,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 2467,
											"end": 2496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2467,
											"end": 2496,
											"name": "tag",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 2467,
											"end": 2496,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2457,
											"end": 2496,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2457,
											"end": 2496,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2515,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 2549,
											"end": 2551,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2538,
											"end": 2547,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 2552,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2515,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 2515,
											"end": 2553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2515,
											"end": 2553,
											"name": "tag",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 2515,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2553,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2553,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2299,
											"end": 2559,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2299,
											"end": 2559,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2299,
											"end": 2559,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2299,
											"end": 2559,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2299,
											"end": 2559,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2299,
											"end": 2559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2564,
											"end": 2944,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 2564,
											"end": 2944,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2643,
											"end": 2644,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2639,
											"end": 2651,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2651,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2651,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2651,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2686,
											"end": 2698,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2686,
											"end": 2698,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2686,
											"end": 2698,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 2707,
											"end": 2768,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2765,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 2753,
											"end": 2759,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2749,
											"end": 2766,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2739,
											"end": 2766,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2739,
											"end": 2766,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2768,
											"name": "tag",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 2707,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2814,
											"end": 2816,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2806,
											"end": 2812,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2803,
											"end": 2817,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2783,
											"end": 2801,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2780,
											"end": 2818,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2777,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 2777,
											"end": 2938,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2860,
											"end": 2870,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2855,
											"end": 2858,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2851,
											"end": 2871,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2848,
											"end": 2849,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2841,
											"end": 2872,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 2899,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2892,
											"end": 2893,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2885,
											"end": 2900,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2923,
											"end": 2927,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2920,
											"end": 2921,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2913,
											"end": 2928,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2777,
											"end": 2938,
											"name": "tag",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 2777,
											"end": 2938,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2777,
											"end": 2938,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2564,
											"end": 2944,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2564,
											"end": 2944,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2564,
											"end": 2944,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2564,
											"end": 2944,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2949,
											"end": 3304,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 2949,
											"end": 3304,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3151,
											"end": 3153,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3133,
											"end": 3154,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3133,
											"end": 3154,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3133,
											"end": 3154,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3190,
											"end": 3192,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3170,
											"end": 3188,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3170,
											"end": 3188,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3170,
											"end": 3188,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3163,
											"end": 3193,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3229,
											"end": 3262,
											"name": "PUSH",
											"source": 1,
											"value": "436F6E74726163742069732050417573656420427920746865204F776E657200"
										},
										{
											"begin": 3224,
											"end": 3226,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3209,
											"end": 3227,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3209,
											"end": 3227,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3295,
											"end": 3297,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3280,
											"end": 3298,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3280,
											"end": 3298,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2949,
											"end": 3304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3309,
											"end": 3652,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 3309,
											"end": 3652,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3511,
											"end": 3513,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3493,
											"end": 3514,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3514,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3514,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3550,
											"end": 3552,
											"name": "PUSH",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 3530,
											"end": 3548,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3530,
											"end": 3548,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3530,
											"end": 3548,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3523,
											"end": 3553,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20B2323932B9B99034B990333932B2BD32B21"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3584,
											"end": 3586,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3569,
											"end": 3587,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3569,
											"end": 3587,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3562,
											"end": 3611,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3643,
											"end": 3645,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3628,
											"end": 3646,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3628,
											"end": 3646,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3309,
											"end": 3652,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 4004,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 3657,
											"end": 4004,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3859,
											"end": 3861,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3841,
											"end": 3862,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3841,
											"end": 3862,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3841,
											"end": 3862,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3898,
											"end": 3900,
											"name": "PUSH",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3878,
											"end": 3896,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3878,
											"end": 3896,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3878,
											"end": 3896,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3871,
											"end": 3901,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3937,
											"end": 3962,
											"name": "PUSH",
											"source": 1,
											"value": "4F6E6C79204F776E657220636F6E206163746976617465000000000000000000"
										},
										{
											"begin": 3932,
											"end": 3934,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3917,
											"end": 3935,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3917,
											"end": 3935,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3910,
											"end": 3963,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3995,
											"end": 3997,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3980,
											"end": 3998,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3980,
											"end": 3998,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 4004,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4009,
											"end": 4422,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 4009,
											"end": 4422,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4211,
											"end": 4213,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4193,
											"end": 4214,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4193,
											"end": 4214,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4193,
											"end": 4214,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4250,
											"end": 4252,
											"name": "PUSH",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4230,
											"end": 4248,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4230,
											"end": 4248,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4230,
											"end": 4248,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4223,
											"end": 4253,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4289,
											"end": 4323,
											"name": "PUSH",
											"source": 1,
											"value": "5472616E666572206973206E6F7420616C6C6F77656420746F2075736572206F"
										},
										{
											"begin": 4284,
											"end": 4286,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4269,
											"end": 4287,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4269,
											"end": 4287,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4262,
											"end": 4324,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B9B1E4813DDDB995C8818D85B881CD95D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4355,
											"end": 4357,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4340,
											"end": 4358,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4340,
											"end": 4358,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4333,
											"end": 4380,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4412,
											"end": 4415,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 4397,
											"end": 4416,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4397,
											"end": 4416,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4009,
											"end": 4422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4427,
											"end": 4649,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 4427,
											"end": 4649,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4492,
											"end": 4501,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4492,
											"end": 4501,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4492,
											"end": 4501,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4513,
											"end": 4523,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4513,
											"end": 4523,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4513,
											"end": 4523,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4510,
											"end": 4643,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4510,
											"end": 4643,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 4510,
											"end": 4643,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4565,
											"end": 4575,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 4560,
											"end": 4563,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 4556,
											"end": 4576,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 4553,
											"end": 4554,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4546,
											"end": 4577,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4600,
											"end": 4604,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 4597,
											"end": 4598,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4590,
											"end": 4605,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4628,
											"end": 4632,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4625,
											"end": 4626,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4618,
											"end": 4633,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"TokenSGTX/contracts/SGTX.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"FreezeAddress(address)": "1aa66049",
							"Pause()": "6985a022",
							"TranferOwner(address)": "b8f309c7",
							"UnFreezeAddress(address)": "91e2c315",
							"_balances(address)": "6ebcf607",
							"_freeze(address)": "7c77db72",
							"_holders(address)": "eb1d8152",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"freeTranfer()": "1d4ca8bf",
							"increaseAllowance(address,uint256)": "39509351",
							"isFreezed(address)": "8111f24e",
							"isPaused()": "b187bd26",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"unFreeTransfer()": "d6b70ac0",
							"unPause()": "f7b188a5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"supply_\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals_\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"currentOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"timeStamp\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"freeTranfer\",\"type\":\"bool\"}],\"name\":\"FreeTranfered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"currentOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"timeStamp\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"}],\"name\":\"FreezeAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Pause\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"TranferOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"}],\"name\":\"UnFreezeAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_freeze\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_holders\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"freeTranfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"}],\"name\":\"isFreezed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unFreeTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unPause\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TokenSGTX/contracts/SGTX.sol\":\"SigatTokenX\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"TokenSGTX/contracts/SGTX.sol\":{\"keccak256\":\"0xa401ceaa32aade5045597bbef0ead0641685fb5be7f7be62601bc553dacc1015\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://956e79cbd5c59fd4ed6d04335839fb9a33872da8b70fd659b528710a133df903\",\"dweb:/ipfs/QmVAwsEjS6gHGz8FpvEJFWrysgJkzkoaQn2pjdDBmAvCFf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 121,
								"contract": "TokenSGTX/contracts/SGTX.sol:SigatTokenX",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 123,
								"contract": "TokenSGTX/contracts/SGTX.sol:SigatTokenX",
								"label": "_name",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 125,
								"contract": "TokenSGTX/contracts/SGTX.sol:SigatTokenX",
								"label": "_symbol",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 127,
								"contract": "TokenSGTX/contracts/SGTX.sol:SigatTokenX",
								"label": "_supply",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 129,
								"contract": "TokenSGTX/contracts/SGTX.sol:SigatTokenX",
								"label": "_decimals",
								"offset": 0,
								"slot": "4",
								"type": "t_uint8"
							},
							{
								"astId": 131,
								"contract": "TokenSGTX/contracts/SGTX.sol:SigatTokenX",
								"label": "_paused",
								"offset": 1,
								"slot": "4",
								"type": "t_bool"
							},
							{
								"astId": 133,
								"contract": "TokenSGTX/contracts/SGTX.sol:SigatTokenX",
								"label": "_freeTranfer",
								"offset": 2,
								"slot": "4",
								"type": "t_bool"
							},
							{
								"astId": 137,
								"contract": "TokenSGTX/contracts/SGTX.sol:SigatTokenX",
								"label": "_balances",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 141,
								"contract": "TokenSGTX/contracts/SGTX.sol:SigatTokenX",
								"label": "_holders",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 145,
								"contract": "TokenSGTX/contracts/SGTX.sol:SigatTokenX",
								"label": "_freeze",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 151,
								"contract": "TokenSGTX/contracts/SGTX.sol:SigatTokenX",
								"label": "_allowances",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "6321",
				"formattedMessage": "Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n   --> TokenSGTX/contracts/SGTX.sol:338:39:\n    |\n338 |     ) public virtual isOwner returns (address) {\n    |                                       ^^^^^^^\n\n",
				"message": "Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 10596,
					"file": "TokenSGTX/contracts/SGTX.sol",
					"start": 10589
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "6321",
				"formattedMessage": "Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n   --> TokenSGTX/contracts/SGTX.sol:354:48:\n    |\n354 |     function unPause() public isOwner returns (bool) {\n    |                                                ^^^^\n\n",
				"message": "Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 11125,
					"file": "TokenSGTX/contracts/SGTX.sol",
					"start": 11121
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "6321",
				"formattedMessage": "Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n   --> TokenSGTX/contracts/SGTX.sol:371:55:\n    |\n371 |     function unFreeTransfer() public isOwner returns (bool) {\n    |                                                       ^^^^\n\n",
				"message": "Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 11745,
					"file": "TokenSGTX/contracts/SGTX.sol",
					"start": 11741
				},
				"type": "Warning"
			}
		],
		"sources": {
			"TokenSGTX/contracts/SGTX.sol": {
				"ast": {
					"absolutePath": "TokenSGTX/contracts/SGTX.sol",
					"exportedSymbols": {
						"IERC20": [
							115
						],
						"IERC20Errors": [
							40
						],
						"SigatTokenX": [
							854
						]
					},
					"id": 855,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": true,
							"id": 40,
							"linearizedBaseContracts": [
								40
							],
							"name": "IERC20Errors",
							"nameLocation": "202:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "221:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 10,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "541:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "574:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "566:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "566:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "590:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "582:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "582:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "607:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "599:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 7,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "599:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "565:49:0"
									},
									"src": "535:80:0"
								},
								{
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "621:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 15,
									"name": "ERC20InvalidSender",
									"nameLocation": "784:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "811:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "803:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 12,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:16:0"
									},
									"src": "778:41:0"
								},
								{
									"documentation": {
										"id": 16,
										"nodeType": "StructuredDocumentation",
										"src": "825:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 20,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "995:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1024:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1016:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 17,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1016:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1015:18:0"
									},
									"src": "989:45:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "1040:345:0",
										"text": " @dev Indicates a failure with the `spender`â€™s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 29,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1396:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1431:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "1423:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 22,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1423:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1448:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "1440:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1467:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "1459:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1422:52:0"
									},
									"src": "1390:85:0"
								},
								{
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "1481:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 34,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1666:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1695:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "1687:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 31,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1687:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1686:18:0"
									},
									"src": "1660:45:0"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "1711:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 39,
									"name": "ERC20InvalidSpender",
									"nameLocation": "1917:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1945:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "1937:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1937:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1936:17:0"
									},
									"src": "1911:43:0"
								}
							],
							"scope": 855,
							"src": "192:1764:0",
							"usedErrors": [
								10,
								15,
								20,
								29,
								34,
								39
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 115,
							"linearizedBaseContracts": [
								115
							],
							"name": "IERC20",
							"nameLocation": "1968:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1981:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 49,
									"name": "Transfer",
									"nameLocation": "2150:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2175:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "2159:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 42,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2159:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 45,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2197:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "2181:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2181:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 47,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2209:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "2201:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 46,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2201:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2158:57:0"
									},
									"src": "2144:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 50,
										"nodeType": "StructuredDocumentation",
										"src": "2222:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 58,
									"name": "Approval",
									"nameLocation": "2381:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2406:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2390:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 51,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2390:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 54,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2429:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2413:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2413:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2446:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2438:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 55,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2438:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2389:63:0"
									},
									"src": "2375:78:0"
								},
								{
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "2459:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2538:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2549:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2575:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 61,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2575:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2574:9:0"
									},
									"scope": 115,
									"src": "2529:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2590:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 72,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2675:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2693:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "2685:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2685:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2684:17:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "2725:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 69,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2724:9:0"
									},
									"scope": 115,
									"src": "2666:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 73,
										"nodeType": "StructuredDocumentation",
										"src": "2740:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 82,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "2967:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2984:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "2976:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2976:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2996:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "2988:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2988:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2975:27:0"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "3021:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 79,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3021:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3020:6:0"
									},
									"scope": 115,
									"src": "2958:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 83,
										"nodeType": "StructuredDocumentation",
										"src": "3033:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 92,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3311:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3329:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "3321:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3321:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3344:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "3336:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3336:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3320:32:0"
									},
									"returnParameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "3376:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 89,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3376:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3375:9:0"
									},
									"scope": 115,
									"src": "3302:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "3391:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 102,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4072:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4088:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "4080:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4080:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4105:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "4097:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4097:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4079:32:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "4130:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 99,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4130:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4129:6:0"
									},
									"scope": 115,
									"src": "4063:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 103,
										"nodeType": "StructuredDocumentation",
										"src": "4142:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 114,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4453:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4474:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "4466:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4488:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "4480:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4480:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4500:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "4492:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4492:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4465:41:0"
									},
									"returnParameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "4525:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 111,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4525:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4524:6:0"
									},
									"scope": 115,
									"src": "4444:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 855,
							"src": "1958:2575:0",
							"usedErrors": [],
							"usedEvents": [
								49,
								58
							]
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 116,
										"name": "IERC20",
										"nameLocations": [
											"4560:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 115,
										"src": "4560:6:0"
									},
									"id": 117,
									"nodeType": "InheritanceSpecifier",
									"src": "4560:6:0"
								},
								{
									"baseName": {
										"id": 118,
										"name": "IERC20Errors",
										"nameLocations": [
											"4568:12:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 40,
										"src": "4568:12:0"
									},
									"id": 119,
									"nodeType": "InheritanceSpecifier",
									"src": "4568:12:0"
								}
							],
							"canonicalName": "SigatTokenX",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 854,
							"linearizedBaseContracts": [
								854,
								40,
								115
							],
							"name": "SigatTokenX",
							"nameLocation": "4545:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 121,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "4603:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 854,
									"src": "4587:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 120,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "4587:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 123,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "4630:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 854,
									"src": "4615:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 122,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "4615:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 125,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "4656:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 854,
									"src": "4641:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 124,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "4641:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 127,
									"mutability": "mutable",
									"name": "_supply",
									"nameLocation": "4685:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 854,
									"src": "4669:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 126,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4669:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 129,
									"mutability": "mutable",
									"name": "_decimals",
									"nameLocation": "4712:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 854,
									"src": "4698:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 128,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "4698:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 131,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "4740:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 854,
									"src": "4727:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 130,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "4727:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 133,
									"mutability": "mutable",
									"name": "_freeTranfer",
									"nameLocation": "4766:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 854,
									"src": "4753:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 132,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "4753:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "6ebcf607",
									"id": 137,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "4820:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 854,
									"src": "4785:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 136,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 134,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4793:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4785:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 135,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4804:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "eb1d8152",
									"id": 141,
									"mutability": "mutable",
									"name": "_holders",
									"nameLocation": "4867:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 854,
									"src": "4835:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 140,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 138,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4843:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4835:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 139,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "4854:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7c77db72",
									"id": 145,
									"mutability": "mutable",
									"name": "_freeze",
									"nameLocation": "4913:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 854,
									"src": "4881:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 144,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 142,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4889:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4881:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 143,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "4900:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 151,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "4982:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 854,
									"src": "4926:67:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 150,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 146,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4934:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4926:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 149,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 147,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4953:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "4945:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 148,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4964:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "cd52c664c2010b8cb55e5d2ea0ae5add4a5b0460cfafc8af4af80f5bee1032ca",
									"id": 159,
									"name": "Paused",
									"nameLocation": "5006:6:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"indexed": true,
												"mutability": "mutable",
												"name": "currentOwner",
												"nameLocation": "5038:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "5022:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5022:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"indexed": true,
												"mutability": "mutable",
												"name": "timeStamp",
												"nameLocation": "5076:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "5060:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"indexed": true,
												"mutability": "mutable",
												"name": "paused",
												"nameLocation": "5108:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "5095:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 156,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5095:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5012:108:0"
									},
									"src": "5000:121:0"
								},
								{
									"anonymous": false,
									"eventSelector": "01184061675848e328fb316abfd3f046f1cae4fb526dc24d09bdaa92e3921217",
									"id": 167,
									"name": "FreeTranfered",
									"nameLocation": "5132:13:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"indexed": true,
												"mutability": "mutable",
												"name": "currentOwner",
												"nameLocation": "5171:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "5155:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5155:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"indexed": true,
												"mutability": "mutable",
												"name": "timeStamp",
												"nameLocation": "5209:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "5193:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5193:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"indexed": true,
												"mutability": "mutable",
												"name": "freeTranfer",
												"nameLocation": "5241:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "5228:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 164,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5228:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5145:113:0"
									},
									"src": "5126:133:0"
								},
								{
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "5393:240:0",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 178,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 121,
														"src": "5403:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 179,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "5412:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 180,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5416:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "5412:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5403:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "5403:19:0"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_supply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 127,
														"src": "5432:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "supply_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 173,
														"src": "5442:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5432:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "5432:17:0"
											},
											{
												"expression": {
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 187,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "5459:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 188,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "5467:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "5459:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 190,
												"nodeType": "ExpressionStatement",
												"src": "5459:13:0"
											},
											{
												"expression": {
													"id": 193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 191,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 125,
														"src": "5482:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 192,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5492:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "5482:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 194,
												"nodeType": "ExpressionStatement",
												"src": "5482:17:0"
											},
											{
												"expression": {
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 195,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "5509:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 196,
														"name": "decimals_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "5521:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "5509:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 198,
												"nodeType": "ExpressionStatement",
												"src": "5509:21:0"
											},
											{
												"expression": {
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 199,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 131,
														"src": "5540:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 200,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5550:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "5540:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 202,
												"nodeType": "ExpressionStatement",
												"src": "5540:15:0"
											},
											{
												"expression": {
													"id": 205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 203,
														"name": "_freeTranfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "5565:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 204,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5580:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "5565:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 206,
												"nodeType": "ExpressionStatement",
												"src": "5565:20:0"
											},
											{
												"expression": {
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 207,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 137,
															"src": "5595:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 210,
														"indexExpression": {
															"expression": {
																"id": 208,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5605:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5609:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5605:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5595:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 211,
														"name": "_supply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 127,
														"src": "5619:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5595:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 213,
												"nodeType": "ExpressionStatement",
												"src": "5595:31:0"
											}
										]
									},
									"id": 215,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "5300:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "5286:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 168,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5286:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "5329:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "5315:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 170,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5315:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "supply_",
												"nameLocation": "5354:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "5346:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5346:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "decimals_",
												"nameLocation": "5377:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "5371:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 174,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5371:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5276:116:0"
									},
									"returnParameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5393:0:0"
									},
									"scope": 854,
									"src": "5265:368:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										64
									],
									"body": {
										"id": 222,
										"nodeType": "Block",
										"src": "5692:31:0",
										"statements": [
											{
												"expression": {
													"id": 220,
													"name": "_supply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 127,
													"src": "5709:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 219,
												"id": 221,
												"nodeType": "Return",
												"src": "5702:14:0"
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 223,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "5648:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5659:2:0"
									},
									"returnParameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "5683:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5683:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5682:9:0"
									},
									"scope": 854,
									"src": "5639:84:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										72
									],
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "5795:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 230,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 137,
														"src": "5812:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 232,
													"indexExpression": {
														"id": 231,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "5822:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5812:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 229,
												"id": 233,
												"nodeType": "Return",
												"src": "5805:25:0"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "5738:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5756:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "5748:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5748:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5747:17:0"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "5786:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5786:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5785:9:0"
									},
									"scope": 854,
									"src": "5729:108:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										82
									],
									"body": {
										"id": 271,
										"nodeType": "Block",
										"src": "5957:239:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 252,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 249,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "5988:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5992:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "5988:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 251,
																	"name": "_owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 121,
																	"src": "6002:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5988:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"id": 253,
																"name": "_freeTranfer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 133,
																"src": "6012:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5988:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e666572206973206e6f7420616c6c6f77656420746f2075736572206f6e6c79204f776e65722063616e20736574",
															"id": 255,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6038:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_975596aa8809061341563460bef71b4b93fbd02a33f75eafae8d6e8a663c3ce7",
																"typeString": "literal_string \"Tranfer is not allowed to user only Owner can set\""
															},
															"value": "Tranfer is not allowed to user only Owner can set"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_975596aa8809061341563460bef71b4b93fbd02a33f75eafae8d6e8a663c3ce7",
																"typeString": "literal_string \"Tranfer is not allowed to user only Owner can set\""
															}
														],
														"id": 248,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5967:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5967:132:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "5967:132:0"
											},
											{
												"assignments": [
													259
												],
												"declarations": [
													{
														"constant": false,
														"id": 259,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "6117:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 271,
														"src": "6109:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 258,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6109:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 262,
												"initialValue": {
													"expression": {
														"id": 260,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "6124:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6128:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "6124:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6109:25:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 264,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "6152:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 265,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "6158:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 266,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "6162:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 263,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 508,
														"src": "6144:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6144:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 268,
												"nodeType": "ExpressionStatement",
												"src": "6144:24:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6185:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 247,
												"id": 270,
												"nodeType": "Return",
												"src": "6178:11:0"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 272,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 242,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 241,
												"name": "RPaused",
												"nameLocations": [
													"5925:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 676,
												"src": "5925:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5925:7:0"
										},
										{
											"id": 244,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 243,
												"name": "isFreeze",
												"nameLocations": [
													"5933:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 690,
												"src": "5933:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5933:8:0"
										}
									],
									"name": "transfer",
									"nameLocation": "5852:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5878:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "5870:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5870:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5898:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "5890:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5890:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5860:49:0"
									},
									"returnParameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "5951:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 245,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5951:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5950:6:0"
									},
									"scope": 854,
									"src": "5843:353:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 317,
										"nodeType": "Block",
										"src": "6271:231:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 281,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 274,
														"src": "6285:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6301:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 283,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6293:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 282,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6293:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 285,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6293:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6285:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 295,
												"nodeType": "IfStatement",
												"src": "6281:86:0",
												"trueBody": {
													"id": 294,
													"nodeType": "Block",
													"src": "6305:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 290,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6353:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 289,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6345:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 288,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6345:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 291,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6345:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 287,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "6326:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 292,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6326:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 293,
															"nodeType": "RevertStatement",
															"src": "6319:37:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 296,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 276,
														"src": "6380:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 299,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6394:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 298,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6386:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 297,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6386:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 300,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6386:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6380:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 310,
												"nodeType": "IfStatement",
												"src": "6376:86:0",
												"trueBody": {
													"id": 309,
													"nodeType": "Block",
													"src": "6398:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 305,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6448:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 304,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6440:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 303,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6440:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 306,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6440:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 302,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 20,
																	"src": "6419:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 307,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6419:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 308,
															"nodeType": "RevertStatement",
															"src": "6412:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 312,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "6479:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 313,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "6485:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 314,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 278,
															"src": "6489:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 311,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 508,
														"src": "6471:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6471:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 316,
												"nodeType": "ExpressionStatement",
												"src": "6471:24:0"
											}
										]
									},
									"id": 318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "6211:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6229:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "6221:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6221:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6243:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "6235:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6235:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6255:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "6247:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6247:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6220:41:0"
									},
									"returnParameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6271:0:0"
									},
									"scope": 854,
									"src": "6202:300:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										102
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "6626:180:0",
										"statements": [
											{
												"assignments": [
													332
												],
												"declarations": [
													{
														"constant": false,
														"id": 332,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6644:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 353,
														"src": "6636:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 331,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6636:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 335,
												"initialValue": {
													"expression": {
														"id": 333,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "6652:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6656:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "6652:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6636:26:0"
											},
											{
												"condition": {
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6676:13:0",
													"subExpression": {
														"id": 336,
														"name": "_freeTranfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "6677:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 343,
												"nodeType": "IfStatement",
												"src": "6672:60:0",
												"trueBody": {
													"id": 342,
													"nodeType": "Block",
													"src": "6691:41:0",
													"statements": [
														{
															"expression": {
																"id": 340,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 338,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 320,
																	"src": "6705:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 339,
																	"name": "_owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 121,
																	"src": "6715:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6705:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 341,
															"nodeType": "ExpressionStatement",
															"src": "6705:16:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 345,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "6750:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 346,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 320,
															"src": "6757:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 347,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 322,
															"src": "6766:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 348,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6773:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 344,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 630,
														"src": "6741:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6741:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 350,
												"nodeType": "ExpressionStatement",
												"src": "6741:37:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 351,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6795:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 330,
												"id": 352,
												"nodeType": "Return",
												"src": "6788:11:0"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 325,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 324,
												"name": "RPaused",
												"nameLocations": [
													"6594:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 676,
												"src": "6594:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "6594:7:0"
										},
										{
											"id": 327,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 326,
												"name": "isFreeze",
												"nameLocations": [
													"6602:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 690,
												"src": "6602:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "6602:8:0"
										}
									],
									"name": "approve",
									"nameLocation": "6517:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6542:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "6534:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6534:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6567:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "6559:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6559:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6524:54:0"
									},
									"returnParameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "6620:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 328,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6620:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6619:6:0"
									},
									"scope": 854,
									"src": "6508:298:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "6945:144:0",
										"statements": [
											{
												"assignments": [
													368
												],
												"declarations": [
													{
														"constant": false,
														"id": 368,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6963:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 386,
														"src": "6955:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 367,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6955:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 371,
												"initialValue": {
													"expression": {
														"id": 369,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "6971:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6975:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "6971:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6955:26:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 373,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "7000:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 374,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 356,
															"src": "7007:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 376,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 368,
																		"src": "7026:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 377,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 356,
																		"src": "7033:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 375,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 571,
																	"src": "7016:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 378,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7016:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 379,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 358,
																"src": "7044:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7016:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7056:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 372,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 630,
														"src": "6991:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6991:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 383,
												"nodeType": "ExpressionStatement",
												"src": "6991:70:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7078:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 366,
												"id": 385,
												"nodeType": "Return",
												"src": "7071:11:0"
											}
										]
									},
									"functionSelector": "39509351",
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 361,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 360,
												"name": "RPaused",
												"nameLocations": [
													"6913:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 676,
												"src": "6913:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "6913:7:0"
										},
										{
											"id": 363,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 362,
												"name": "isFreeze",
												"nameLocations": [
													"6921:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 690,
												"src": "6921:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "6921:8:0"
										}
									],
									"name": "increaseAllowance",
									"nameLocation": "6821:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6856:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "6848:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6848:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "6881:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "6873:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6873:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6838:59:0"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "6939:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 364,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6939:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6938:6:0"
									},
									"scope": 854,
									"src": "6812:277:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										114
									],
									"body": {
										"id": 431,
										"nodeType": "Block",
										"src": "7235:291:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 406,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 403,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "7266:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 404,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7270:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "7266:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 405,
																	"name": "_owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 121,
																	"src": "7280:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7266:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"id": 407,
																"name": "_freeTranfer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 133,
																"src": "7290:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "7266:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e666572206973206e6f7420616c6c6f77656420746f2075736572206f6e6c79204f776e65722063616e20736574",
															"id": 409,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7316:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_975596aa8809061341563460bef71b4b93fbd02a33f75eafae8d6e8a663c3ce7",
																"typeString": "literal_string \"Tranfer is not allowed to user only Owner can set\""
															},
															"value": "Tranfer is not allowed to user only Owner can set"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_975596aa8809061341563460bef71b4b93fbd02a33f75eafae8d6e8a663c3ce7",
																"typeString": "literal_string \"Tranfer is not allowed to user only Owner can set\""
															}
														],
														"id": 402,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7245:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7245:132:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 411,
												"nodeType": "ExpressionStatement",
												"src": "7245:132:0"
											},
											{
												"assignments": [
													413
												],
												"declarations": [
													{
														"constant": false,
														"id": 413,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "7395:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 431,
														"src": "7387:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 412,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7387:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 416,
												"initialValue": {
													"expression": {
														"id": 414,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "7405:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7409:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "7405:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7387:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 418,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "7441:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 419,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "7447:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 420,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "7456:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 417,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 555,
														"src": "7425:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7425:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 422,
												"nodeType": "ExpressionStatement",
												"src": "7425:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 424,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "7482:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 425,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "7488:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 426,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "7492:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 423,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 318,
														"src": "7472:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7472:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 428,
												"nodeType": "ExpressionStatement",
												"src": "7472:26:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7515:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 401,
												"id": 430,
												"nodeType": "Return",
												"src": "7508:11:0"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 432,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 396,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 395,
												"name": "RPaused",
												"nameLocations": [
													"7203:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 676,
												"src": "7203:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "7203:7:0"
										},
										{
											"id": 398,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 397,
												"name": "isFreeze",
												"nameLocations": [
													"7211:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 690,
												"src": "7211:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "7211:8:0"
										}
									],
									"name": "transferFrom",
									"nameLocation": "7104:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7134:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "7126:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 388,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7126:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7156:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "7148:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 390,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7148:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7176:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "7168:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7168:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7116:71:0"
									},
									"returnParameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "7229:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 399,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7229:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7228:6:0"
									},
									"scope": 854,
									"src": "7095:431:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 507,
										"nodeType": "Block",
										"src": "7607:1022:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 441,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 434,
														"src": "7621:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 444,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7637:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 443,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7629:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 442,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7629:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 445,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7629:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7621:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 478,
													"nodeType": "Block",
													"src": "7790:362:0",
													"statements": [
														{
															"assignments": [
																453
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 453,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "7812:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 478,
																	"src": "7804:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 452,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7804:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 457,
															"initialValue": {
																"baseExpression": {
																	"id": 454,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 137,
																	"src": "7826:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 456,
																"indexExpression": {
																	"id": 455,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 434,
																	"src": "7836:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7826:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7804:37:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 460,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 458,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 453,
																	"src": "7859:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 459,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 438,
																	"src": "7873:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7859:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 468,
															"nodeType": "IfStatement",
															"src": "7855:115:0",
															"trueBody": {
																"id": 467,
																"nodeType": "Block",
																"src": "7880:90:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 462,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 434,
																					"src": "7930:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 463,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 453,
																					"src": "7936:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 464,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 438,
																					"src": "7949:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 461,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 10,
																				"src": "7905:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 465,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7905:50:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 466,
																		"nodeType": "RevertStatement",
																		"src": "7898:57:0"
																	}
																]
															}
														},
														{
															"id": 477,
															"nodeType": "UncheckedBlock",
															"src": "7983:159:0",
															"statements": [
																{
																	"expression": {
																		"id": 475,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 469,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 137,
																				"src": "8090:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 471,
																			"indexExpression": {
																				"id": 470,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 434,
																				"src": "8100:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "8090:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 472,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 453,
																				"src": "8108:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 473,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 438,
																				"src": "8122:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8108:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8090:37:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 476,
																	"nodeType": "ExpressionStatement",
																	"src": "8090:37:0"
																}
															]
														}
													]
												},
												"id": 479,
												"nodeType": "IfStatement",
												"src": "7617:535:0",
												"trueBody": {
													"id": 451,
													"nodeType": "Block",
													"src": "7641:143:0",
													"statements": [
														{
															"expression": {
																"id": 449,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 447,
																	"name": "_supply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 127,
																	"src": "7757:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 448,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 438,
																	"src": "7768:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7757:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 450,
															"nodeType": "ExpressionStatement",
															"src": "7757:16:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 480,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 436,
														"src": "8166:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8180:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 482,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8172:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 481,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8172:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 484,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8172:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8166:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 499,
													"nodeType": "Block",
													"src": "8376:206:0",
													"statements": [
														{
															"id": 498,
															"nodeType": "UncheckedBlock",
															"src": "8390:182:0",
															"statements": [
																{
																	"expression": {
																		"id": 496,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 492,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 137,
																				"src": "8535:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 494,
																			"indexExpression": {
																				"id": 493,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 436,
																				"src": "8545:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "8535:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 495,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 438,
																			"src": "8552:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8535:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 497,
																	"nodeType": "ExpressionStatement",
																	"src": "8535:22:0"
																}
															]
														}
													]
												},
												"id": 500,
												"nodeType": "IfStatement",
												"src": "8162:420:0",
												"trueBody": {
													"id": 491,
													"nodeType": "Block",
													"src": "8184:186:0",
													"statements": [
														{
															"id": 490,
															"nodeType": "UncheckedBlock",
															"src": "8198:162:0",
															"statements": [
																{
																	"expression": {
																		"id": 488,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 486,
																			"name": "_supply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 127,
																			"src": "8329:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 487,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 438,
																			"src": "8340:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8329:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 489,
																	"nodeType": "ExpressionStatement",
																	"src": "8329:16:0"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 502,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 434,
															"src": "8606:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 503,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 436,
															"src": "8612:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 504,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "8616:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 501,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 49,
														"src": "8597:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8597:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 506,
												"nodeType": "EmitStatement",
												"src": "8592:30:0"
											}
										]
									},
									"id": 508,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "7541:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7557:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "7549:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7549:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7571:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "7563:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7563:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7583:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "7575:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7575:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7548:41:0"
									},
									"returnParameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7607:0:0"
									},
									"scope": 854,
									"src": "7532:1097:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 554,
										"nodeType": "Block",
										"src": "8754:466:0",
										"statements": [
											{
												"assignments": [
													518
												],
												"declarations": [
													{
														"constant": false,
														"id": 518,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "8772:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 554,
														"src": "8764:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 517,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8764:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 523,
												"initialValue": {
													"arguments": [
														{
															"id": 520,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "8801:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 521,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "8808:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 519,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 571,
														"src": "8791:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8791:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8764:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 524,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 518,
														"src": "8830:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 527,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8855:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 526,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "8855:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 525,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8850:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 528,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8850:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 529,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8864:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8850:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8830:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 553,
												"nodeType": "IfStatement",
												"src": "8826:388:0",
												"trueBody": {
													"id": 552,
													"nodeType": "Block",
													"src": "8869:345:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 533,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 531,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 518,
																	"src": "8887:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 532,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 514,
																	"src": "8906:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8887:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 541,
															"nodeType": "IfStatement",
															"src": "8883:208:0",
															"trueBody": {
																"id": 540,
																"nodeType": "Block",
																"src": "8913:178:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 535,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 512,
																					"src": "8986:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 536,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 518,
																					"src": "9015:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 537,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 514,
																					"src": "9053:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 534,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 29,
																				"src": "8938:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 538,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8938:138:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 539,
																		"nodeType": "RevertStatement",
																		"src": "8931:145:0"
																	}
																]
															}
														},
														{
															"id": 551,
															"nodeType": "UncheckedBlock",
															"src": "9104:100:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 543,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 510,
																				"src": "9141:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 544,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 512,
																				"src": "9148:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 547,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 545,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 518,
																					"src": "9157:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 546,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 514,
																					"src": "9176:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9157:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 548,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9183:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 542,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 630,
																			"src": "9132:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 549,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9132:57:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 550,
																	"nodeType": "ExpressionStatement",
																	"src": "9132:57:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"id": 555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "8644:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8677:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "8669:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8669:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8700:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "8692:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8692:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8725:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "8717:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8717:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8659:77:0"
									},
									"returnParameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8754:0:0"
									},
									"scope": 854,
									"src": "8635:585:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										92
									],
									"body": {
										"id": 570,
										"nodeType": "Block",
										"src": "9337:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 564,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "9354:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 566,
														"indexExpression": {
															"id": 565,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 557,
															"src": "9366:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9354:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 568,
													"indexExpression": {
														"id": 567,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 559,
														"src": "9373:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9354:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 563,
												"id": 569,
												"nodeType": "Return",
												"src": "9347:34:0"
											}
										]
									},
									"functionSelector": "dd62ed3e",
									"id": 571,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "9235:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9262:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "9254:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9254:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9285:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "9277:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 558,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9277:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9244:54:0"
									},
									"returnParameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "9328:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9328:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9327:9:0"
									},
									"scope": 854,
									"src": "9226:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 629,
										"nodeType": "Block",
										"src": "9530:334:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 582,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "9544:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 585,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9561:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 584,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9553:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 583,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9553:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 586,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9553:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9544:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 596,
												"nodeType": "IfStatement",
												"src": "9540:89:0",
												"trueBody": {
													"id": 595,
													"nodeType": "Block",
													"src": "9565:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 591,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9615:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 590,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9607:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 589,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9607:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 592,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9607:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 588,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 34,
																	"src": "9586:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 593,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9586:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 594,
															"nodeType": "RevertStatement",
															"src": "9579:39:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 597,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 575,
														"src": "9642:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 600,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9661:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 599,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9653:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 598,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9653:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 601,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9653:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9642:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 611,
												"nodeType": "IfStatement",
												"src": "9638:90:0",
												"trueBody": {
													"id": 610,
													"nodeType": "Block",
													"src": "9665:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 606,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9714:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 605,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9706:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 604,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9706:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 607,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9706:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 603,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 39,
																	"src": "9686:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 608,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9686:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 609,
															"nodeType": "RevertStatement",
															"src": "9679:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 612,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 151,
																"src": "9737:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 615,
															"indexExpression": {
																"id": 613,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 573,
																"src": "9749:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9737:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 616,
														"indexExpression": {
															"id": 614,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 575,
															"src": "9756:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9737:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 617,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 577,
														"src": "9767:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9737:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 619,
												"nodeType": "ExpressionStatement",
												"src": "9737:35:0"
											},
											{
												"condition": {
													"id": 620,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 579,
													"src": "9786:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "9782:76:0",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "9797:61:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 622,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 573,
																		"src": "9825:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 623,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 575,
																		"src": "9832:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 624,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 577,
																		"src": "9841:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 621,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 58,
																	"src": "9816:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9816:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 626,
															"nodeType": "EmitStatement",
															"src": "9811:36:0"
														}
													]
												}
											}
										]
									},
									"id": 630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9403:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9429:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "9421:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9421:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9452:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "9444:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9444:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9477:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "9469:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 576,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9469:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9497:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "9492:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 578,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9492:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9411:101:0"
									},
									"returnParameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9530:0:0"
									},
									"scope": 854,
									"src": "9394:470:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 637,
										"nodeType": "Block",
										"src": "9923:29:0",
										"statements": [
											{
												"expression": {
													"id": 635,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 123,
													"src": "9940:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 634,
												"id": 636,
												"nodeType": "Return",
												"src": "9933:12:0"
											}
										]
									},
									"functionSelector": "06fdde03",
									"id": 638,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "9879:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9883:2:0"
									},
									"returnParameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "9908:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 632,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9908:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9907:15:0"
									},
									"scope": 854,
									"src": "9870:82:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 645,
										"nodeType": "Block",
										"src": "10013:31:0",
										"statements": [
											{
												"expression": {
													"id": 643,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 125,
													"src": "10030:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 642,
												"id": 644,
												"nodeType": "Return",
												"src": "10023:14:0"
											}
										]
									},
									"functionSelector": "95d89b41",
									"id": 646,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "9967:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9973:2:0"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "9998:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 640,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9998:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9997:15:0"
									},
									"scope": 854,
									"src": "9958:86:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 653,
										"nodeType": "Block",
										"src": "10099:33:0",
										"statements": [
											{
												"expression": {
													"id": 651,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 129,
													"src": "10116:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 650,
												"id": 652,
												"nodeType": "Return",
												"src": "10109:16:0"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 654,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "10059:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10067:2:0"
									},
									"returnParameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "10092:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 648,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "10092:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10091:7:0"
									},
									"scope": 854,
									"src": "10050:82:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 665,
										"nodeType": "Block",
										"src": "10157:84:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 660,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 657,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "10175:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10179:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "10175:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 659,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 121,
																"src": "10189:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10175:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79204f776e657220636f6e206163746976617465",
															"id": 661,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10197:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cd606c362edffb7928e2c0a22255d099d9c34b5a7e01c09b5fd45c71671419c0",
																"typeString": "literal_string \"Only Owner con activate\""
															},
															"value": "Only Owner con activate"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cd606c362edffb7928e2c0a22255d099d9c34b5a7e01c09b5fd45c71671419c0",
																"typeString": "literal_string \"Only Owner con activate\""
															}
														],
														"id": 656,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10167:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10167:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 663,
												"nodeType": "ExpressionStatement",
												"src": "10167:56:0"
											},
											{
												"id": 664,
												"nodeType": "PlaceholderStatement",
												"src": "10233:1:0"
											}
										]
									},
									"id": 666,
									"name": "isOwner",
									"nameLocation": "10147:7:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10154:2:0"
									},
									"src": "10138:103:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 675,
										"nodeType": "Block",
										"src": "10266:80:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "10284:8:0",
															"subExpression": {
																"id": 669,
																"name": "_paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 131,
																"src": "10285:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e74726163742069732050417573656420427920746865204f776e6572",
															"id": 671,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10294:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_80bdb03162cdac4f69a5606b1b71af18d2a983a9d96bc24cd45e880fd4e35aa3",
																"typeString": "literal_string \"Contract is PAused By the Owner\""
															},
															"value": "Contract is PAused By the Owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_80bdb03162cdac4f69a5606b1b71af18d2a983a9d96bc24cd45e880fd4e35aa3",
																"typeString": "literal_string \"Contract is PAused By the Owner\""
															}
														],
														"id": 668,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10276:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10276:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 673,
												"nodeType": "ExpressionStatement",
												"src": "10276:52:0"
											},
											{
												"id": 674,
												"nodeType": "PlaceholderStatement",
												"src": "10338:1:0"
											}
										]
									},
									"id": 676,
									"name": "RPaused",
									"nameLocation": "10256:7:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10263:2:0"
									},
									"src": "10247:99:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "10372:125:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 684,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 680,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "10413:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 681,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10417:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "10413:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 679,
																	"name": "isFreezed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 853,
																	"src": "10403:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address) view returns (bool)"
																	}
																},
																"id": 682,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10403:21:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "66616c7365",
																"id": 683,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10428:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "10403:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4164647265737320697320667265657a656420",
															"id": 685,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10448:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d20a01f302ff9eb27a985520fd7c4646a30685fa767b089ac0f2975ef894fd64",
																"typeString": "literal_string \"Address is freezed \""
															},
															"value": "Address is freezed "
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d20a01f302ff9eb27a985520fd7c4646a30685fa767b089ac0f2975ef894fd64",
																"typeString": "literal_string \"Address is freezed \""
															}
														],
														"id": 678,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10382:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10382:97:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 687,
												"nodeType": "ExpressionStatement",
												"src": "10382:97:0"
											},
											{
												"id": 688,
												"nodeType": "PlaceholderStatement",
												"src": "10489:1:0"
											}
										]
									},
									"id": 690,
									"name": "isFreeze",
									"nameLocation": "10361:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10369:2:0"
									},
									"src": "10352:145:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 703,
										"nodeType": "Block",
										"src": "10598:34:0",
										"statements": [
											{
												"expression": {
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 699,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 121,
														"src": "10608:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 700,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 692,
														"src": "10617:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10608:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 702,
												"nodeType": "ExpressionStatement",
												"src": "10608:17:0"
											}
										]
									},
									"functionSelector": "b8f309c7",
									"id": 704,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 695,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 694,
												"name": "isOwner",
												"nameLocations": [
													"10572:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 666,
												"src": "10572:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "10572:7:0"
										}
									],
									"name": "TranferOwner",
									"nameLocation": "10512:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "10542:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "10534:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 691,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10534:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10524:32:0"
									},
									"returnParameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "10589:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 696,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10589:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10588:9:0"
									},
									"scope": 854,
									"src": "10503:129:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 711,
										"nodeType": "Block",
										"src": "10686:31:0",
										"statements": [
											{
												"expression": {
													"id": 709,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 131,
													"src": "10703:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 708,
												"id": 710,
												"nodeType": "Return",
												"src": "10696:14:0"
											}
										]
									},
									"functionSelector": "b187bd26",
									"id": 712,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isPaused",
									"nameLocation": "10647:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10655:2:0"
									},
									"returnParameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 712,
												"src": "10680:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 706,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10680:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10679:6:0"
									},
									"scope": 854,
									"src": "10638:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 733,
										"nodeType": "Block",
										"src": "10865:108:0",
										"statements": [
											{
												"expression": {
													"id": 721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 719,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 131,
														"src": "10875:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 720,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10885:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "10875:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 722,
												"nodeType": "ExpressionStatement",
												"src": "10875:14:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 724,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10911:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 725,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10915:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10911:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 726,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "10923:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 727,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10929:9:0",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "10923:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 728,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10940:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 723,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "10904:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,bool)"
														}
													},
													"id": 729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10904:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 730,
												"nodeType": "EmitStatement",
												"src": "10899:46:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 731,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10962:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 718,
												"id": 732,
												"nodeType": "Return",
												"src": "10955:11:0"
											}
										]
									},
									"functionSelector": "6985a022",
									"id": 734,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 715,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 714,
												"name": "isOwner",
												"nameLocations": [
													"10842:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 666,
												"src": "10842:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "10842:7:0"
										}
									],
									"name": "Pause",
									"nameLocation": "10819:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10824:2:0"
									},
									"returnParameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "10859:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 716,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10859:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10858:6:0"
									},
									"scope": 854,
									"src": "10810:163:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 753,
										"nodeType": "Block",
										"src": "11127:89:0",
										"statements": [
											{
												"expression": {
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 741,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 131,
														"src": "11137:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 742,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11147:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "11137:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 744,
												"nodeType": "ExpressionStatement",
												"src": "11137:15:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 746,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "11174:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 747,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11178:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "11174:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 748,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "11186:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11192:9:0",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "11186:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 750,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11203:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 745,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "11167:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,bool)"
														}
													},
													"id": 751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11167:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 752,
												"nodeType": "EmitStatement",
												"src": "11162:47:0"
											}
										]
									},
									"functionSelector": "f7b188a5",
									"id": 754,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 737,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 736,
												"name": "isOwner",
												"nameLocations": [
													"11104:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 666,
												"src": "11104:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "11104:7:0"
										}
									],
									"name": "unPause",
									"nameLocation": "11087:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11094:2:0"
									},
									"returnParameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "11121:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 738,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11121:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11120:6:0"
									},
									"scope": 854,
									"src": "11078:138:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 761,
										"nodeType": "Block",
										"src": "11284:36:0",
										"statements": [
											{
												"expression": {
													"id": 759,
													"name": "_freeTranfer",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 133,
													"src": "11301:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 758,
												"id": 760,
												"nodeType": "Return",
												"src": "11294:19:0"
											}
										]
									},
									"id": 762,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isFreeTranfer",
									"nameLocation": "11231:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 755,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11244:2:0"
									},
									"returnParameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "11278:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 756,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11278:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11277:6:0"
									},
									"scope": 854,
									"src": "11222:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "11466:120:0",
										"statements": [
											{
												"expression": {
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 769,
														"name": "_freeTranfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "11476:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 770,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11491:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "11476:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 772,
												"nodeType": "ExpressionStatement",
												"src": "11476:19:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 774,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "11524:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11528:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "11524:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 776,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "11536:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 777,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11542:9:0",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "11536:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 778,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11553:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 773,
														"name": "FreeTranfered",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "11510:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,bool)"
														}
													},
													"id": 779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11510:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 780,
												"nodeType": "EmitStatement",
												"src": "11505:53:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11575:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 768,
												"id": 782,
												"nodeType": "Return",
												"src": "11568:11:0"
											}
										]
									},
									"functionSelector": "1d4ca8bf",
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 765,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 764,
												"name": "isOwner",
												"nameLocations": [
													"11443:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 666,
												"src": "11443:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "11443:7:0"
										}
									],
									"name": "freeTranfer",
									"nameLocation": "11422:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11433:2:0"
									},
									"returnParameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "11460:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 766,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11460:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11459:6:0"
									},
									"scope": 854,
									"src": "11413:173:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 803,
										"nodeType": "Block",
										"src": "11747:101:0",
										"statements": [
											{
												"expression": {
													"id": 793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 791,
														"name": "_freeTranfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "11757:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 792,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11772:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "11757:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 794,
												"nodeType": "ExpressionStatement",
												"src": "11757:20:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 796,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "11806:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 797,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11810:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "11806:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 798,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "11818:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 799,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11824:9:0",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "11818:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 800,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11835:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 795,
														"name": "FreeTranfered",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "11792:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,bool)"
														}
													},
													"id": 801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11792:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 802,
												"nodeType": "EmitStatement",
												"src": "11787:54:0"
											}
										]
									},
									"functionSelector": "d6b70ac0",
									"id": 804,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 787,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 786,
												"name": "isOwner",
												"nameLocations": [
													"11724:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 666,
												"src": "11724:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "11724:7:0"
										}
									],
									"name": "unFreeTransfer",
									"nameLocation": "11700:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11714:2:0"
									},
									"returnParameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "11741:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 788,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11741:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11740:6:0"
									},
									"scope": 854,
									"src": "11691:157:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 821,
										"nodeType": "Block",
										"src": "11920:57:0",
										"statements": [
											{
												"expression": {
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 813,
															"name": "_freeze",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 145,
															"src": "11930:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 815,
														"indexExpression": {
															"id": 814,
															"name": "adr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 806,
															"src": "11938:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11930:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 816,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11945:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "11930:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 818,
												"nodeType": "ExpressionStatement",
												"src": "11930:19:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 819,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11966:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 812,
												"id": 820,
												"nodeType": "Return",
												"src": "11959:11:0"
											}
										]
									},
									"functionSelector": "1aa66049",
									"id": 822,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 809,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 808,
												"name": "isOwner",
												"nameLocations": [
													"11897:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 666,
												"src": "11897:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "11897:7:0"
										}
									],
									"name": "FreezeAddress",
									"nameLocation": "11863:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "adr",
												"nameLocation": "11885:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "11877:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 805,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11877:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11876:13:0"
									},
									"returnParameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "11914:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 810,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11914:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11913:6:0"
									},
									"scope": 854,
									"src": "11854:123:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 840,
										"nodeType": "Block",
										"src": "12051:92:0",
										"statements": [
											{
												"id": 837,
												"nodeType": "UncheckedBlock",
												"src": "12061:55:0",
												"statements": [
													{
														"expression": {
															"id": 835,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 831,
																	"name": "_freeze",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 145,
																	"src": "12085:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 833,
																"indexExpression": {
																	"id": 832,
																	"name": "adr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 824,
																	"src": "12093:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "12085:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"hexValue": "66616c7365",
																"id": 834,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12100:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "12085:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 836,
														"nodeType": "ExpressionStatement",
														"src": "12085:20:0"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 838,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12132:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 830,
												"id": 839,
												"nodeType": "Return",
												"src": "12125:11:0"
											}
										]
									},
									"functionSelector": "91e2c315",
									"id": 841,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 827,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 826,
												"name": "isOwner",
												"nameLocations": [
													"12028:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 666,
												"src": "12028:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "12028:7:0"
										}
									],
									"name": "UnFreezeAddress",
									"nameLocation": "11992:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "adr",
												"nameLocation": "12016:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "12008:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 823,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12008:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12007:13:0"
									},
									"returnParameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "12045:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 828,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12045:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12044:6:0"
									},
									"scope": 854,
									"src": "11983:160:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 852,
										"nodeType": "Block",
										"src": "12208:36:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 848,
														"name": "_freeze",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 145,
														"src": "12225:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 850,
													"indexExpression": {
														"id": 849,
														"name": "adr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 843,
														"src": "12233:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12225:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 847,
												"id": 851,
												"nodeType": "Return",
												"src": "12218:19:0"
											}
										]
									},
									"functionSelector": "8111f24e",
									"id": 853,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isFreezed",
									"nameLocation": "12158:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "adr",
												"nameLocation": "12176:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "12168:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 842,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12168:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12167:13:0"
									},
									"returnParameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "12202:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 845,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12202:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12201:6:0"
									},
									"scope": 854,
									"src": "12149:95:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 855,
							"src": "4536:7710:0",
							"usedErrors": [
								10,
								15,
								20,
								29,
								34,
								39
							],
							"usedEvents": [
								49,
								58,
								159,
								167
							]
						}
					],
					"src": "33:12214:0"
				},
				"id": 0
			}
		}
	}
}